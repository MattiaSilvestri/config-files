$mainMod = SUPER

bind = SUPER, grave, hyprexpo:expo, toggle # can be: toggle, off/disable or on/enable
bind = ALT, grave, overview:toggle

plugin {
    hyprexpo {
        columns = 3
        gap_size = 5
        bg_col = rgb(111111)
        workspace_method = first 1 # [center/first] [workspace] e.g. first 1 or center m+1

        enable_gesture = false # laptop touchpad
        gesture_fingers = 4  # 3 or 4
        gesture_distance = 300 # how far is the "max"
        gesture_positive = true # positive = swipe down. Negative = swipe up.
    }
}

plugin {
  overview {
    drawActiveWorkspace = true    
    centerAligned = true
  }
}

# # bind key to toggle overview (normal)
# bind = ALT,tab,hycov:toggleoverview
#
# # bind key to toggle overview (force mode, not affected by `only_active_workspace` or `only_active_monitor`)
# # bind = ALT,grave,hycov:toggleoverview,forceall #grave key is the '~' key
#
# # bind key to toggle overview (force mode, not affected by `only_active_workspace` or `only_active_monitor`)
# bind = ALT,grave,hycov:toggleoverview,onlycurrentworkspace
#
# # bind key to toggle overview (shows all windows in one monitor, not affected by `only_active_workspace` or `only_active_monitor`)
# bind = ALT,g,hycov:toggleoverview,forceallinone 
#
# # The key binding for directional switch mode.
# # Calculate the window closest to the direction to switch focus.
# # This keybind is applicable not only to the overview, but also to the general layout.
# bind=ALT,left,hycov:movefocus,l
# bind=ALT,right,hycov:movefocus,r
# bind=ALT,up,hycov:movefocus,u
# bind=ALT,down,hycov:movefocus,d
# bind=ALT,h,hycov:movefocus,l
# bind=ALT,l,hycov:movefocus,r
# bind=ALT,k,hycov:movefocus,u
# bind=ALT,j,hycov:movefocus,d

# if you want that focusmove can cross monitor, use this
# bind=ALT,left,hycov:movefocus,leftcross
# bind=ALT,right,hycov:movefocus,rightcross
# bind=ALT,up,hycov:movefocus,upcross
# bind=ALT,down,hycov:movefocus,downcross

plugin {
    hycov {
        overview_gappo = 60 # gaps width from screen edge
        overview_gappi = 24 # gaps width from clients
        enable_hotarea = 1 # enable mouse cursor hotarea, when cursor enter hotarea, it will toggle overview    
        enable_click_action = 1 # enable mouse left button jump and right button kill in overview mode
        hotarea_monitor = all # monitor name which hotarea is in, default is all
        hotarea_pos = 1 # position of hotarea (1: bottom left, 2: bottom right, 3: top left, 4: top right)
        hotarea_size = 10 # hotarea size, 10x10
        swipe_fingers = 4 # finger number of gesture,move any directory
        move_focus_distance = 100 # distance for movefocus,only can use 3 finger to move 
        enable_gesture = 0 # enable gesture
        auto_exit = 1 # enable auto exit when no client in overview
        auto_fullscreen = 0 # auto make active window maximize after exit overview
        only_active_workspace = 1 # only overview the active workspace
        only_active_monitor = 1 # only overview the active monitor
        enable_alt_release_exit = 0 # alt swith mode arg,see readme for detail
        alt_replace_key = Alt_L # alt swith mode arg,see readme for detail
        alt_toggle_auto_next = 0 # auto focus next window when toggle overview in alt swith mode
        click_in_cursor = 1 # when click to jump,the target windwo is find by cursor, not the current foucus window.
        hight_of_titlebar = 0 # height deviation of title bar height
        show_special = 0 # show windwos in special workspace in overview.
        raise_float_to_top = 1 # raise the window that is floating before to top after leave overview mode
    }
}

# plugin {
#     split-monitor-workspaces {
#         count = 5
#         keep_focused = 0
#         enable_notifications = 0
#         enable_persistent_workspaces = 1
#     }
# }
#
#
# # Switch workspaces with mainMod + [0-5]
# bind = $mainMod, 1, split-workspace, 1
# bind = $mainMod, 2, split-workspace, 2
# bind = $mainMod, 3, split-workspace, 3
# bind = $mainMod, 4, split-workspace, 4
# bind = $mainMod, 5, split-workspace, 5
# # Move active window to a workspace with ALT + [0-5]
# bind = ALT, 1, split-movetoworkspacesilent, 1
# bind = ALT, 2, split-movetoworkspacesilent, 2
# bind = ALT, 3, split-movetoworkspacesilent, 3
# bind = ALT, 4, split-movetoworkspacesilent, 4
# bind = ALT, 5, split-movetoworkspacesilent, 5

# SCROLLER
# --------
plugin {
    scroller {
        column_default_width = maximized
        focus_wrap = false
        column_widths = onefourth onethird onehalf onesixth
        monitor_options = (eDP-1 = (mode=col))
    }
}
# Move focus with mainMod + arrow keys
bind = $mainMod, home, scroller:movefocus, begin
bind = $mainMod, end, scroller:movefocus, end

# Movement
bind = $mainMod CTRL, home, scroller:movewindow, begin
bind = $mainMod CTRL, end, scroller:movewindow, end

# Modes
bind = $mainMod, bracketleft, scroller:setmode, row
bind = $mainMod, bracketright, scroller:setmode, col

# Sizing keys
bind = $mainMod, equal, scroller:cyclesize, next
bind = $mainMod, minus, scroller:cyclesize, prev

# Admit/Expel
bind = $mainMod, I, scroller:admitwindow,
bind = $mainMod, O, scroller:expelwindow,

# Center submap
# will switch to a submap called center
bind = $mainMod SHIFT, C, submap, center
# will start a submap called "center"
submap = center
# sets repeatable binds for resizing the active window
bind = , C, scroller:alignwindow, c
bind = , C, submap, reset
bind = , right, scroller:alignwindow, r
bind = , right, submap, reset
bind = , left, scroller:alignwindow, l
bind = , left, submap, reset
bind = , up, scroller:alignwindow, u
bind = , up, submap, reset
bind = , down, scroller:alignwindow, d
bind = , down, submap, reset
# use reset to go back to the global submap
bind = , escape, submap, reset
# will reset the submap, meaning end the current one and return to the global one
submap = reset

# Resize submap
# will switch to a submap called resize
bind = $mainMod SHIFT, R, submap, resize
# will start a submap called "resize"
submap = resize
# sets repeatable binds for resizing the active window
binde = , l, resizeactive, 100 0
binde = , h, resizeactive, -100 0
binde = , k, resizeactive, 0 -100
binde = , j, resizeactive, 0 100
# use reset to go back to the global submap
bind = , escape, submap, reset
# will reset the submap, meaning end the current one and return to the global one
submap = reset

# Fit size submap
# will switch to a submap called fitsize
bind = $mainMod, W, submap, fitsize
# will start a submap called "fitsize"
submap = fitsize
# sets binds for fitting columns/windows in the screen
bind = , W, scroller:fitsize, visible
bind = , W, submap, reset
bind = , right, scroller:fitsize, toend
bind = , right, submap, reset
bind = , left, scroller:fitsize, tobeg
bind = , left, submap, reset
bind = , up, scroller:fitsize, active
bind = , up, submap, reset
bind = , down, scroller:fitsize, all
bind = , down, submap, reset
# use reset to go back to the global submap
bind = , escape, submap, reset
# will reset the submap, meaning end the current one and return to the global one
submap = reset

# overview keys
# bind key to toggle overview (normal)
bind = $mainMod, tab, scroller:toggleoverview

# Marks
bind = $mainMod, M, submap, marksadd
submap = marksadd
bind = , a, scroller:marksadd, a
bind = , a, submap, reset
bind = , b, scroller:marksadd, b
bind = , b, submap, reset
bind = , c, scroller:marksadd, c
bind = , c, submap, reset
bind = , escape, submap, reset
submap = reset

bind = $mainMod SHIFT, M, submap, marksdelete
submap = marksdelete
bind = , a, scroller:marksdelete, a
bind = , a, submap, reset
bind = , b, scroller:marksdelete, b
bind = , b, submap, reset
bind = , c, scroller:marksdelete, c
bind = , c, submap, reset
bind = , escape, submap, reset
submap = reset

bind = $mainMod, apostrophe, submap, marksvisit
submap = marksvisit
bind = , a, scroller:marksvisit, a
bind = , a, submap, reset
bind = , b, scroller:marksvisit, b
bind = , b, submap, reset
bind = , c, scroller:marksvisit, c
bind = , c, submap, reset
bind = , escape, submap, reset
submap = reset

bind = $mainMod CTRL, M, scroller:marksreset

# Pin and Unpin
# bind = $mainMod, P, scroller:pin,
# bind = $mainMod SHIFT, P, scroller:unpin,
