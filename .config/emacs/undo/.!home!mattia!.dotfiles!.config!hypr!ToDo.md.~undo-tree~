(undo-tree-save-format-version . 1)
"71c8b3af511a26d2e42fc3f93ef505442d0fedca"
[nil nil nil nil (25407 56508 47569 768000) 0 nil]
([nil nil ((390 . 395) (#("e" 0 1 (fontified t markdown-list-item ((364 391 0 2 "- " "[ ] " (364 370 364 364 364 365 365 366 366 370))))) . -390) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("a" 0 1 (fontified t markdown-list-item ((364 392 0 2 "- " "[ ] " (364 370 364 364 364 365 365 366 366 370))))) . -391) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("n" 0 1 (fontified t markdown-list-item ((364 393 0 2 "- " "[ ] " (364 370 364 364 364 365 365 366 366 370))))) . -392) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("g" 0 1 (fontified t markdown-list-item ((364 394 0 2 "- " "[ ] " (364 370 364 364 364 365 365 366 366 370))))) . -393) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#("e" 0 1 (fontified t markdown-list-item ((364 395 0 2 "- " "[ ] " (364 370 364 364 364 365 365 366 366 370))))) . -394) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("r" 0 1 (fontified t markdown-list-item ((364 396 0 2 "- " "[ ] " (364 370 364 364 364 365 365 366 366 370))))) . -395) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) 396 (391 . 396) (370 . 391) (nil markdown-list-item nil 364 . 370) (364 . 370) (363 . 364) (t 25407 55976 793392 925000) 340) nil (25410 41938 936814 330000) 0 nil])
([nil nil ((419 . 423) (#("fo" 0 1 (markdown-list-item ((396 420 0 2 "- " "[ ] " (396 402 396 396 396 397 397 398 398 402))) fontified nil) 1 2 (markdown-list-item ((396 421 0 2 "- " "[ ] " (396 402 396 396 396 397 397 398 398 402))) fontified nil)) . 419) (411 . 421) (#("s" 0 1 (markdown-list-item ((396 412 0 2 "- " "[ ] " (396 402 396 396 396 397 397 398 398 402))) fontified nil)) . 411) (402 . 412) (nil markdown-list-item nil 396 . 397) (nil markdown-list-item nil 397 . 402) (395 . 402)) ((#("
" 0 1 (fontified nil font-lock-multiline t)) . 395) (#("- [ ] " 0 1 (markdown-list-item nil fontified nil face markdown-list-face) 1 6 (markdown-list-item nil fontified nil)) . 396) (undo-tree-id0 . 4) (undo-tree-id1 . -5) (undo-tree-id2 . 4) (undo-tree-id3 . -5) (undo-tree-id4 . 4) (undo-tree-id5 . -5) (undo-tree-id6 . 4) (undo-tree-id7 . -5) (undo-tree-id8 . 4) (undo-tree-id9 . -5) (undo-tree-id10 . 4) (undo-tree-id11 . -5) (undo-tree-id12 . 4) (undo-tree-id13 . -5) (undo-tree-id14 . 4) (undo-tree-id15 . -5) (nil markdown-list-item ((396 423 0 2 "- " "[ ] " (396 402 396 396 396 397 397 398 398 402))) 397 . 402) (nil markdown-list-item ((396 423 0 2 "- " "[ ] " (396 402 396 396 396 397 397 398 398 402))) 396 . 397) (#("Better dis" 0 9 (markdown-list-item ((396 423 0 2 "- " "[ ] " (396 402 396 396 396 397 397 398 398 402))) fontified nil) 9 10 (markdown-list-item ((396 412 0 2 "- " "[ ] " (396 402 396 396 396 397 397 398 398 402))) fontified nil)) . 402) (411 . 412) (#("alog winfo" 0 8 (markdown-list-item ((396 423 0 2 "- " "[ ] " (396 402 396 396 396 397 397 398 398 402))) fontified nil) 8 9 (markdown-list-item ((396 420 0 2 "- " "[ ] " (396 402 396 396 396 397 397 398 398 402))) fontified nil) 9 10 (markdown-list-item ((396 421 0 2 "- " "[ ] " (396 402 396 396 396 397 397 398 398 402))) fontified nil)) . 411) (419 . 421) (#("dows" 0 4 (markdown-list-item ((396 423 0 2 "- " "[ ] " (396 402 396 396 396 397 397 398 398 402))) fontified t)) . 419) (t 25407 58070 602129 160000)) (25410 41941 584848 362000) 0 nil])
([nil nil ((433 . 434) (428 . 433) (#("O" 0 1 (fontified t markdown-heading (425 429 nil nil nil nil nil nil 425 428 428 429 429 429 #<buffer ToDo.md>) markdown-heading-2-atx (425 429 nil nil nil nil nil nil 425 428 428 429 429 429 #<buffer ToDo.md>) face markdown-header-face-2 font-lock-multiline t)) . -428) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("r" 0 1 (fontified t markdown-heading (425 430 nil nil nil nil nil nil 425 428 428 430 430 430 #<buffer ToDo.md>) markdown-heading-2-atx (425 430 nil nil nil nil nil nil 425 428 428 430 430 430 #<buffer ToDo.md>) face markdown-header-face-2 font-lock-multiline t)) . -429) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("i" 0 1 (fontified t markdown-heading (425 431 nil nil nil nil nil nil 425 428 428 431 431 431 #<buffer ToDo.md>) markdown-heading-2-atx (425 431 nil nil nil nil nil nil 425 428 428 431 431 431 #<buffer ToDo.md>) face markdown-header-face-2 font-lock-multiline t)) . -430) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("v" 0 1 (fontified t markdown-heading (425 432 nil nil nil nil nil nil 425 428 428 432 432 432 #<buffer ToDo.md>) markdown-heading-2-atx (425 432 nil nil nil nil nil nil 425 428 428 432 432 432 #<buffer ToDo.md>) face markdown-header-face-2 font-lock-multiline t)) . -431) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("a" 0 1 (fontified t markdown-heading (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) markdown-heading-2-atx (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) face markdown-header-face-2 font-lock-multiline t)) . -432) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) 433 (425 . 433) (#("$" 0 1 (fontified t)) . -425) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("$" 0 1 (fontified t)) . -426) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#(" " 0 1 (fontified t)) . -427) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 428 (425 . 428) (424 . 425) (t 25407 58070 602129 160000)) nil (25410 42480 422172 793000) 0 nil])
([nil current ((#("## Prova
" 0 2 (fontified t markdown-heading (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) markdown-heading-2-atx (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) face markdown-header-delimiter-face) 2 3 (fontified t markdown-heading (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) markdown-heading-2-atx (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) face markdown-header-delimiter-face) 3 4 (fontified t markdown-heading (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) markdown-heading-2-atx (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) face markdown-header-face-2) 4 5 (fontified t markdown-heading (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) markdown-heading-2-atx (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) face markdown-header-face-2) 5 6 (fontified t markdown-heading (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) markdown-heading-2-atx (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) face markdown-header-face-2) 6 7 (fontified t markdown-heading (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) markdown-heading-2-atx (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) face markdown-header-face-2) 7 8 (fontified t markdown-heading (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) markdown-heading-2-atx (425 433 nil nil nil nil nil nil 425 428 428 433 433 433 #<buffer ToDo.md>) face markdown-header-face-2) 8 9 (fontified t font-lock-multiline t)) . 425) (undo-tree-id227 . -9) (undo-tree-id228 . -9) (undo-tree-id229 . 6) (undo-tree-id230 . -8) (undo-tree-id231 . -9) (undo-tree-id232 . -9) (undo-tree-id233 . -9) (undo-tree-id234 . -9) (undo-tree-id235 . -9) (undo-tree-id236 . -9) (undo-tree-id237 . -9) (undo-tree-id238 . -9) (undo-tree-id239 . -9) (undo-tree-id240 . -9) (undo-tree-id241 . -9) (undo-tree-id242 . -9) (undo-tree-id243 . -9) (undo-tree-id244 . -9) (undo-tree-id245 . -9) (undo-tree-id246 . -9) (undo-tree-id247 . -9) (undo-tree-id248 . -9) (undo-tree-id249 . -9) (undo-tree-id250 . -9) (undo-tree-id251 . -9) (undo-tree-id252 . -9) (undo-tree-id253 . -9) (undo-tree-id254 . -9) (undo-tree-id255 . -9) (undo-tree-id256 . -9) (undo-tree-id257 . -9) (undo-tree-id258 . -9) (undo-tree-id259 . -9) (undo-tree-id260 . -9) (undo-tree-id261 . -9) (undo-tree-id262 . -9) (t 25410 42480 425496 599000)) nil (25410 42489 683837 61000) 0 nil])
nil
