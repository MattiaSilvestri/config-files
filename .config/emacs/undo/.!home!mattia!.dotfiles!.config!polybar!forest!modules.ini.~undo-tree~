(undo-tree-save-format-version . 1)
"cd9feb6292a08a465f0ca8227abb94da187fa529"
[nil nil nil nil (25379 24467 318358 475000) 0 nil]
([nil nil ((26585 . 26586) (t 25098 24371 415363 950000) 26562) nil (25379 24467 318355 284000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26586 . 26587) (#("
" 0 1 (fontified nil)) . -28235) (26586 . 28236)) nil (25379 24467 318427 156000) 0 nil])
([nil nil ((27537 . 27547) (#("BACKGROUND" 0 10 (fontified t)) . 27537) 27546) nil (25379 24526 9363 279000) 0 nil] [nil nil ((#("BACKGROUND" 0 10 (fontified t)) . 27537)) ((27537 . 27547)) (25379 24467 318342 838000) 0 nil])
([nil nil ((27584 . 27588) (#("BLUE" 0 4 (fontified t)) . 27584) 27587) nil (25379 24526 9361 142000) 0 nil])
nil
([nil nil ((27717 . 27727) (#("BACKGROUND" 0 10 (fontified t)) . 27717) 27726) nil (25379 24526 9359 175000) 0 nil])
([nil nil ((27765 . 27770) (#("GREEN" 0 5 (fontified t)) . 27765) 27769) nil (25379 24526 9357 105000) 0 nil])
([nil nil ((27899 . 27909) (#("BACKGROUND" 0 10 (fontified t)) . 27899) 27908) nil (25379 24526 9355 45000) 0 nil])
([nil nil ((27945 . 27948) (#("RED" 0 3 (fontified t)) . 27945) 27947) nil (25379 24526 9352 976000) 0 nil])
([nil nil ((28069 . 28079) (#("FOREGROUND" 0 10 (fontified t)) . 28069) 28078) nil (25379 24526 9350 858000) 0 nil])
([nil nil ((28236 . 28237) (28235 . 28236) 28223) nil (25379 24526 9348 971000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28236 . 28237) (#("
" 0 1 (fontified nil)) . -28603) (28236 . 28604)) nil (25379 24526 9346 85000) 0 nil])
([nil nil ((28323 . 28329) (#("YELLOW" 0 6 (fontified t)) . 28323) 28328) nil (25379 24526 9342 924000) 0 nil])
([nil nil ((28359 . 28369) (#("BACKGROUND" 0 10 (fontified t)) . 28359) 28368) nil (25379 24526 9335 349000) 0 nil])
([nil nil ((28323 . 28327) (#("yellow" 0 6 (fontified t)) . 28323) (undo-tree-id222 . 5) (t 25379 24526 18460 777000)) nil (25379 24924 935614 963000) 0 nil])
([nil nil ((28328 . 28333) (28327 . 28328)) nil (25379 24924 935609 704000) 0 nil])
([nil nil ((28367 . 28373) (28366 . 28367) (#("r" 0 1 (fontified t)) . -28366) (undo-tree-id217 . -1) (#("e" 0 1 (fontified t)) . -28367) (undo-tree-id218 . -1) 28368 (28366 . 28368) (#("r" 0 1 (fontified t)) . -28366) (undo-tree-id219 . -1) (#("e" 0 1 (fontified t)) . -28367) (undo-tree-id220 . -1) 28368 (28363 . 28368) (#("background" 0 10 (fontified t)) . 28363) (undo-tree-id221 . -9)) nil (25379 24924 935603 668000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28029 . 28030) (nil fontified nil 28029 . 28030) (28029 . 28030) 28035 (#("%name%" 0 6 (fontified t)) . 28029) (undo-tree-id196 . -6) (undo-tree-id197 . -5) (undo-tree-id198 . -5) (undo-tree-id199 . -5) (undo-tree-id200 . -5) (undo-tree-id201 . -5) (undo-tree-id202 . -5) (undo-tree-id203 . -5) (undo-tree-id204 . -5) (undo-tree-id205 . -5) (undo-tree-id206 . -5) (undo-tree-id207 . -5) (undo-tree-id208 . -5) (undo-tree-id209 . -6) (undo-tree-id210 . -5) (undo-tree-id211 . -5) (undo-tree-id212 . -5) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -6) 28035) nil (25379 24924 935570 921000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27858 . 27859) (nil fontified nil 27858 . 27859) (27858 . 27859) 27864 (#("%name%" 0 6 (fontified t)) . 27858) (undo-tree-id180 . -6) (undo-tree-id181 . -5) (undo-tree-id182 . -5) (undo-tree-id183 . -5) (undo-tree-id184 . -5) (undo-tree-id185 . -5) (undo-tree-id186 . -5) (undo-tree-id187 . -5) (undo-tree-id188 . -6) (undo-tree-id189 . -5) (undo-tree-id190 . -5) (undo-tree-id191 . -5) (undo-tree-id192 . -5) (undo-tree-id193 . -5) (undo-tree-id194 . -5) (undo-tree-id195 . -6) 27864) nil (25379 24924 935523 823000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27679 . 27680) (nil fontified nil 27674 . 27680) (27674 . 27680) 27680 (#("%name%" 0 6 (fontified t)) . 27674) (undo-tree-id164 . -6) (undo-tree-id165 . -5) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -5) (undo-tree-id171 . -5) (undo-tree-id172 . -6) (undo-tree-id173 . -5) (undo-tree-id174 . -5) (undo-tree-id175 . -5) (undo-tree-id176 . -5) (undo-tree-id177 . -5) (undo-tree-id178 . -5) (undo-tree-id179 . -6) 27680) nil (25379 24924 935346 556000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27674 . 27675) (nil fontified nil 27674 . 27675) (27674 . 27675) 27680 (#("%name%" 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . 27674) (undo-tree-id97 . -6) (undo-tree-id98 . -5) (undo-tree-id99 . -5) (undo-tree-id100 . -5) (undo-tree-id101 . -5) (undo-tree-id102 . -5) (undo-tree-id103 . -5) (undo-tree-id104 . -5) (undo-tree-id105 . -5) (undo-tree-id106 . -5) (undo-tree-id107 . -5) (undo-tree-id108 . -5) (undo-tree-id109 . -5) (undo-tree-id110 . -5) (undo-tree-id111 . -5) (undo-tree-id112 . -5) (undo-tree-id113 . -5) (undo-tree-id114 . -5) (undo-tree-id115 . -5) (undo-tree-id116 . -5) (undo-tree-id117 . -5) (undo-tree-id118 . -5) (undo-tree-id119 . -5) (undo-tree-id120 . -5) (undo-tree-id121 . -5) (undo-tree-id122 . -5) (undo-tree-id123 . -5) (undo-tree-id124 . -5) (undo-tree-id125 . -5) (undo-tree-id126 . -5) (undo-tree-id127 . -5) (undo-tree-id128 . -5) (undo-tree-id129 . -5) (undo-tree-id130 . -5) (undo-tree-id131 . -5) (undo-tree-id132 . -5) (undo-tree-id133 . -5) (undo-tree-id134 . -5) (undo-tree-id135 . -5) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -6) (undo-tree-id157 . -5) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -5) (undo-tree-id163 . -6) 27680) nil (25379 24924 933550 512000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27495 . 27496) (nil fontified nil 27495 . 27496) (27495 . 27496) (#("%name%" 0 6 (fontified t)) . 27495) (undo-tree-id83 . -6) (undo-tree-id84 . -5) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -6) (undo-tree-id91 . -5) (undo-tree-id92 . -5) (undo-tree-id93 . -5) (undo-tree-id94 . -5) (undo-tree-id95 . -5) (undo-tree-id96 . -5)) nil (25379 24924 932199 76000) 0 nil])
([nil nil ((27582 . 27589) (27579 . 27582) (#("blue" 0 4 (fontified t)) . 27579)) nil (25379 24924 932182 147000) 0 nil])
([nil nil ((27765 . 27771) (27761 . 27765) (#("green" 0 5 (fontified t)) . 27761) (undo-tree-id73 . -5) (undo-tree-id74 . -5) (undo-tree-id75 . -5) (undo-tree-id76 . -5) (undo-tree-id77 . -5) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -5)) nil (25379 24924 932179 108000) 0 nil])
([nil nil ((27943 . 27951) (27941 . 27943) (#("red" 0 3 (fontified t)) . 27941) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3)) nil (25379 24924 932165 175000) 0 nil])
([nil nil ((27532 . 27536) (#("background" 0 10 (fontified t)) . 27532) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8)) nil (25379 24924 932149 296000) 0 nil])
([nil nil ((27709 . 27711) (#("e" 0 1 (fontified t)) . -27709) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 27710 (27707 . 27710) (#("background" 0 10 (fontified t)) . 27707) (undo-tree-id27 . -9) (undo-tree-id28 . -9) (undo-tree-id29 . -9) (undo-tree-id30 . -8) (undo-tree-id31 . -8) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -7) (undo-tree-id36 . -7) (undo-tree-id37 . -7) (undo-tree-id38 . -7) (undo-tree-id39 . -7) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -10) (undo-tree-id51 . -9) (undo-tree-id52 . -9) (undo-tree-id53 . -9) (undo-tree-id54 . -9) (undo-tree-id55 . -9) (undo-tree-id56 . -9) (undo-tree-id57 . -9) 27716) nil (25379 24924 932136 784000) 0 nil])
([nil nil ((27712 . 27717) (27711 . 27712)) nil (25379 24924 932092 123000) 0 nil])
([nil nil ((27889 . 27893) (#("background" 0 10 (fontified t)) . 27889) (undo-tree-id0 . -10) (undo-tree-id1 . -10) (undo-tree-id2 . -10) (undo-tree-id3 . -10) (undo-tree-id4 . -10) (undo-tree-id5 . -9) (undo-tree-id6 . -9) (undo-tree-id7 . -9) (undo-tree-id8 . -9) (undo-tree-id9 . -9) (undo-tree-id10 . -10) (undo-tree-id11 . -10) (undo-tree-id12 . -10) (undo-tree-id13 . -10) (undo-tree-id14 . -10) (undo-tree-id15 . -10) (undo-tree-id16 . -10) (undo-tree-id17 . -10) (undo-tree-id18 . -10) (undo-tree-id19 . -10)) nil (25379 24924 932087 263000) 0 nil])
([nil nil ((27894 . 27899) (27893 . 27894)) nil (25379 24924 932038 185000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 28151) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (t 25379 24924 943054 574000)) nil (25379 24955 216594 410000) 0 nil])
([nil nil ((28535 . 28541) (28534 . 28536) (28529 . 28534) (28527 . 28529) (#("m" 0 1 (fontified t)) . -28527) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (#("a" 0 1 (fontified t)) . -28528) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("s" 0 1 (fontified t)) . -28529) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (#("w" 0 1 (fontified t)) . -28530) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#("t" 0 1 (fontified t)) . -28531) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (#("e" 0 1 (fontified t)) . -28532) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (#("r" 0 1 (fontified t)) . -28533) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) 28534 (28531 . 28534) (#("r" 0 1 (fontified t)) . -28531) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (#("e" 0 1 (fontified t)) . -28532) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) 28533 (28521 . 28533) (28520 . 28521) (t 25379 24955 229288 675000) 28512) nil (25379 25336 71990 757000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . 28535) (t 25379 25336 78978 530000)) nil (25379 25370 421808 36000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 28535) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1)) nil (25379 25378 163468 742000) 0 nil])
([nil nil ((#("label-tall = \"Tall\"
" 0 10 (fontified t face font-lock-variable-name-face) 10 13 (fontified t) 13 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t)) . 28521) (undo-tree-id721 . 2) (undo-tree-id722 . -20) (undo-tree-id723 . -14) (undo-tree-id724 . -14) (undo-tree-id725 . -14) (undo-tree-id726 . -14) (undo-tree-id727 . -14) (undo-tree-id728 . -14) (undo-tree-id729 . -14) (undo-tree-id730 . -14) (undo-tree-id731 . -14) (undo-tree-id732 . -14) (undo-tree-id733 . -14) (undo-tree-id734 . -14) (undo-tree-id735 . -14) (undo-tree-id736 . -14) (undo-tree-id737 . -14) (undo-tree-id738 . -14) (undo-tree-id739 . -14) (undo-tree-id740 . -14) (undo-tree-id741 . -14) (undo-tree-id742 . -14) (undo-tree-id743 . -14) (undo-tree-id744 . -14) (undo-tree-id745 . -14) (undo-tree-id746 . -14) (undo-tree-id747 . -14) (undo-tree-id748 . -14) (undo-tree-id749 . -14) (undo-tree-id750 . -14) (undo-tree-id751 . -14) (undo-tree-id752 . -14) (undo-tree-id753 . -14) (undo-tree-id754 . -14) (undo-tree-id755 . -14) (undo-tree-id756 . -14) (undo-tree-id757 . -14) (undo-tree-id758 . -14) (undo-tree-id759 . -14) (undo-tree-id760 . -14) (undo-tree-id761 . -14) (undo-tree-id762 . -14) (undo-tree-id763 . -14) (undo-tree-id764 . -14) (undo-tree-id765 . -14) (undo-tree-id766 . -14) (undo-tree-id767 . -14) (undo-tree-id768 . -14) (undo-tree-id769 . -14) (undo-tree-id770 . -14) (undo-tree-id771 . -14) (undo-tree-id772 . -14) (undo-tree-id773 . -14) (undo-tree-id774 . -14) (undo-tree-id775 . -14) 28535 (t 25379 25370 433838 768000)) nil (25379 25385 828547 498000) 0 nil] [nil nil ((#("label-fullscreen = \", Full\"
label-tall = \"Tall\"
" 0 16 (fontified t face font-lock-variable-name-face) 16 19 (fontified t) 19 27 (fontified t face font-lock-string-face) 27 28 (fontified t) 28 38 (fontified t face font-lock-variable-name-face) 38 41 (fontified t) 41 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t)) . 28493) (undo-tree-id679 . -19) (undo-tree-id680 . 2) (undo-tree-id681 . -19) (undo-tree-id682 . -19) (undo-tree-id683 . -28) (undo-tree-id684 . -48) (undo-tree-id685 . -42) (undo-tree-id686 . -42) (undo-tree-id687 . -42) (undo-tree-id688 . -42) (undo-tree-id689 . -42) (undo-tree-id690 . -42) (undo-tree-id691 . -42) (undo-tree-id692 . -28) (undo-tree-id693 . -42) (undo-tree-id694 . -42) (undo-tree-id695 . -42) (undo-tree-id696 . -42) (undo-tree-id697 . -42) (undo-tree-id698 . -42) (undo-tree-id699 . -42) (undo-tree-id700 . -42) (undo-tree-id701 . -42) (undo-tree-id702 . -42) (undo-tree-id703 . -42) (undo-tree-id704 . -42) (undo-tree-id705 . -42) (undo-tree-id706 . -42) (undo-tree-id707 . -42) (undo-tree-id708 . -42) (undo-tree-id709 . -42) (undo-tree-id710 . -42) (undo-tree-id711 . -42) (undo-tree-id712 . -42) (undo-tree-id713 . -42) 28535 (t 25379 25370 433838 768000)) ((28493 . 28541)) (25379 25378 162478 962000) 0 nil])
([nil nil ((28433 . 28434) 28412) nil (25379 25385 828489 146000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 28433 . 28434) (#("
" 0 1 (fontified nil)) . -28453) (28433 . 28454) 28412) nil (25379 25385 828486 576000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 28454) (undo-tree-id714 . 1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1)) nil (25379 25385 828480 365000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17252 . 17253) (#("
" 0 1 (face font-lock-string-face fontified nil)) . -17266) (17252 . 17267) 17239 (t 25379 25385 834523 272000)) nil (25379 25834 555199 249000) 0 nil])
([nil nil ((apply -2 17239 17255 undo--wrap-and-run-primitive-undo 17239 17255 ((17239 . 17241)))) nil (25379 25834 555196 796000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17267 . 17268) (nil fontified nil 17267 . 17268) (17267 . 17268) 17268 (#("" 0 1 (fontified t face font-lock-string-face)) . 17267) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) 17268) nil (25379 25834 555194 351000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17320 . 17321) (#("
" 0 1 (face font-lock-string-face fontified nil)) . -17335) (17320 . 17336) 17306) nil (25379 25834 555186 606000) 0 nil])
([nil nil ((apply -2 17306 17323 undo--wrap-and-run-primitive-undo 17306 17323 ((17306 . 17308)))) nil (25379 25834 555183 330000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17336 . 17337) (nil fontified nil 17336 . 17337) (17336 . 17337) 17337 (#("" 0 1 (fontified t face font-lock-string-face)) . 17336) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) 17337) nil (25379 25902 627550 594000) 0 nil])
([nil nil ((#("It's " 0 2 (fontified t) 2 5 (fontified t face font-lock-string-face)) . 9979) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (undo-tree-id820 . -4) (undo-tree-id821 . -4) (undo-tree-id822 . -2) (undo-tree-id823 . -2) (undo-tree-id824 . -2) (undo-tree-id825 . -2) (undo-tree-id826 . -2) (undo-tree-id827 . -2) (undo-tree-id828 . -2) (undo-tree-id829 . -2) (undo-tree-id830 . -2) (undo-tree-id831 . -2) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -2) (undo-tree-id838 . -2) (undo-tree-id839 . -2) (undo-tree-id840 . -2) (undo-tree-id841 . -2) (undo-tree-id842 . -3) (undo-tree-id843 . -3) (undo-tree-id844 . -3) (undo-tree-id845 . -3) (undo-tree-id846 . -3) (undo-tree-id847 . -4) (undo-tree-id848 . -4) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -4) (undo-tree-id854 . -4) (undo-tree-id855 . -4) (undo-tree-id856 . -4) (undo-tree-id857 . -4) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) (undo-tree-id862 . -4) (undo-tree-id863 . -4) (undo-tree-id864 . -4) (undo-tree-id865 . -4) (undo-tree-id866 . -4) (undo-tree-id867 . -4) (undo-tree-id868 . -4) (undo-tree-id869 . -4) (undo-tree-id870 . -4) (undo-tree-id871 . -4) (undo-tree-id872 . -4) (t 25379 25834 569563 554000)) ((9979 . 9984)) (25379 25904 550864 665000) 0 nil])
([nil nil ((13647 . 13648) (#("
" 0 1 (fontified t face font-lock-comment-face)) . -13647) (undo-tree-id873 . -1) (13621 . 13622) (#("
" 0 1 (fontified t face font-lock-comment-face)) . -13621) (undo-tree-id874 . -1) 13620) nil (25379 25958 224525 610000) 0 nil])
([nil nil ((apply -2 16681 16709 undo--wrap-and-run-primitive-undo 16681 16709 ((16681 . 16683) 16704)) (t 25379 25958 234773 771000)) nil (25379 26087 967140 131000) 0 nil])
([nil current ((apply -2 16415 16442 undo--wrap-and-run-primitive-undo 16415 16442 ((16415 . 16417)))) nil (25379 26087 967132 699000) 0 nil])
nil
