(undo-tree-save-format-version . 1)
"498fa98533cd0cd92c11425940def52458b237c4"
[nil nil nil nil (25428 19439 818808 785000) 0 nil]
([nil nil ((nil rear-nonsticky nil 4396 . 4397) (nil fontified nil 4396 . 4397) (4396 . 4397) 4397 (#("􏆲" 0 1 (face font-lock-string-face fontified t)) . 4396) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 4397 (t 25427 45953 377825 218000)) nil (25428 19439 818803 317000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4396 . 4397) (nil fontified nil 4396 . 4397) (4396 . 4397) 4397 (#("" 0 1 (face font-lock-string-face rear-nonsticky t fontified t)) . 4396) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 4397 (t 25428 19439 822917 706000)) nil (25428 19936 775082 434000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4396 . 4397) (nil fontified nil 4396 . 4397) (4396 . 4397) 4397 (#("" 0 1 (face font-lock-string-face rear-nonsticky t fontified t)) . 4396) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 4397) nil (25428 19936 775075 622000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4396 . 4397) (nil fontified nil 4396 . 4397) (4396 . 4397) 4397 (#("" 0 1 (face font-lock-string-face rear-nonsticky t fontified t)) . 4396) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 4397) nil (25428 19936 775068 595000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4396 . 4397) (nil fontified nil 4396 . 4397) (4396 . 4397) 4397 (#("" 0 1 (face font-lock-string-face rear-nonsticky t fontified t)) . 4396) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 4397) nil (25428 19936 775061 915000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4396 . 4397) (nil fontified nil 4396 . 4397) (4396 . 4397) 4397 (#("" 0 1 (face font-lock-string-face rear-nonsticky t fontified t)) . 4396) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 4397) nil (25428 19936 775054 716000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4396 . 4397) (nil fontified nil 4396 . 4397) (4396 . 4397) 4397 (#("" 0 1 (face font-lock-string-face rear-nonsticky t fontified t)) . 4396) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 4397) nil (25428 19936 775043 659000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4396 . 4397) (nil fontified nil 4396 . 4397) (4396 . 4397) 4397 (#("" 0 1 (face font-lock-string-face rear-nonsticky t fontified t)) . 4396) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 4397 (t 25428 19936 794113 678000)) nil (25428 20029 136856 328000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4396 . 4397) (nil fontified nil 4396 . 4397) (4396 . 4397) 4397 (#("" 0 1 (face font-lock-string-face rear-nonsticky t fontified t)) . 4396) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 4397) nil (25428 20029 136849 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4396 . 4397) (nil fontified nil 4396 . 4397) (4396 . 4397) 4397 (#("" 0 1 (face font-lock-string-face rear-nonsticky t fontified t)) . 4396) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 4397) nil (25428 20029 136841 808000) 0 nil])
([nil nil ((4397 . 4398)) nil (25428 20029 136823 506000) 0 nil])
([nil nil ((3298 . 3299) (t 25428 20029 147664 20000)) nil (25428 20116 183178 749000) 0 nil])
([nil nil ((3036 . 3037)) nil (25428 20116 183172 114000) 0 nil])
([nil nil ((530 . 537) (531 . 532) (#("." 0 1 (fontified t)) . -531) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("B" 0 1 (fontified t)) . -532) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("N" 0 1 (fontified t)) . -533) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 534 (531 . 534) (#("." 0 1 (fontified t)) . -531) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) 532 (531 . 533) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . 531) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (530 . 531) (529 . 531) (527 . 529) (523 . 526) (517 . 523) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . 518) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (517 . 518) (516 . 518) (#("b" 0 1 (fontified t)) . -516) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("a" 0 1 (fontified t)) . -517) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("k" 0 1 (fontified t)) . -518) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 519 (516 . 519) (t 25428 20116 194534 288000)) nil (25428 20281 417397 543000) 0 nil])
([nil nil ((#("		" 0 1 (fontified t) 1 2 (face font-lock-variable-name-face fontified t)) . -1450) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) 1452 (1449 . 1452) (t 25428 20281 424588 391000) 1448) nil (25428 20469 996670 847000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1451 . 1452) (#("
" 0 1 (fontified nil)) . -1675) (1450 . 1676)) nil (25428 20469 996642 898000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1450) (undo-tree-id265 . -1) (undo-tree-id266 . -1)) nil (25428 20469 996763 380000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -1679) (1677 . 1679) (#("		" 0 2 (fontified nil)) . -1674) (1671 . 1674) (#("					 " 0 6 (fontified nil)) . -1644) (1638 . 1644) (#("		" 0 2 (fontified nil)) . -1620) (1617 . 1620) (#("		" 0 2 (fontified nil)) . -1552) (1549 . 1552) (#("		" 0 2 (fontified nil)) . -1509) (1506 . 1509) (#("		" 0 2 (fontified nil)) . -1470) (1467 . 1470) (#("	" 0 1 (rear-nonsticky t fontified nil)) . -1452) (1450 . 1452) 1675) nil (25428 20485 689341 811000) 0 nil] [nil nil ((#("	},
" 0 1 (fontified t) 1 3 (face font-lock-variable-name-face fontified t) 3 4 (fontified t)) . 1671) (undo-tree-id254 . -3) (undo-tree-id255 . -3) (undo-tree-id256 . 1) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4)) ((1671 . 1675)) (25428 20469 996631 98000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3104 . 3105) (nil fontified nil 3104 . 3105) (3104 . 3105) 3105 (#("" 0 1 (face font-lock-string-face fontified t)) . 3104) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) 3105 (t 25428 20485 701194 780000)) nil (25428 23180 440489 604000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3094 . 3095) (nil fontified nil 3094 . 3095) (3094 . 3095) 3095 (#("" 0 1 (face font-lock-string-face fontified t)) . 3094) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) 3095) nil (25428 23180 440478 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1682 . 1683) (#("
" 0 1 (fontified nil)) . -2493) (1681 . 2494) 1677 (t 25428 23180 452209 557000)) nil (25429 28455 473685 784000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -2462) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (2460 . 2462) (#("            " 0 12 (fontified nil)) . -2433) (2426 . 2433) (#("        	" 0 9 (fontified nil)) . -2383) (2377 . 2383) (#("		    " 0 6 (fontified nil)) . -2299) (2294 . 2299) (#("		    " 0 6 (fontified nil)) . -2215) (2210 . 2215) (#("		    " 0 6 (fontified nil)) . -2129) (2124 . 2129) (#("		    " 0 6 (fontified nil)) . -2042) (2037 . 2042) (#("		    " 0 6 (fontified nil)) . -1949) (1944 . 1949) (#("		    " 0 6 (fontified nil)) . -1857) (1852 . 1857) (#("		    " 0 6 (fontified nil)) . -1773) (1768 . 1773) (#("        	" 0 9 (fontified nil)) . -1765) (1759 . 1765) (#("            " 0 12 (fontified nil)) . -1743) (1736 . 1743) (#("            " 0 12 (fontified nil)) . -1721) (1714 . 1721) (#("        " 0 8 (fontified nil)) . -1702) (1697 . 1702) (#("	" 0 1 (fontified nil rear-nonsticky t)) . -1684) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (1682 . 1684) 2494) nil (25429 28507 32849 173000) 0 nil])
([nil nil ((2103 . 2104)) nil (25429 28525 910165 944000) 0 nil] [nil nil ((nil rear-nonsticky nil 2102 . 2103) (nil fontified nil 2102 . 2103) (2102 . 2103) 2103 (#("" 0 1 (fontified t face font-lock-string-face)) . 2102) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 2103) ((2102 . 2103) (#("" 0 1 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 2102) (nil rear-nonsticky t 2102 . 2103)) (25429 28506 215947 543000) 0 nil])
([nil nil ((2190 . 2191)) nil (25429 28525 910163 765000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2355 . 2356) (nil fontified nil 2355 . 2356) (2355 . 2356) 2356 (#("" 0 1 (fontified t face font-lock-string-face)) . 2355) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 2356) ((2355 . 2356) (#("" 0 1 (rear-nonsticky nil fontified nil face font-lock-string-face)) . 2355) (nil rear-nonsticky t 2355 . 2356)) (25429 28505 746456 960000) 0 nil])
([nil nil ((2358 . 2359)) nil (25429 28525 910157 538000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2188 . 2189) (nil fontified nil 2188 . 2189) (2188 . 2189) 2189 (#("" 0 1 (fontified t face font-lock-string-face)) . 2188) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 2189) ((2188 . 2189) (#("" 0 1 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 2188) (nil rear-nonsticky t 2188 . 2189) (t 25429 28455 483628 540000)) (25429 28455 471649 92000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1821 . 1822) (nil fontified nil 1815 . 1822) (1815 . 1822) 1822 (#("#B1E3AD" 0 7 (fontified t face ((:foreground "black") (:background "#B1E3AD")))) . 1815) (undo-tree-id410 . -7) (undo-tree-id411 . -6) (undo-tree-id412 . -6) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -7) (undo-tree-id435 . -6) (undo-tree-id436 . -6) (undo-tree-id437 . -6) (undo-tree-id438 . -6) (undo-tree-id439 . -6) (undo-tree-id440 . -6) (undo-tree-id441 . -6) (undo-tree-id442 . -7) 1822 (t 25429 28525 917322 500000)) nil (25429 28664 396508 724000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1821 . 1822) (nil fontified nil 1815 . 1822) (1815 . 1822) 1822 (#("#EC407A" 0 6 (fontified t face ((:foreground "white") (:background "#EC407A"))) 6 7 (fontified t rear-nonsticky t face ((:foreground "white") (:background "#EC407A")))) . 1815) (undo-tree-id342 . -7) (undo-tree-id343 . -6) (undo-tree-id344 . -6) (undo-tree-id345 . -6) (undo-tree-id346 . -6) (undo-tree-id347 . -6) (undo-tree-id348 . -6) (undo-tree-id349 . -6) (undo-tree-id350 . -6) (undo-tree-id351 . -6) (undo-tree-id352 . -6) (undo-tree-id353 . -6) (undo-tree-id354 . -6) (undo-tree-id355 . -6) (undo-tree-id356 . -6) (undo-tree-id357 . -6) (undo-tree-id358 . -6) (undo-tree-id359 . -6) (undo-tree-id360 . -6) (undo-tree-id361 . -6) (undo-tree-id362 . -6) (undo-tree-id363 . -6) (undo-tree-id364 . -6) (undo-tree-id365 . -6) (undo-tree-id366 . -6) (undo-tree-id367 . -6) (undo-tree-id368 . -6) (undo-tree-id369 . -6) (undo-tree-id370 . -6) (undo-tree-id371 . -5) (undo-tree-id372 . -5) (undo-tree-id373 . -5) (undo-tree-id374 . -5) (undo-tree-id375 . -5) (undo-tree-id376 . -5) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -3) (undo-tree-id384 . -3) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -3) (undo-tree-id388 . -3) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (undo-tree-id394 . -2) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -7) (undo-tree-id402 . -6) (undo-tree-id403 . -6) (undo-tree-id404 . -6) (undo-tree-id405 . -6) (undo-tree-id406 . -6) (undo-tree-id407 . -6) (undo-tree-id408 . -6) (undo-tree-id409 . -7) 1822) nil (25429 28664 396466 942000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1913 . 1914) (nil fontified nil 1907 . 1914) (1907 . 1914) 1914 (#("#B1E3AD" 0 7 (fontified t face ((:foreground "black") (:background "#B1E3AD")))) . 1907) (undo-tree-id330 . -7) (undo-tree-id331 . -6) (undo-tree-id332 . -6) (undo-tree-id333 . -7) (undo-tree-id334 . -6) (undo-tree-id335 . -6) (undo-tree-id336 . -6) (undo-tree-id337 . -6) (undo-tree-id338 . -6) (undo-tree-id339 . -6) (undo-tree-id340 . -6) (undo-tree-id341 . -7) 1914) nil (25429 28664 396380 707000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2006 . 2007) (nil fontified nil 2000 . 2007) (2000 . 2007) 2007 (#("#E38C8F" 0 7 (fontified t face ((:foreground "black") (:background "#E38C8F")))) . 2000) (undo-tree-id304 . -7) (undo-tree-id305 . -6) (undo-tree-id306 . -6) (undo-tree-id307 . -5) (undo-tree-id308 . -5) (undo-tree-id309 . -5) (undo-tree-id310 . -5) (undo-tree-id311 . -5) (undo-tree-id312 . -5) (undo-tree-id313 . -5) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -7) (undo-tree-id322 . -6) (undo-tree-id323 . -6) (undo-tree-id324 . -6) (undo-tree-id325 . -6) (undo-tree-id326 . -6) (undo-tree-id327 . -6) (undo-tree-id328 . -6) (undo-tree-id329 . -7) 2007) nil (25429 28664 396364 974000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2099 . 2100) (nil fontified nil 2093 . 2100) (2093 . 2100) 2100 (#("#B1E3AD" 0 7 (fontified t face ((:foreground "black") (:background "#B1E3AD")))) . 2093) (undo-tree-id205 . -7) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -5) (undo-tree-id209 . -5) (undo-tree-id210 . -5) (undo-tree-id211 . -5) (undo-tree-id212 . -5) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -3) (undo-tree-id222 . -3) (undo-tree-id223 . -3) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -6) (undo-tree-id252 . -6) (undo-tree-id253 . -6) (undo-tree-id254 . -6) (undo-tree-id255 . -6) (undo-tree-id256 . -6) (undo-tree-id257 . -6) (undo-tree-id258 . -6) (undo-tree-id259 . -6) (undo-tree-id260 . -6) (undo-tree-id261 . -6) (undo-tree-id262 . -6) (undo-tree-id263 . -6) (undo-tree-id264 . -6) (undo-tree-id265 . -5) (undo-tree-id266 . -5) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -5) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -3) (undo-tree-id278 . -3) (undo-tree-id279 . -3) (undo-tree-id280 . -3) (undo-tree-id281 . -3) (undo-tree-id282 . -3) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -7) (undo-tree-id296 . -6) (undo-tree-id297 . -6) (undo-tree-id298 . -6) (undo-tree-id299 . -6) (undo-tree-id300 . -6) (undo-tree-id301 . -6) (undo-tree-id302 . -6) (undo-tree-id303 . -7) 2100) nil (25429 28664 396329 224000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2186 . 2187) (nil fontified nil 2180 . 2187) (2180 . 2187) 2187 (#("#B1E3AD" 0 7 (fontified t face ((:foreground "black") (:background "#B1E3AD")))) . 2180) (undo-tree-id122 . -7) (undo-tree-id123 . -6) (undo-tree-id124 . -6) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -7) (undo-tree-id140 . -7) (undo-tree-id141 . -7) (undo-tree-id142 . -7) (undo-tree-id143 . -7) (undo-tree-id144 . -7) (undo-tree-id145 . -7) (undo-tree-id146 . -7) (undo-tree-id147 . -7) (undo-tree-id148 . -7) (undo-tree-id149 . -7) (undo-tree-id150 . -7) (undo-tree-id151 . -7) (undo-tree-id152 . -7) (undo-tree-id153 . -7) (undo-tree-id154 . -7) (undo-tree-id155 . -7) (undo-tree-id156 . -7) (undo-tree-id157 . -7) (undo-tree-id158 . -7) (undo-tree-id159 . -7) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -5) (undo-tree-id171 . -5) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -7) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -7) 2187) nil (25429 28664 396210 414000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2269 . 2270) (nil fontified nil 2263 . 2270) (2263 . 2270) 2270 (#("#B1E3AD" 0 7 (fontified t face ((:foreground "black") (:background "#B1E3AD")))) . 2263) (undo-tree-id84 . -7) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -6) (undo-tree-id93 . -6) (undo-tree-id94 . -6) (undo-tree-id95 . -6) (undo-tree-id96 . -6) (undo-tree-id97 . -6) (undo-tree-id98 . -6) (undo-tree-id99 . -6) (undo-tree-id100 . -6) (undo-tree-id101 . -7) (undo-tree-id102 . -7) (undo-tree-id103 . -7) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -7) (undo-tree-id114 . -6) (undo-tree-id115 . -6) (undo-tree-id116 . -6) (undo-tree-id117 . -6) (undo-tree-id118 . -6) (undo-tree-id119 . -6) (undo-tree-id120 . -6) (undo-tree-id121 . -7) 2270) nil (25429 28664 395075 65000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2354 . 2355) (nil fontified nil 2348 . 2355) (2348 . 2355) 2355 (#("#B1E3AD" 0 7 (fontified t face ((:foreground "black") (:background "#B1E3AD")))) . 2348) (undo-tree-id34 . -7) (undo-tree-id35 . -6) (undo-tree-id36 . -6) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -5) (undo-tree-id41 . -5) (undo-tree-id42 . -5) (undo-tree-id43 . -5) (undo-tree-id44 . -5) (undo-tree-id45 . -5) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -7) (undo-tree-id76 . -6) (undo-tree-id77 . -6) (undo-tree-id78 . -6) (undo-tree-id79 . -6) (undo-tree-id80 . -6) (undo-tree-id81 . -6) (undo-tree-id82 . -6) (undo-tree-id83 . -7) 2355) nil (25429 28664 395014 168000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1821 . 1822) (nil fontified nil 1815 . 1822) (1815 . 1822) 1822 (#("#A35E60" 0 6 (fontified t face ((:foreground "white") (:background "#A35E60"))) 6 7 (fontified t rear-nonsticky t face ((:foreground "white") (:background "#A35E60")))) . 1815) (undo-tree-id443 . -7) (undo-tree-id444 . -6) (undo-tree-id445 . -6) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -7) (undo-tree-id461 . -6) (undo-tree-id462 . -6) (undo-tree-id463 . -6) (undo-tree-id464 . -6) (undo-tree-id465 . -6) (undo-tree-id466 . -6) (undo-tree-id467 . -6) (undo-tree-id468 . -7) 1822 (t 25429 28664 404290 698000)) nil (25429 28740 407120 599000) 0 nil])
([nil nil ((#("{format_source}" 0 15 (fontified t face font-lock-string-face)) . 4688) (undo-tree-id798 . -14) (undo-tree-id799 . -14) (undo-tree-id800 . -14) (undo-tree-id801 . -15) (undo-tree-id802 . -14) (undo-tree-id803 . -6) (undo-tree-id804 . -6) (undo-tree-id805 . -6) (undo-tree-id806 . -6) (undo-tree-id807 . -6) (undo-tree-id808 . -6) (undo-tree-id809 . -6) (undo-tree-id810 . -6) (undo-tree-id811 . -6) (undo-tree-id812 . -6) (undo-tree-id813 . -6) (undo-tree-id814 . -7) (undo-tree-id815 . -7) (undo-tree-id816 . -7) (undo-tree-id817 . -7) (undo-tree-id818 . -7) (undo-tree-id819 . -7) (undo-tree-id820 . -13) (undo-tree-id821 . -13) (undo-tree-id822 . -13) (undo-tree-id823 . -13) (undo-tree-id824 . -13) (undo-tree-id825 . -13) (undo-tree-id826 . -14) (undo-tree-id827 . -14) (undo-tree-id828 . -14) (undo-tree-id829 . -14) (undo-tree-id830 . -14) (undo-tree-id831 . -14) (undo-tree-id832 . 1) (undo-tree-id833 . -15) (undo-tree-id834 . 15) (undo-tree-id835 . -1) (undo-tree-id836 . -14) (undo-tree-id837 . -14) (undo-tree-id838 . -14) (undo-tree-id839 . -14) (undo-tree-id840 . -14) (undo-tree-id841 . -14) 4702 (t 25429 28740 414265 414000)) nil (25429 28818 149716 317000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 4687) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1)) nil (25429 28818 149665 248000) 0 nil])
([nil nil ((4687 . 4688)) nil (25429 28818 149277 874000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 4687) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1)) nil (25429 28818 149276 102000) 0 nil])
([nil nil ((#("{format_source}" 0 15 (fontified t face font-lock-string-face)) . 4737) (undo-tree-id661 . -14) (undo-tree-id662 . -14) (undo-tree-id663 . -14) (undo-tree-id664 . -15) (undo-tree-id665 . -14) (undo-tree-id666 . -6) (undo-tree-id667 . -6) (undo-tree-id668 . -6) (undo-tree-id669 . -6) (undo-tree-id670 . -6) (undo-tree-id671 . -6) (undo-tree-id672 . -6) (undo-tree-id673 . -6) (undo-tree-id674 . -6) (undo-tree-id675 . -6) (undo-tree-id676 . -6) (undo-tree-id677 . -7) (undo-tree-id678 . -7) (undo-tree-id679 . -7) (undo-tree-id680 . -7) (undo-tree-id681 . -7) (undo-tree-id682 . -7) (undo-tree-id683 . -13) (undo-tree-id684 . -13) (undo-tree-id685 . -13) (undo-tree-id686 . -13) (undo-tree-id687 . -13) (undo-tree-id688 . -13) (undo-tree-id689 . -14) (undo-tree-id690 . -14) (undo-tree-id691 . -14) (undo-tree-id692 . -14) (undo-tree-id693 . -14) (undo-tree-id694 . -14) (undo-tree-id695 . 1) (undo-tree-id696 . -15) (undo-tree-id697 . 15) (undo-tree-id698 . -1) (undo-tree-id699 . -14) (undo-tree-id700 . -14) (undo-tree-id701 . -14) (undo-tree-id702 . -14) (undo-tree-id703 . -14) (undo-tree-id704 . -14) 4751) nil (25429 28818 149264 109000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 4736) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1)) nil (25429 28818 149208 828000) 0 nil])
([nil nil ((#("{format_source}" 0 15 (fontified t face font-lock-string-face)) . 4784) (undo-tree-id545 . -14) (undo-tree-id546 . -14) (undo-tree-id547 . -14) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -15) (undo-tree-id556 . -14) (undo-tree-id557 . -6) (undo-tree-id558 . -6) (undo-tree-id559 . -6) (undo-tree-id560 . -6) (undo-tree-id561 . -6) (undo-tree-id562 . -6) (undo-tree-id563 . -6) (undo-tree-id564 . -6) (undo-tree-id565 . -6) (undo-tree-id566 . -6) (undo-tree-id567 . -6) (undo-tree-id568 . -7) (undo-tree-id569 . -7) (undo-tree-id570 . -7) (undo-tree-id571 . -7) (undo-tree-id572 . -7) (undo-tree-id573 . -7) (undo-tree-id574 . -13) (undo-tree-id575 . -13) (undo-tree-id576 . -13) (undo-tree-id577 . -13) (undo-tree-id578 . -13) (undo-tree-id579 . -13) (undo-tree-id580 . -15) (undo-tree-id581 . -15) (undo-tree-id582 . -15) (undo-tree-id583 . -15) (undo-tree-id584 . -15) (undo-tree-id585 . -15) (undo-tree-id586 . -14) (undo-tree-id587 . -14) (undo-tree-id588 . -14) (undo-tree-id589 . -14) (undo-tree-id590 . -14) (undo-tree-id591 . -14) (undo-tree-id592 . -14) 4798) nil (25429 28818 146003 112000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 4783) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1)) nil (25429 28818 145948 158000) 0 nil])
([nil nil ((#("\"custom/cpugovernor\", \"cpu\"," 0 20 (face font-lock-string-face fontified t) 20 22 (fontified t) 22 27 (face font-lock-string-face fontified t) 27 28 (fontified t)) . 444) (undo-tree-id10 . -27) (undo-tree-id11 . -27) (undo-tree-id12 . -27) (undo-tree-id13 . -27) 471 (t 25429 28818 157457 483000)) nil (25433 40507 22122 76000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 444) (undo-tree-id9 . 1)) nil (25433 40507 22115 819000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 443) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1)) nil (25433 40507 22112 917000) 0 nil])
([nil nil ((#("\"custom/gpu\"," 0 12 (face font-lock-string-face fontified t) 12 13 (fontified t)) . 458) (undo-tree-id1 . -12) (undo-tree-id2 . -12) (undo-tree-id3 . -12) (undo-tree-id4 . -12) 470) nil (25433 40507 22105 752000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 458) (undo-tree-id0 . 1)) nil (25433 40507 22091 720000) 0 nil])
([nil nil ((5609 . 5626) (#("'yay'; pkill -SIGRTMIN+8 waybar" 0 31 (face font-lock-string-face fontified t)) . 5609) (undo-tree-id60 . -30) (undo-tree-id61 . -30) (undo-tree-id62 . -30) (undo-tree-id63 . -6) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (undo-tree-id66 . -6) (undo-tree-id67 . -6) (undo-tree-id68 . -6) (undo-tree-id69 . -6) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -5) (undo-tree-id120 . -5) (undo-tree-id121 . -5) (undo-tree-id122 . -5) (undo-tree-id123 . -5) (undo-tree-id124 . -5) (undo-tree-id125 . -11) (undo-tree-id126 . -11) (undo-tree-id127 . -11) (undo-tree-id128 . -11) (undo-tree-id129 . -11) (undo-tree-id130 . -11) (undo-tree-id131 . -13) (undo-tree-id132 . -13) (undo-tree-id133 . -13) (undo-tree-id134 . -13) (undo-tree-id135 . -13) (undo-tree-id136 . -13) (undo-tree-id137 . -21) (undo-tree-id138 . -21) (undo-tree-id139 . -21) (undo-tree-id140 . -21) (undo-tree-id141 . -21) (undo-tree-id142 . -21) (undo-tree-id143 . -22) (undo-tree-id144 . -22) (undo-tree-id145 . -22) (undo-tree-id146 . -22) (undo-tree-id147 . -22) (undo-tree-id148 . -22) (undo-tree-id149 . -23) (undo-tree-id150 . -23) (undo-tree-id151 . -23) (undo-tree-id152 . -23) (undo-tree-id153 . -23) (undo-tree-id154 . -23) (undo-tree-id155 . -23) (undo-tree-id156 . -23) (undo-tree-id157 . -23) (undo-tree-id158 . -23) (undo-tree-id159 . -23) (undo-tree-id160 . -23) (undo-tree-id161 . -23) (undo-tree-id162 . -22) (undo-tree-id163 . -22) (undo-tree-id164 . -22) (undo-tree-id165 . -22) (undo-tree-id166 . -22) (undo-tree-id167 . -22) (undo-tree-id168 . -14) (undo-tree-id169 . -14) (undo-tree-id170 . -14) (undo-tree-id171 . -14) (undo-tree-id172 . -14) (undo-tree-id173 . -14) (undo-tree-id174 . -13) (undo-tree-id175 . -13) (undo-tree-id176 . -13) (undo-tree-id177 . -13) (undo-tree-id178 . -13) (undo-tree-id179 . -13) (undo-tree-id180 . -7) (undo-tree-id181 . -7) (undo-tree-id182 . -7) (undo-tree-id183 . -7) (undo-tree-id184 . -7) (undo-tree-id185 . -7) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -3) (undo-tree-id211 . -3) (undo-tree-id212 . -3) (undo-tree-id213 . -3) (undo-tree-id214 . -3) (undo-tree-id215 . -3) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -5) (undo-tree-id223 . -5) (undo-tree-id224 . -5) (undo-tree-id225 . -5) (undo-tree-id226 . -5) (undo-tree-id227 . -5) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -6) (undo-tree-id231 . -6) (undo-tree-id232 . -6) (undo-tree-id233 . -6) (undo-tree-id234 . -7) (undo-tree-id235 . -7) (undo-tree-id236 . -7) (undo-tree-id237 . -7) (undo-tree-id238 . -7) (undo-tree-id239 . -7) (undo-tree-id240 . -8) (undo-tree-id241 . -8) (undo-tree-id242 . -8) (undo-tree-id243 . -8) (undo-tree-id244 . -8) (undo-tree-id245 . -8) (undo-tree-id246 . -9) (undo-tree-id247 . -9) (undo-tree-id248 . -9) (undo-tree-id249 . -9) (undo-tree-id250 . -9) (undo-tree-id251 . -9) (undo-tree-id252 . -8) (undo-tree-id253 . -8) (undo-tree-id254 . -8) (undo-tree-id255 . -8) (undo-tree-id256 . -8) (undo-tree-id257 . -8) (undo-tree-id258 . -7) (undo-tree-id259 . -7) (undo-tree-id260 . -7) (undo-tree-id261 . -7) (undo-tree-id262 . -7) (undo-tree-id263 . -7) (undo-tree-id264 . -7) (undo-tree-id265 . -7) (undo-tree-id266 . -7) (undo-tree-id267 . -7) (undo-tree-id268 . -7) (undo-tree-id269 . -7) (undo-tree-id270 . -7) (undo-tree-id271 . -11) (undo-tree-id272 . -11) (undo-tree-id273 . -11) (undo-tree-id274 . -11) (undo-tree-id275 . -11) (undo-tree-id276 . -11) (undo-tree-id277 . -13) (undo-tree-id278 . -13) (undo-tree-id279 . -13) (undo-tree-id280 . -13) (undo-tree-id281 . -13) (undo-tree-id282 . -13) (undo-tree-id283 . -21) (undo-tree-id284 . -21) (undo-tree-id285 . -21) (undo-tree-id286 . -21) (undo-tree-id287 . -21) (undo-tree-id288 . -21) (undo-tree-id289 . -22) (undo-tree-id290 . -22) (undo-tree-id291 . -22) (undo-tree-id292 . -22) (undo-tree-id293 . -22) (undo-tree-id294 . -22) (undo-tree-id295 . -23) (undo-tree-id296 . -23) (undo-tree-id297 . -23) (undo-tree-id298 . -23) (undo-tree-id299 . -23) (undo-tree-id300 . -23) (undo-tree-id301 . -30) (undo-tree-id302 . -30) (undo-tree-id303 . -30) (undo-tree-id304 . -30) (undo-tree-id305 . -30) (undo-tree-id306 . -30) (undo-tree-id307 . -31) (undo-tree-id308 . -31) (undo-tree-id309 . -31) (undo-tree-id310 . -31) (undo-tree-id311 . -31) (undo-tree-id312 . -31) (undo-tree-id313 . -30) (undo-tree-id314 . -30) (undo-tree-id315 . -30) (undo-tree-id316 . -30) (undo-tree-id317 . -30) (undo-tree-id318 . -30) (undo-tree-id319 . -7) (undo-tree-id320 . -7) (undo-tree-id321 . -7) (undo-tree-id322 . -7) (undo-tree-id323 . -7) (undo-tree-id324 . -7) (undo-tree-id325 . -7) (undo-tree-id326 . -7) (undo-tree-id327 . -7) (undo-tree-id328 . -7) (undo-tree-id329 . -7) (undo-tree-id330 . -7) (undo-tree-id331 . -7) (undo-tree-id332 . -7) (undo-tree-id333 . -7) (undo-tree-id334 . -7) (undo-tree-id335 . -7) (undo-tree-id336 . -7) (undo-tree-id337 . -7) (undo-tree-id338 . -7) (undo-tree-id339 . -7) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -31) (undo-tree-id353 . -30) (undo-tree-id354 . -3) (undo-tree-id355 . -3) (undo-tree-id356 . -3) (undo-tree-id357 . -3) (undo-tree-id358 . -3) (undo-tree-id359 . -3) (undo-tree-id360 . -5) (undo-tree-id361 . -5) (undo-tree-id362 . -5) (undo-tree-id363 . -5) (undo-tree-id364 . -5) (undo-tree-id365 . -5) (undo-tree-id366 . -11) (undo-tree-id367 . -11) (undo-tree-id368 . -11) (undo-tree-id369 . -11) (undo-tree-id370 . -11) (undo-tree-id371 . -11) (undo-tree-id372 . -13) (undo-tree-id373 . -13) (undo-tree-id374 . -13) (undo-tree-id375 . -13) (undo-tree-id376 . -13) (undo-tree-id377 . -13) (undo-tree-id378 . -21) (undo-tree-id379 . -21) (undo-tree-id380 . -21) (undo-tree-id381 . -21) (undo-tree-id382 . -21) (undo-tree-id383 . -21) (undo-tree-id384 . -22) (undo-tree-id385 . -22) (undo-tree-id386 . -22) (undo-tree-id387 . -22) (undo-tree-id388 . -22) (undo-tree-id389 . -22) (undo-tree-id390 . -23) (undo-tree-id391 . -23) (undo-tree-id392 . -23) (undo-tree-id393 . -23) (undo-tree-id394 . -23) (undo-tree-id395 . -23) (undo-tree-id396 . -30) (undo-tree-id397 . -30) (undo-tree-id398 . -30) (undo-tree-id399 . -30) (undo-tree-id400 . -30) (undo-tree-id401 . -30) (undo-tree-id402 . -31) (undo-tree-id403 . -31) (undo-tree-id404 . -31) (undo-tree-id405 . -31) (undo-tree-id406 . -31) (undo-tree-id407 . -31) (undo-tree-id408 . -30) (undo-tree-id409 . -30) (undo-tree-id410 . -30) (undo-tree-id411 . -30) (undo-tree-id412 . -30) (undo-tree-id413 . -30) (undo-tree-id414 . -30) 5639 (t 25433 40507 31721 333000)) nil (25433 41113 931720 388000) 0 nil])
([nil nil ((#("" 0 1 (face font-lock-string-face fontified t)) . 4884)) nil (25433 41119 851954 50000) 0 nil] [nil nil ((#("        \"format-source-muted\": \"\",
" 0 8 (fontified t) 8 29 (face font-lock-string-face fontified t) 29 31 (fontified t) 31 34 (face font-lock-string-face fontified t) 34 36 (fontified t)) . 4852) (undo-tree-id14 . -32) (undo-tree-id15 . -36) (undo-tree-id16 . -32) (undo-tree-id17 . -32) (undo-tree-id18 . -32) (undo-tree-id19 . -32) (undo-tree-id20 . -32) (undo-tree-id21 . -32) (undo-tree-id22 . -32) (undo-tree-id23 . -32) (undo-tree-id24 . -32) (undo-tree-id25 . -32) (undo-tree-id26 . -32) (undo-tree-id27 . -32) (undo-tree-id28 . -32) (undo-tree-id29 . -32) (undo-tree-id30 . -32) (undo-tree-id31 . -32) (undo-tree-id32 . -32) (undo-tree-id33 . -32) (undo-tree-id34 . -32) (undo-tree-id35 . -32) (undo-tree-id36 . -32) (undo-tree-id37 . -32) (undo-tree-id38 . -32) (undo-tree-id39 . -32) (undo-tree-id40 . -32) (undo-tree-id41 . -32) (undo-tree-id42 . -32) (undo-tree-id43 . -32) (undo-tree-id44 . -32) (undo-tree-id45 . -32) (undo-tree-id46 . -32) (undo-tree-id47 . -32) (undo-tree-id48 . -32) (undo-tree-id49 . -32) (undo-tree-id50 . -32) (undo-tree-id51 . -32) (undo-tree-id52 . -32) (undo-tree-id53 . -32) (undo-tree-id54 . -32) (undo-tree-id55 . -32) (undo-tree-id56 . -32) (undo-tree-id57 . -32) (undo-tree-id58 . -32) (undo-tree-id59 . -32) 4884) ((4852 . 4888)) (25433 41113 926734 195000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -4884) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) 4885 (4884 . 4885)) nil (25433 41119 851947 508000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 4270 . 4271) (#("
" 0 1 (fontified nil)) . -4288) (4262 . 4289) 4237 (t 25433 41119 859942 776000)) nil (25433 42315 453194 500000) 0 nil])
([nil nil ((4272 . 4280) (#("c" 0 1 (face font-lock-string-face fontified t)) . -4272) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -4273) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -4274) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) 4275 (4272 . 4275) (#("family" 0 6 (face font-lock-string-face fontified t)) . 4272)) nil (25433 42315 479990 324000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -4284) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -4285) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -4286) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (#("4" 0 1 (face font-lock-string-face rear-nonsticky t fontified t)) . -4287) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) 4288 (nil rear-nonsticky nil 4287 . 4288) (nil fontified nil 4284 . 4288) (4284 . 4288) (#("ipv4" 0 4 (face font-lock-string-face fontified t)) . 4284) (undo-tree-id729 . -4) (undo-tree-id730 . -3) (undo-tree-id731 . -3) (undo-tree-id732 . -3) (undo-tree-id733 . -3) (undo-tree-id734 . -3) (undo-tree-id735 . -3) (undo-tree-id736 . -3) (undo-tree-id737 . -4) (undo-tree-id738 . -4) (undo-tree-id739 . -4) (undo-tree-id740 . -4) (undo-tree-id741 . -4) (undo-tree-id742 . -4) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (undo-tree-id747 . -4)) nil (25433 42349 129708 104000) 0 nil] [nil nil ((nil rear-nonsticky nil 4289 . 4290) (nil fontified nil 4284 . 4290) (4284 . 4290) 4288 (#("ipv4" 0 4 (face font-lock-string-face fontified t)) . 4284) (undo-tree-id428 . -4) (undo-tree-id429 . -3) (undo-tree-id430 . -3) (undo-tree-id431 . -4) (undo-tree-id432 . -3) (undo-tree-id433 . -3) (undo-tree-id434 . -3) (undo-tree-id435 . -3) (undo-tree-id436 . -3) (undo-tree-id437 . -3) (undo-tree-id438 . -3) (undo-tree-id439 . -4) 4288) ((4284 . 4288) (#("family" 0 5 (face font-lock-string-face fontified nil) 5 6 (face font-lock-string-face rear-nonsticky nil fontified nil)) . 4284) (undo-tree-id590 . -5) (undo-tree-id591 . -5) (undo-tree-id592 . -5) (nil rear-nonsticky t 4289 . 4290)) (25433 42315 453062 550000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4363 . 4364) (nil fontified nil 4284 . 4364) (4284 . 4364)) nil (25433 42349 129590 971000) 0 nil])
nil
([nil nil ((4284 . 4285) (#("/home/mattia" 0 12 (face font-lock-string-face fontified t)) . 4284) (undo-tree-id593 . -11) (undo-tree-id594 . -11) (undo-tree-id595 . -11) (undo-tree-id596 . -12) (undo-tree-id597 . -12) (undo-tree-id598 . -12) (undo-tree-id599 . -12) (undo-tree-id600 . -12) (undo-tree-id601 . -12) (undo-tree-id602 . -6) (undo-tree-id603 . -6) (undo-tree-id604 . -6) (undo-tree-id605 . -6) (undo-tree-id606 . -6) (undo-tree-id607 . -6) (undo-tree-id608 . -5) (undo-tree-id609 . -5) (undo-tree-id610 . -5) (undo-tree-id611 . -5) (undo-tree-id612 . -5) (undo-tree-id613 . -5) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -12) (undo-tree-id621 . -11) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -5) (undo-tree-id629 . -5) (undo-tree-id630 . -5) (undo-tree-id631 . -5) (undo-tree-id632 . -5) (undo-tree-id633 . -5) (undo-tree-id634 . -11) (undo-tree-id635 . -11) (undo-tree-id636 . -11) (undo-tree-id637 . -11) (undo-tree-id638 . -11) (undo-tree-id639 . -11) (undo-tree-id640 . -11) 4295) nil (25433 42349 129579 234000) 0 nil])
([nil nil ((4289 . 4296) (#("." 0 1 (face font-lock-string-face fontified t)) . -4289) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -4290) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -4291) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) 4292 (4284 . 4292) (#("~" 0 1 (face font-lock-string-face fontified t)) . 4284) (t 25433 42349 137850 762000)) nil (25433 44186 201609 701000) 0 nil])
([nil nil ((#("        \"format-alt\": \"{ifname}: {ipaddr}/{cidr}\",
" 0 8 (fontified t) 8 20 (face font-lock-string-face fontified t) 20 22 (fontified t) 22 49 (face font-lock-string-face fontified t) 49 51 (fontified t)) . 4186) (undo-tree-id809 . -15) (undo-tree-id810 . -15) (undo-tree-id811 . 35) (undo-tree-id812 . -15) (undo-tree-id813 . -15) (undo-tree-id814 . -51) (undo-tree-id815 . -15) (undo-tree-id816 . -15) (undo-tree-id817 . -15) (undo-tree-id818 . -15) (undo-tree-id819 . -15) (undo-tree-id820 . -15) (undo-tree-id821 . -15) (undo-tree-id822 . -15) (undo-tree-id823 . -15) (undo-tree-id824 . -15) (undo-tree-id825 . -15) (undo-tree-id826 . -15) (undo-tree-id827 . -15) (undo-tree-id828 . -15) (undo-tree-id829 . -15) (undo-tree-id830 . -15) (undo-tree-id831 . -15) (undo-tree-id832 . -15) (undo-tree-id833 . -15) (undo-tree-id834 . -15) (undo-tree-id835 . -15) (undo-tree-id836 . -15) (undo-tree-id837 . -15) (undo-tree-id838 . -15) (undo-tree-id839 . -15) (undo-tree-id840 . -15) (undo-tree-id841 . -15) (undo-tree-id842 . -15) (undo-tree-id843 . -15) (undo-tree-id844 . -15) (undo-tree-id845 . -15) (undo-tree-id846 . -15) (undo-tree-id847 . -15) (undo-tree-id848 . -15) (undo-tree-id849 . -15) (undo-tree-id850 . -15) (undo-tree-id851 . -15) (undo-tree-id852 . -15) (undo-tree-id853 . -15) (undo-tree-id854 . -15) (undo-tree-id855 . -15) (undo-tree-id856 . -15) 4201 (t 25433 44186 214130 38000)) nil (25433 44839 847050 466000) 0 nil])
([nil nil ((1786 . 1787)) nil (25433 44866 785342 899000) 0 nil] [nil nil ((2381 . 2382) (t 25433 44266 686232 596000)) ((#(" " 0 1 (face font-lock-string-face fontified t)) . 2381)) (25433 44839 400052 720000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 1794)) nil (25433 44866 785341 192000) 0 nil])
([nil nil ((2376 . 2377)) ((#(" " 0 1 (face font-lock-string-face fontified t)) . 2376)) (25433 44839 184109 368000) 0 nil])
([nil nil ((1878 . 1879)) nil (25433 44866 785339 469000) 0 nil])
([nil nil ((2371 . 2372)) ((#(" " 0 1 (face font-lock-string-face fontified t)) . 2371)) (25433 44839 13857 103000) 0 nil])
([nil nil ((1972 . 1973)) nil (25433 44866 785337 144000) 0 nil])
([nil nil ((2366 . 2367)) ((#(" " 0 1 (face font-lock-string-face fontified t)) . 2366)) (25433 44838 659492 866000) 0 nil])
([nil nil ((#(">" 0 1 (face font-lock-string-face fontified t)) . 1979)) nil (25433 44866 785330 580000) 0 nil])
([nil nil ((2361 . 2362)) ((#(" " 0 1 (face font-lock-string-face fontified t)) . 2361) (t 25433 44825 688220 491000)) (25433 44825 677449 630000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 1886) (t 25433 44866 798593 174000)) nil (25433 44930 311010 879000) 0 nil])
nil
([nil nil ((1978 . 1979) (#(" " 0 1 (face font-lock-string-face fontified t)) . 1978)) nil (25433 44930 311008 517000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 2242) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1)) nil (25433 44930 311001 207000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 2059) (t 25433 44930 322457 913000)) nil (25433 44941 284896 49000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 2145) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1)) nil (25433 44941 284889 643000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 1786) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (t 25433 44941 292544 618000)) nil (25433 44946 521052 667000) 0 nil])
([nil nil ((1793 . 1794) (t 25433 44946 529252 172000)) nil (25433 45039 131037 833000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-string-face fontified t)) . -2066) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -2067) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) 2068 (2066 . 2068) (2066 . 2067) (t 25433 45039 143258 927000)) nil (25433 45066 443506 936000) 0 nil])
([nil nil ((2153 . 2154)) nil (25433 45066 443461 641000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 2234) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1)) nil (25433 45066 443458 974000) 0 nil])
([nil nil ((2241 . 2242)) nil (25433 45066 443444 410000) 0 nil])
([nil nil ((2321 . 2322)) nil (25433 45066 443442 222000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 2313) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1)) nil (25435 51165 997854 155000) 0 nil])
([nil nil ((#("		" 0 1 (fontified t) 1 2 (fontified t face font-lock-variable-name-face)) . -7652) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) 7654 (7651 . 7654) (t 25433 45066 453440 938000) 7642) nil (25435 51190 969375 260000) 0 nil] [nil nil ((nil rear-nonsticky nil 7730 . 7731) (nil fontified nil 7643 . 7731) (7643 . 7731) 7642 (t 25433 45066 453440 938000)) ((#("\"custom/separator\": {
    \"format\": \"|\",
    \"interval\": \"once\",
    \"tooltip\": false
}," 0 18 (fontified nil face font-lock-string-face) 18 26 (fontified nil) 26 34 (fontified nil face font-lock-string-face) 34 36 (fontified nil) 36 39 (fontified nil face font-lock-string-face) 39 45 (fontified nil) 45 55 (fontified nil face font-lock-string-face) 55 57 (fontified nil) 57 63 (fontified nil face font-lock-string-face) 63 69 (fontified nil) 69 78 (fontified nil face font-lock-string-face) 78 86 (fontified nil) 86 87 (fontified nil face font-lock-variable-name-face) 87 88 (fontified nil rear-nonsticky nil face font-lock-variable-name-face)) . 7643) (undo-tree-id0 . -87) (undo-tree-id1 . -87) (undo-tree-id2 . -86) (undo-tree-id3 . -87) (undo-tree-id4 . -86) (undo-tree-id5 . -87) (nil fontified t 7721 . 7729) (nil fontified t 7712 . 7721) (nil fontified t 7706 . 7712) (nil fontified t 7700 . 7706) (nil fontified t 7698 . 7700) (nil fontified t 7688 . 7698) (nil fontified t 7682 . 7688) (nil fontified t 7679 . 7682) (nil fontified t 7677 . 7679) (nil fontified t 7669 . 7677) (nil fontified t 7661 . 7669) (nil fontified t 7643 . 7661) (nil rear-nonsticky t 7730 . 7731)) (25435 51165 997245 296000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7739 . 7740) (nil fontified nil 7652 . 7740) (7652 . 7740)) nil (25435 51190 969349 197000) 0 nil])
nil
([nil nil ((7736 . 7737) (#("    " 0 4 (fontified nil)) . -7719) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (7716 . 7719) (#("    " 0 4 (fontified nil)) . -7696) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (7693 . 7696) (#("    " 0 4 (fontified nil)) . -7678) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (7675 . 7678) (7652 . 7653) 7741) nil (25435 51190 969341 394000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -7742) (7740 . 7742) (#("			" 0 3 (fontified nil)) . -7723) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (7719 . 7723) (#("			" 0 3 (fontified nil)) . -7699) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (7695 . 7699) (#("			" 0 3 (fontified nil)) . -7680) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (7676 . 7680) (#("	" 0 1 (fontified nil)) . -7654) (7652 . 7654) 7740) nil (25435 51190 968270 271000) 0 nil])
([nil nil ((469 . 470) (464 . 468) (459 . 464) (458 . 460) (456 . 458) (#(" " 0 1 (fontified t)) . -456) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 457 (456 . 457) (#("," 0 1 (fontified t)) . 456)) nil (25435 51315 463892 496000) 0 nil])
([nil nil ((7660 . 7661)) nil (25435 51323 672731 263000) 0 nil] [nil nil ((7724 . 7725) (#("\"once\"" 0 6 (fontified t face font-lock-string-face)) . 7724) (undo-tree-id125 . -5) (undo-tree-id126 . -5) (undo-tree-id127 . -5) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -6) (undo-tree-id169 . -5) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -5) (undo-tree-id183 . -5) (undo-tree-id184 . -5) (undo-tree-id185 . -5) (undo-tree-id186 . -5) (undo-tree-id187 . -5) (undo-tree-id188 . -5) 7729 (t 25435 51190 980118 278000)) ((7724 . 7730) (#("1" 0 1 (fontified t)) . 7724) (t 25435 51277 387103 276000)) (25435 51277 376726 355000) 0 nil])
([nil nil ((7725 . 7726) (#("\"once\"" 0 6 (fontified t face font-lock-string-face)) . 7725) (undo-tree-id189 . -5) (undo-tree-id190 . -5) (undo-tree-id191 . -5) (undo-tree-id192 . -5) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -6) (undo-tree-id200 . -5) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -5) (undo-tree-id217 . -5) (undo-tree-id218 . -5) (undo-tree-id219 . -5) 7730 (t 25435 51323 683926 967000)) nil (25435 51385 94615 658000) 0 nil])
nil
([nil nil ((#("\"separator\", " 0 6 (fontified t face font-lock-string-face) 6 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t) 12 13 (fontified t)) . 458) (undo-tree-id220 . -12) (undo-tree-id221 . -12) (undo-tree-id222 . -11) (undo-tree-id223 . -11) (undo-tree-id224 . -12) (undo-tree-id225 . -13) (undo-tree-id226 . -12) (undo-tree-id227 . -9) (undo-tree-id228 . -9) (undo-tree-id229 . -9) (undo-tree-id230 . -9) (undo-tree-id231 . -9) (undo-tree-id232 . -9) (undo-tree-id233 . -10) (undo-tree-id234 . -10) (undo-tree-id235 . -10) (undo-tree-id236 . -10) (undo-tree-id237 . -10) (undo-tree-id238 . -10) (undo-tree-id239 . -11) (undo-tree-id240 . -11) (undo-tree-id241 . -11) (undo-tree-id242 . -11) (undo-tree-id243 . -11) (undo-tree-id244 . -11) (undo-tree-id245 . -12) (undo-tree-id246 . -12) (undo-tree-id247 . -12) (undo-tree-id248 . -12) (undo-tree-id249 . -12) (undo-tree-id250 . -12) (undo-tree-id251 . -12) 470 (t 25435 51385 107455 784000)) nil (25435 51526 299675 340000) 0 nil])
([nil nil ((#("{format_source}" 0 15 (face font-lock-string-face fontified t)) . 4972) (undo-tree-id81 . -14) (undo-tree-id82 . -14) (undo-tree-id83 . -14) (undo-tree-id84 . -15) (undo-tree-id85 . -14) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -6) (undo-tree-id93 . -6) (undo-tree-id94 . -6) (undo-tree-id95 . -6) (undo-tree-id96 . -6) (undo-tree-id97 . -7) (undo-tree-id98 . -7) (undo-tree-id99 . -7) (undo-tree-id100 . -7) (undo-tree-id101 . -7) (undo-tree-id102 . -7) (undo-tree-id103 . -13) (undo-tree-id104 . -13) (undo-tree-id105 . -13) (undo-tree-id106 . -13) (undo-tree-id107 . -13) (undo-tree-id108 . -13) (undo-tree-id109 . -15) (undo-tree-id110 . -15) (undo-tree-id111 . -15) (undo-tree-id112 . -15) (undo-tree-id113 . -15) (undo-tree-id114 . -15) (undo-tree-id115 . -14) (undo-tree-id116 . -14) (undo-tree-id117 . -14) (undo-tree-id118 . -14) (undo-tree-id119 . -14) (undo-tree-id120 . -14) (undo-tree-id121 . -14) 4986 (t 25435 51526 314524 507000)) nil (25437 12709 24998 267000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 4971) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1)) nil (25437 12709 17234 565000) 0 nil])
([nil nil ((#("\"battery\", " 0 9 (face font-lock-string-face fontified t) 9 11 (fontified t)) . 485) (undo-tree-id122 . -10) (undo-tree-id123 . -10) (undo-tree-id124 . -10) (undo-tree-id125 . -11) (undo-tree-id126 . -10) (undo-tree-id127 . -7) (undo-tree-id128 . -7) (undo-tree-id129 . -7) (undo-tree-id130 . -7) (undo-tree-id131 . -7) (undo-tree-id132 . -7) (undo-tree-id133 . -9) (undo-tree-id134 . -9) (undo-tree-id135 . -9) (undo-tree-id136 . -9) (undo-tree-id137 . -9) (undo-tree-id138 . -9) (undo-tree-id139 . -11) (undo-tree-id140 . -11) (undo-tree-id141 . -11) (undo-tree-id142 . -11) (undo-tree-id143 . -11) (undo-tree-id144 . -11) (undo-tree-id145 . -10) (undo-tree-id146 . -10) (undo-tree-id147 . -10) (undo-tree-id148 . -10) (undo-tree-id149 . -10) (undo-tree-id150 . -10) (undo-tree-id151 . -10) 495 (t 25437 12709 32556 565000)) nil (25437 13971 300019 537000) 0 nil])
([nil nil ((nil rear-nonsticky nil 468 . 469) (nil fontified nil 458 . 469) (458 . 469) 457) nil (25437 13971 297681 655000) 0 nil])
([nil current ((nil rear-nonsticky nil 3697 . 3698) (nil fontified nil 3641 . 3698) (3641 . 3698) 3676 (#("/sys/class/hwmon/hwmon3/temp1_input" 0 35 (fontified t face font-lock-string-face)) . 3641) (undo-tree-id0 . -35) (undo-tree-id1 . -28) (undo-tree-id2 . -28) (undo-tree-id3 . -28) (undo-tree-id4 . -28) (undo-tree-id5 . -28) (undo-tree-id6 . -28) (undo-tree-id7 . -28) (undo-tree-id8 . -28) (undo-tree-id9 . -28) (undo-tree-id10 . -28) (undo-tree-id11 . -28) (undo-tree-id12 . -28) (undo-tree-id13 . -28) (undo-tree-id14 . -34) (undo-tree-id15 . -34) (undo-tree-id16 . -35) (undo-tree-id17 . -34) (undo-tree-id18 . -35) (undo-tree-id19 . -35) (undo-tree-id20 . -35) (undo-tree-id21 . -35) (undo-tree-id22 . -35) (undo-tree-id23 . -35) (undo-tree-id24 . -34) (undo-tree-id25 . -34) (undo-tree-id26 . -34) (undo-tree-id27 . -34) (undo-tree-id28 . -34) (undo-tree-id29 . -34) (undo-tree-id30 . -34) (undo-tree-id31 . -35) 3676 (t 25437 13971 310261 807000)) nil (25438 57068 783737 874000) 0 nil])
nil
