(undo-tree-save-format-version . 1)
"afb05aefaf6a90529c7be5949c9f34c0bed11850"
[nil nil nil nil (25425 26562 941450 114000) 0 nil]
([nil nil ((#("    similarity matrix is computed using cosine similarity. 
" 0 60 (face font-lock-doc-face fontified nil)) . 861) (undo-tree-id77 . -16) (undo-tree-id78 . -16) (undo-tree-id79 . -60) (undo-tree-id80 . -16) (undo-tree-id81 . -16) (undo-tree-id82 . -16) (undo-tree-id83 . -60) (780 . 861) (#("    words only the subset of dimensions specified by the index are selected. The
" 0 81 (face font-lock-doc-face fontified t)) . 720) (801 . 861) 817 (t 25421 29284 966285 937000)) nil (25425 26562 941447 746000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-doc-face fontified nil)) . 862) (undo-tree-id76 . -1) (781 . 862) (#("    words only the subset of dimensions specified by the index are selected. The
" 0 81 (face font-lock-doc-face fontified t)) . 780) (861 . 862)) nil (25425 26562 941439 612000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-doc-face fontified t)) . 1057)) nil (25425 26562 941436 249000) 0 nil])
([nil nil ((1112 . 1121) (#("c" 0 1 (face font-lock-doc-face fontified t)) . -1112) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("i" 0 1 (face font-lock-doc-face fontified t)) . -1113) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 1114 (1108 . 1114) (#("b" 0 1 (face font-lock-doc-face fontified t)) . -1108) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("y" 0 1 (face font-lock-doc-face fontified t)) . -1109) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -1110) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 1111 (1095 . 1111) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -1095) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("r" 0 1 (face font-lock-doc-face fontified t)) . -1096) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("s" 0 1 (face font-lock-doc-face fontified t)) . -1097) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -1098) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 1099 (1094 . 1099) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -1094) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("r" 0 1 (face font-lock-doc-face fontified t)) . -1095) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 1096 (1092 . 1096) (#("r" 0 1 (face font-lock-doc-face fontified t)) . -1092) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("o" 0 1 (face font-lock-doc-face fontified t)) . -1093) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -1094) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 1095 (1090 . 1095) (#("c" 0 1 (face font-lock-doc-face fontified t)) . -1090) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 1091 (1076 . 1091) (#("i" 0 1 (face font-lock-doc-face fontified t)) . -1076) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -1077) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("'" 0 1 (face font-lock-doc-face fontified t)) . -1078) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("s" 0 1 (face font-lock-doc-face fontified t)) . -1079) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -1080) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -1081) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("h" 0 1 (face font-lock-doc-face fontified t)) . -1082) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -1083) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -1084) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("o" 0 1 (face font-lock-doc-face fontified t)) . -1085) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("n" 0 1 (face font-lock-doc-face fontified t)) . -1086) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -1087) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -1088) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 1089 (1079 . 1089) (1078 . 1079) (#("." 0 1 (face font-lock-doc-face fontified t)) . -1078) (undo-tree-id65 . -1) (undo-tree-id66 . -1) 1079 (1078 . 1079) (1077 . 1078) (#("r" 0 1 (face font-lock-doc-face fontified t)) . -1077) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -1078) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 1079 (1074 . 1079) (#("." 0 1 (face font-lock-doc-face fontified t)) . -1074) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -1075) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 1076 (1075 . 1076)) nil (25425 26562 941422 862000) 0 nil])
([nil nil ((1158 . 1165) (#("a" 0 1 (face font-lock-doc-face fontified t)) . -1158) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 1159 (1153 . 1159) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -1153) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -1154) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("h" 0 1 (face font-lock-doc-face fontified t)) . -1155) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 1156 (1135 . 1156) (1126 . 1130) (#(" " 0 1 (face font-lock-doc-face fontified nil)) . 1126) (1125 . 1126) (1120 . 1131) (#("." 0 1 (face font-lock-doc-face fontified t)) . 1120) (undo-tree-id8 . -1)) nil (25425 26562 941347 311000) 0 nil])
([nil nil ((1165 . 1166)) nil (25425 26562 941309 305000) 0 nil])
([nil nil ((#("    " 0 4 (face font-lock-doc-face fontified nil)) . -1134) (1126 . 1134) 1167) nil (25425 26562 941307 545000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-doc-face fontified t)) . 1132)) nil (25425 26562 941305 535000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-doc-face fontified t)) . 1132)) nil (25425 26562 941303 100000) 0 nil])
([nil nil ((1200 . 1201)) nil (25425 26562 941297 347000) 0 nil])
([nil nil ((3875 . 3882) (#(" " 0 1 (fontified t)) . -3875) (undo-tree-id117 . -1) 3876 (3873 . 3876) (#("i" 0 1 (fontified t)) . -3873) (undo-tree-id118 . -1) (#("m" 0 1 (fontified t)) . -3874) (undo-tree-id119 . -1) 3875 (3872 . 3875) (3871 . 3873) (3863 . 3871) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -3863) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -3864) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("A" 0 1 (fontified t face font-lock-function-name-face)) . -3865) (undo-tree-id124 . -1) (undo-tree-id125 . -1) 3866 (3857 . 3866) (3856 . 3857) (#("
" 0 1 (fontified t)) . -3856) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) 3857 (3856 . 3857) (3855 . 3856) (t 25425 26562 955308 566000) 3855) nil (25435 64134 873746 69000) 0 nil])
([nil nil ((3882 . 3889) (3883 . 3884)) nil (25435 64134 873730 116000) 0 nil])
([nil nil ((3969 . 3979) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -3969) (undo-tree-id75 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -3970) (undo-tree-id76 . -1) 3971 (3961 . 3971) (#("d" 0 1 (fontified t face font-lock-doc-face)) . -3961) (undo-tree-id77 . -1) (#("u" 0 1 (fontified t face font-lock-doc-face)) . -3962) (undo-tree-id78 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -3963) (undo-tree-id79 . -1) 3964 (3957 . 3964) (#("I" 0 1 (fontified t face font-lock-doc-face)) . -3957) (undo-tree-id80 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -3958) (undo-tree-id81 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -3959) (undo-tree-id82 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -3960) (undo-tree-id83 . -1) (#("v" 0 1 (fontified t face font-lock-doc-face)) . -3961) (undo-tree-id84 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -3962) (undo-tree-id85 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -3963) (undo-tree-id86 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -3964) (undo-tree-id87 . -1) (#("g" 0 1 (fontified t face font-lock-doc-face)) . -3965) (undo-tree-id88 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -3966) (undo-tree-id89 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -3967) (undo-tree-id90 . -1) 3968 (3966 . 3968) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -3966) (undo-tree-id91 . -1) 3967 (3957 . 3967) (3952 . 3957) (3948 . 3952) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -3948) (undo-tree-id92 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -3949) (undo-tree-id93 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -3950) (undo-tree-id94 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -3951) (undo-tree-id95 . -1) 3952 (3933 . 3952) (#("b" 0 1 (fontified t face font-lock-doc-face)) . -3933) (undo-tree-id96 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -3934) (undo-tree-id97 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -3935) (undo-tree-id98 . -1) (#("w" 0 1 (fontified t face font-lock-doc-face)) . -3936) (undo-tree-id99 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -3937) (undo-tree-id100 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -3938) (undo-tree-id101 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -3939) (undo-tree-id102 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -3940) (undo-tree-id103 . -1) 3941 (3935 . 3941) (3914 . 3935) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -3914) (undo-tree-id104 . -1) 3915 (3909 . 3915) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -3909) (undo-tree-id105 . -1) 3910 (3899 . 3910) (3905 . 3908) (3901 . 3905) (#("    " 0 4 (fontified nil face font-lock-doc-face)) . 3900) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (3899 . 3905) (#("\"" 0 1 (fontified t face font-lock-doc-face)) . 3899) (undo-tree-id108 . -1) (nil fontified nil 3899 . 3900) (nil face font-lock-doc-face 3899 . 3900) (3898 . 3900) (#("\"" 0 1 (fontified nil face font-lock-doc-face syntax-table (15))) . 3898) (undo-tree-id109 . -1) (3897 . 3898) (3896 . 3898) (#("'" 0 1 (fontified t face font-lock-doc-face)) . -3896) (undo-tree-id110 . -1) (undo-tree-id111 . -1) 3897 (#("'" 0 1 (fontified t face font-lock-doc-face)) . -3897) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("'" 0 1 (fontified nil face font-lock-doc-face syntax-table (15))) . 3898) (undo-tree-id114 . -1) (#("'" 0 1 (fontified t syntax-table (15) face font-lock-doc-face)) . -3898) (undo-tree-id115 . -1) 3899 (nil fontified nil 3899 . 3900) (nil face font-lock-doc-face 3899 . 3900) (3898 . 3900) (#("'" 0 1 (fontified nil face font-lock-doc-face syntax-table (15))) . 3898) (undo-tree-id116 . -1) (3897 . 3898) (3896 . 3898) (3891 . 3896)) nil (25435 64134 873717 351000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t face font-lock-doc-face)) . -3953) (undo-tree-id74 . -4) 3957 (3953 . 3957) (3953 . 3954) 3978) nil (25435 64134 873656 235000) 0 nil])
([nil nil ((4214 . 4227) (#("d" 0 1 (fontified t face font-lock-doc-face)) . -4214) (undo-tree-id3 . -1) (#("f" 0 1 (fontified t face font-lock-doc-face)) . -4215) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4216) (undo-tree-id5 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -4217) (undo-tree-id6 . -1) 4218 (4205 . 4218) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -4205) (undo-tree-id7 . -1) (#("x" 0 1 (fontified t face font-lock-doc-face)) . -4206) (undo-tree-id8 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -4207) (undo-tree-id9 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4208) (undo-tree-id10 . -1) 4209 (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4209) (undo-tree-id11 . -1) 4210 (4197 . 4210) (#("d" 0 1 (fontified t face font-lock-doc-face)) . -4197) (undo-tree-id12 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -4198) (undo-tree-id13 . -1) 4199 (4190 . 4199) (#("." 0 1 (fontified t face font-lock-doc-face)) . -4190) (undo-tree-id14 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4191) (undo-tree-id15 . -1) 4192 (4188 . 4192) (#("," 0 1 (fontified t face font-lock-doc-face)) . -4188) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4189) (undo-tree-id17 . -1) 4190 (4189 . 4190) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4189) (undo-tree-id18 . -1) 4190 (4174 . 4190) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -4174) (undo-tree-id19 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -4175) (undo-tree-id20 . -1) (#("m" 0 1 (fontified t face font-lock-doc-face)) . -4176) (undo-tree-id21 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -4177) (undo-tree-id22 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4178) (undo-tree-id23 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4179) (undo-tree-id24 . -1) 4180 (4172 . 4180) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4172) (undo-tree-id25 . -1) 4173 (4172 . 4173) (4171 . 4172) (4166 . 4171) (4165 . 4166) (4163 . 4165) (4158 . 4163) (4138 . 4158) (4137 . 4138) (#("c" 0 1 (fontified t face font-lock-doc-face)) . -4137) (undo-tree-id26 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4138) (undo-tree-id27 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4139) (undo-tree-id28 . -1) 4140 (4125 . 4129) (#(" " 0 1 (fontified nil face font-lock-doc-face)) . 4125) (4124 . 4125) (4126 . 4136) (#("u" 0 1 (fontified t face font-lock-doc-face)) . -4126) (undo-tree-id29 . -1) 4127 (4118 . 4127) (4097 . 4118) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -4097) (undo-tree-id30 . -1) 4098 (4087 . 4098) (#("u" 0 1 (fontified t face font-lock-doc-face)) . -4087) (undo-tree-id31 . -1) 4088 (4068 . 4088) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4068) (undo-tree-id32 . -1) (#("y" 0 1 (fontified t face font-lock-doc-face)) . -4069) (undo-tree-id33 . -1) (#("m" 0 1 (fontified t face font-lock-doc-face)) . -4070) (undo-tree-id34 . -1) (#("m" 0 1 (fontified t face font-lock-doc-face)) . -4071) (undo-tree-id35 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -4072) (undo-tree-id36 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -4073) (undo-tree-id37 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -4074) (undo-tree-id38 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -4075) (undo-tree-id39 . -1) (#("c" 0 1 (fontified t face font-lock-doc-face)) . -4076) (undo-tree-id40 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -4077) (undo-tree-id41 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -4078) (undo-tree-id42 . -1) 4079 (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4079) (undo-tree-id43 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4080) (undo-tree-id44 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -4081) (undo-tree-id45 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -4082) (undo-tree-id46 . -1) 4083 (4080 . 4083) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4080) (undo-tree-id47 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -4081) (undo-tree-id48 . -1) (#("m" 0 1 (fontified t face font-lock-doc-face)) . -4082) (undo-tree-id49 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -4083) (undo-tree-id50 . -1) 4084 (4076 . 4084) (4066 . 4076) (#(";" 0 1 (fontified t face font-lock-doc-face)) . -4066) (undo-tree-id51 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4067) (undo-tree-id52 . -1) 4068 (4066 . 4068) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4066) (undo-tree-id53 . -1) 4067 (4066 . 4067) (4065 . 4066) (#("\"" 0 1 (fontified t face font-lock-doc-face)) . -4065) (undo-tree-id54 . -1) 4066 (4065 . 4066) (4055 . 4065) (4054 . 4055) (4052 . 4054) (4047 . 4052) (4042 . 4047) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -4042) (undo-tree-id55 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -4043) (undo-tree-id56 . -1) 4044 (4042 . 4044) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -4042) (undo-tree-id57 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -4043) (undo-tree-id58 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -4044) (undo-tree-id59 . -1) 4045 (4036 . 4045) (4031 . 4036) (4026 . 4031) (#("m" 0 1 (fontified t face font-lock-doc-face)) . -4026) (undo-tree-id60 . -1) (#("p" 0 1 (fontified t face font-lock-doc-face)) . -4027) (undo-tree-id61 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -4028) (undo-tree-id62 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -4029) (undo-tree-id63 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -4030) (undo-tree-id64 . -1) 4031 (4016 . 4031) (4010 . 4016) (3989 . 4010) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -3989) (undo-tree-id65 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -3990) (undo-tree-id66 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -3991) (undo-tree-id67 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -3992) (undo-tree-id68 . -1) (#("c" 0 1 (fontified t face font-lock-doc-face)) . -3993) (undo-tree-id69 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -3994) (undo-tree-id70 . -1) 3995 (3986 . 3995) (#("m" 0 1 (fontified t face font-lock-doc-face)) . -3986) (undo-tree-id71 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -3987) (undo-tree-id72 . -1) 3988 (3982 . 3988) (3980 . 3982) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -3980) (undo-tree-id73 . -1) 3981 (3980 . 3981)) nil (25435 64134 873626 368000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4237) (undo-tree-id0 . -4) (undo-tree-id1 . -4) (undo-tree-id2 . -4) 4241 (4236 . 4241) 4235) nil (25435 64134 874116 719000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4844 . 4845) (nil fontified nil 4237 . 4845) (4237 . 4845)) nil (25435 64290 886930 788000) 0 nil] [nil nil ((nil rear-nonsticky nil 4267 . 4268) (nil fontified nil 4237 . 4268) (4237 . 4268)) ((#("import matplotlib.pyplot as plt" 0 6 (fontified nil face font-lock-keyword-face) 6 25 (fontified nil) 25 27 (fontified nil face font-lock-keyword-face) 27 30 (fontified nil) 30 31 (fontified nil rear-nonsticky nil)) . 4237) (undo-tree-id129 . -31) (undo-tree-id130 . -30) (undo-tree-id131 . -31) (undo-tree-id132 . -30) (undo-tree-id133 . -30) (nil rear-nonsticky t 4267 . 4268)) (25435 64134 870733 364000) 0 nil])
([nil nil ((4860 . 4864) (4824 . 4828) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 4602 in ce_utils.py> . #<marker at 4602 in ce_utils.py>))) display "│" face highlight-indent-guides-character-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 4602 in ce_utils.py> . #<marker at 4602 in ce_utils.py>)))) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 4602 in ce_utils.py> . #<marker at 4602 in ce_utils.py>)))) 3 4 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 4602 in ce_utils.py> . #<marker at 4602 in ce_utils.py>))))) . -4724) (4716 . 4724) (4599 . 4603) (4558 . 4562) (4504 . 4508) (4455 . 4459) (4415 . 4419) (4374 . 4378) (4321 . 4325) (4285 . 4289) (4237 . 4241) 4845) nil (25435 64290 886927 997000) 0 nil])
nil
([nil nil ((#("em" 0 2 (fontified t)) . 4304) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) 4305) nil (25435 64290 886922 919000) 0 nil])
([nil nil ((4304 . 4314) (#("sim_m" 0 5 (fontified nil)) . -4304) (4304 . 4309) (#("sim_matrix" 0 10 (fontified nil)) . -4304) (4304 . 4314) (#("sim_matr" 0 8 (fontified t)) . -4304) (undo-tree-id189 . -8) (undo-tree-id190 . -8) 4312 (4308 . 4312) (#("a" 0 1 (fontified t)) . -4308) (undo-tree-id191 . -1) (undo-tree-id192 . -1) 4309 (4304 . 4309) (#("_sym" 0 4 (fontified t)) . 4304) (undo-tree-id193 . -3) (undo-tree-id194 . -3) (undo-tree-id195 . 4) (undo-tree-id196 . -3) (undo-tree-id197 . -3) 4307) nil (25435 64290 886915 357000) 0 nil])
([nil nil ((#("    emotion_names = ['SURPRISED', 'EXCITED', 'SERENE', 'HAPPY', 'SATISFIED', 'CALM', 'TIRED', 'BORED', 'DEPRESSED', 
        'SAD', 'FRUSTRATED', 'AFRAID', 'ANGRY', 'STRESSED', 'ASTONISHED', 'SLEEPY', 'ALARMED', 'DISGUSTED']
" 0 1 (highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 3892 in ce_utils.py> . #<marker at 4658 in ce_utils.py>))) fontified t display "│" face highlight-indent-guides-character-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 3892 in ce_utils.py> . #<marker at 4658 in ce_utils.py>))) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 3892 in ce_utils.py> . #<marker at 4658 in ce_utils.py>))) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 3892 in ce_utils.py> . #<marker at 4658 in ce_utils.py>))) fontified t) 4 17 (fontified t) 17 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-1-face)) 21 32 (fontified t face font-lock-string-face) 32 34 (fontified t) 34 43 (fontified t face font-lock-string-face) 43 45 (fontified t) 45 53 (fontified t face font-lock-string-face) 53 55 (fontified t) 55 62 (fontified t face font-lock-string-face) 62 64 (fontified t) 64 75 (fontified t face font-lock-string-face) 75 77 (fontified t) 77 83 (fontified t face font-lock-string-face) 83 85 (fontified t) 85 92 (fontified t face font-lock-string-face) 92 94 (fontified t) 94 101 (fontified t face font-lock-string-face) 101 103 (fontified t) 103 114 (fontified t face font-lock-string-face) 114 117 (fontified t) 117 118 (highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 3892 in ce_utils.py> . #<marker at 4658 in ce_utils.py>))) fontified t display "│" face highlight-indent-guides-character-face) 118 119 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 3892 in ce_utils.py> . #<marker at 4658 in ce_utils.py>))) fontified t) 119 120 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 3892 in ce_utils.py> . #<marker at 4658 in ce_utils.py>))) fontified t) 120 121 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 3892 in ce_utils.py> . #<marker at 4658 in ce_utils.py>))) fontified t) 121 122 (highlight-indent-guides-prop (1 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 4602 in ce_utils.py> . #<marker at 4602 in ce_utils.py>) (#<marker at 3892 in ce_utils.py> . #<marker at 4658 in ce_utils.py>))) fontified t display "│" face highlight-indent-guides-character-face) 122 123 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 4602 in ce_utils.py> . #<marker at 4602 in ce_utils.py>) (#<marker at 3892 in ce_utils.py> . #<marker at 4658 in ce_utils.py>))) fontified t) 123 124 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 4602 in ce_utils.py> . #<marker at 4602 in ce_utils.py>) (#<marker at 3892 in ce_utils.py> . #<marker at 4658 in ce_utils.py>))) fontified t) 124 125 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 4602 in ce_utils.py> . #<marker at 4602 in ce_utils.py>) (#<marker at 3892 in ce_utils.py> . #<marker at 4658 in ce_utils.py>))) fontified t) 125 130 (fontified t face font-lock-string-face) 130 132 (fontified t) 132 144 (fontified t face font-lock-string-face) 144 146 (fontified t) 146 154 (fontified t face font-lock-string-face) 154 156 (fontified t) 156 163 (fontified t face font-lock-string-face) 163 165 (fontified t) 165 175 (fontified t face font-lock-string-face) 175 177 (fontified t) 177 189 (fontified t face font-lock-string-face) 189 191 (fontified t) 191 199 (fontified t face font-lock-string-face) 199 201 (fontified t) 201 210 (fontified t face font-lock-string-face) 210 212 (fontified t) 212 223 (fontified t face font-lock-string-face) 223 224 (fontified t face (rainbow-delimiters-depth-1-face)) 224 225 (fontified t)) . 4603) (undo-tree-id179 . -117) (undo-tree-id180 . -225) (undo-tree-id181 . -145) (undo-tree-id182 . -145) (undo-tree-id183 . -28) (undo-tree-id184 . -145) (undo-tree-id185 . -117) (undo-tree-id186 . -224) (undo-tree-id187 . -28) (undo-tree-id188 . -145) 4748) nil (25435 64290 886900 787000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . 4289)) nil (25435 64290 886887 634000) 0 nil])
([nil nil ((4289 . 4297) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . 4289) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . 4289) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . 4289) (#("l" 0 1 (fontified t face font-lock-builtin-face)) . 4289) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . 4289) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . 4289)) nil (25435 64290 886885 166000) 0 nil])
([nil nil ((4289 . 4297) (#("matrices" 0 8 (fontified t face font-lock-variable-name-face)) . 4289)) nil (25435 64290 886882 261000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . 4383)) nil (25435 64290 886880 823000) 0 nil])
([nil nil ((4383 . 4386) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . 4383)) nil (25435 64290 886879 532000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4404)) nil (25435 64290 886877 965000) 0 nil])
([nil nil ((4404 . 4407) (#("m" 0 1 (fontified t)) . 4404)) nil (25435 64290 886876 700000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . 4466)) nil (25435 64290 886875 214000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face font-lock-variable-name-face)) . 4466)) nil (25435 64290 886874 62000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . 4466)) nil (25435 64290 886872 892000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4489)) nil (25435 64290 886871 607000) 0 nil])
([nil nil ((4490 . 4492) (#("m" 0 1 (fontified t)) . -4490) (undo-tree-id178 . -1) 4491 (4490 . 4491)) nil (25435 64290 886869 822000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . 4567)) nil (25435 64290 886866 775000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face font-lock-variable-name-face)) . 4567)) nil (25435 64290 886865 588000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . 4567)) nil (25435 64290 886864 422000) 0 nil])
([nil nil ((4570 . 4571) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -4570) (undo-tree-id177 . -1) 4571 (4567 . 4571)) nil (25435 64290 886862 872000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4609)) nil (25435 64290 886859 559000) 0 nil])
([nil nil ((4609 . 4612) (#("m" 0 1 (fontified t)) . 4609)) nil (25435 64290 886856 917000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4646)) nil (25435 64290 886855 337000) 0 nil])
([nil nil ((4646 . 4649) (#("m" 0 1 (fontified t)) . 4646)) nil (25435 64290 886853 980000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4591)) nil (25435 64290 886852 275000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 4591)) nil (25435 64290 886850 681000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 4591)) nil (25435 64290 886849 377000) 0 nil])
([nil nil ((4625 . 4630) (#("emotion_names" 0 13 (fontified t)) . 4625) (undo-tree-id172 . -12) (undo-tree-id173 . -12) (undo-tree-id174 . -13) (undo-tree-id175 . -12) (undo-tree-id176 . -12) 4637) nil (25435 64290 886847 493000) 0 nil])
([nil nil ((4652 . 4657) (#("emotion_names" 0 12 (fontified t) 12 13 (rear-nonsticky t fontified t)) . 4652) (undo-tree-id167 . -13) (undo-tree-id168 . -12) (undo-tree-id169 . -12) (undo-tree-id170 . -12) (undo-tree-id171 . -12) 4664) nil (25435 64290 886839 724000) 0 nil])
([nil nil ((4675 . 4678) (#("e" 0 1 (match-data (0 2 0 1 1 2) fontified t)) . -4675) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("r" 0 1 (match-data (0 2 0 1 1 2) fontified t)) . -4676) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("a" 0 1 (match-data (0 2 0 1 1 2) fontified t)) . -4677) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) 4678 (4669 . 4678) (4663 . 4669) (#("re" 0 2 (fontified nil)) . -4663) (nil fontified nil 4663 . 4665) (4663 . 4665) (#("return" 0 6 (fontified nil)) . -4663) (nil fontified nil 4663 . 4669) (4663 . 4669) (#("retu" 0 4 (fontified t)) . -4663) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) 4667 (4663 . 4667) (4659 . 4663) (#("    " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 4658) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (4662 . 4663) (#(" " 0 1 (fontified t)) . -4662) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 4663 (#("r" 0 1 (fontified t)) . -4663) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("e" 0 1 (fontified t)) . -4664) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("u" 0 1 (fontified t)) . -4665) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("r" 0 1 (fontified t)) . -4666) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 4667 (4663 . 4667) (4662 . 4663) (4657 . 4662) 4656) nil (25435 64290 886822 499000) 0 nil])
([nil current ((4678 . 4679)) nil (25435 64290 885253 235000) 0 nil])
nil
