(undo-tree-save-format-version . 1)
"fa07b46112e2760bbfba606f28e8177bd1e42895"
[nil nil nil nil (25351 29421 762987 982000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1234 . 1235) (#("
" 0 1 (fontified nil)) . -1278) (1231 . 1279) 1185) nil (25351 29464 487463 514000) 0 nil] [nil nil ((nil rear-nonsticky nil 1209 . 1210) (nil fontified nil 1203 . 1210) (1203 . 1210) 1210 (#("#EBDBB2" 0 7 (fontified t face ((:foreground "black") (:background "#EBDBB2")))) . 1203) (undo-tree-id0 . -6) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -7) (undo-tree-id17 . -6) (undo-tree-id18 . -7) (undo-tree-id19 . -6) (undo-tree-id20 . -6) (undo-tree-id21 . -6) (undo-tree-id22 . -6) (undo-tree-id23 . -6) (undo-tree-id24 . -6) (undo-tree-id25 . -7) 1210 (t 25313 17265 266497 648000)) ((1203 . 1210) (#("#ffffff" 0 6 (fontified nil face ((:foreground "black") (:background "#ffffff"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "black") (:background "#ffffff")))) . 1203) (undo-tree-id26 . -6) (undo-tree-id27 . -6) (undo-tree-id28 . -6) (undo-tree-id29 . -6) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (nil rear-nonsticky t 1209 . 1210) (t 25351 29394 707737 145000)) (25351 29394 698000 499000) 0 nil])
([nil nil ((apply -3 1185 1235 undo--wrap-and-run-primitive-undo 1185 1235 ((nil fontified t 1188 . 1191) (nil face highlight-indent-guides-character-face 1188 . 1191) (1188 . 1191)))) nil (25351 29464 488684 479000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1259 . 1260) (nil fontified nil 1253 . 1260) (1253 . 1260) 1260 (#("#EBDBB2" 0 7 (fontified t face ((:foreground "black") (:background "#EBDBB2")))) . 1253) (undo-tree-id35 . -7) (undo-tree-id36 . -6) (undo-tree-id37 . -6) (undo-tree-id38 . -6) (undo-tree-id39 . -6) (undo-tree-id40 . -6) (undo-tree-id41 . -6) (undo-tree-id42 . -6) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -7) (undo-tree-id54 . -6) (undo-tree-id55 . -6) (undo-tree-id56 . -6) (undo-tree-id57 . -6) (undo-tree-id58 . -6) (undo-tree-id59 . -6) (undo-tree-id60 . -7) 1260) nil (25351 29469 337494 133000) 0 nil] [nil nil ((nil rear-nonsticky nil 1266 . 1267) (nil fontified nil 1260 . 1267) (1260 . 1267) 1259) ((#("#ebebeb" 0 6 (fontified nil face font-lock-string-face) 6 7 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 1260) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (nil rear-nonsticky t 1266 . 1267)) (25351 29464 487451 949000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1259 . 1260) (nil fontified nil 1253 . 1260) (1253 . 1260) 1260 (#("#ebebeb" 0 6 (fontified t face ((:foreground "black") (:background "#ebebeb"))) 6 7 (fontified t rear-nonsticky t face ((:foreground "black") (:background "#ebebeb")))) . 1253) (undo-tree-id61 . -7) (undo-tree-id62 . -6) (undo-tree-id63 . -6) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (undo-tree-id66 . -6) (undo-tree-id67 . -6) (undo-tree-id68 . -6) (undo-tree-id69 . -6) (undo-tree-id70 . -6) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) (undo-tree-id77 . -6) (undo-tree-id78 . -6) (undo-tree-id79 . -6) (undo-tree-id80 . -7) (undo-tree-id81 . -6) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (undo-tree-id87 . -7) 1260 (t 25351 29469 344525 0)) nil (25351 29484 48685 504000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1259 . 1260) (nil fontified nil 1253 . 1260) (1253 . 1260) 1260 (#("#d3d3d3" 0 6 (fontified t face ((:foreground "black") (:background "#d3d3d3"))) 6 7 (fontified t rear-nonsticky t face ((:foreground "black") (:background "#d3d3d3")))) . 1253) (undo-tree-id88 . -7) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -7) (undo-tree-id92 . -6) (undo-tree-id93 . -6) (undo-tree-id94 . -6) (undo-tree-id95 . -6) (undo-tree-id96 . -6) (undo-tree-id97 . -6) (undo-tree-id98 . -7) 1260 (t 25351 29484 54548 433000)) nil (25351 29532 248338 748000) 0 nil])
([nil nil ((apply 3 1185 1231 undo--wrap-and-run-primitive-undo 1185 1231 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1188) 1209)) (t 25351 29532 257957 579000)) nil (25417 10326 266768 814000) 0 nil])
([nil nil ((apply -3 1232 1282 undo--wrap-and-run-primitive-undo 1232 1282 ((1235 . 1238)))) ((apply 3 1232 1279 undo--wrap-and-run-primitive-undo 1232 1279 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1235) 620))) (25417 10327 133783 451000) 0 nil])
([nil nil ((620 . 627) (#("#202731" 0 7 (fontified t face ((:foreground "white") (:background "#202731")))) . 620)) ((620 . 627) (#("#272835" 0 6 (fontified t face ((:foreground "white") (:background "#272835"))) 6 7 (fontified t rear-nonsticky nil face ((:foreground "white") (:background "#272835")))) . 620) (undo-tree-id936 . -7) (undo-tree-id937 . -6) (undo-tree-id938 . -6) (undo-tree-id939 . -7) (undo-tree-id940 . -7) (undo-tree-id941 . -7) (undo-tree-id942 . -7) (undo-tree-id943 . -7) (undo-tree-id944 . -7) (undo-tree-id945 . -7)) (25417 10327 766125 129000) 0 nil])
([nil nil ((nil rear-nonsticky nil 627 . 628) (nil fontified nil 620 . 628) (620 . 628) 627 (#("#272835" 0 6 (fontified t face ((:foreground "white") (:background "#272835"))) 6 7 (fontified t rear-nonsticky nil face ((:foreground "white") (:background "#272835")))) . 620) (undo-tree-id958 . -7) (undo-tree-id959 . -6) (undo-tree-id960 . -6) (undo-tree-id961 . -7) (undo-tree-id962 . -7) (undo-tree-id963 . -7) (undo-tree-id964 . -7) (undo-tree-id965 . -7) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -6) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -7) (undo-tree-id1083 . -6) (undo-tree-id1084 . -6) (undo-tree-id1085 . -6) (undo-tree-id1086 . -6) (undo-tree-id1087 . -6) (undo-tree-id1088 . -6) (undo-tree-id1089 . -6) (undo-tree-id1090 . -7) 627 (t 25417 10329 431389 351000)) nil (25417 10361 642383 267000) 0 nil] [nil nil ((nil rear-nonsticky nil 626 . 627) (nil fontified nil 620 . 627) (620 . 627) 627 (#("#272835" 0 6 (fontified t face ((:foreground "white") (:background "#272835"))) 6 7 (fontified t rear-nonsticky nil face ((:foreground "white") (:background "#272835")))) . 620) (undo-tree-id679 . -7) (undo-tree-id680 . -6) (undo-tree-id681 . -6) (undo-tree-id683 . -7) (undo-tree-id685 . -7) (undo-tree-id687 . -7) (undo-tree-id689 . -7) (undo-tree-id691 . -7) (undo-tree-id692 . -6) (undo-tree-id694 . -6) (undo-tree-id696 . -6) (undo-tree-id698 . -6) (undo-tree-id700 . -6) 627 (t 25417 10057 948145 259000)) ((620 . 627) (#("#1C242D" 0 6 (fontified nil face ((:foreground "white") (:background "#1C242D"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#1C242D")))) . 620) (undo-tree-id927 . -7) (undo-tree-id928 . -6) (undo-tree-id929 . -7) (undo-tree-id930 . -7) (undo-tree-id931 . -7) (undo-tree-id932 . -7) (undo-tree-id933 . -7) (undo-tree-id934 . -7) (undo-tree-id935 . -7) (nil rear-nonsticky t 626 . 627)) (25417 10323 930755 607000) 0 nil] [nil nil ((nil rear-nonsticky nil 626 . 627) (nil fontified nil 620 . 627) (620 . 627) 627 (#("#272835" 0 6 (fontified t face ((:foreground "white") (:background "#272835"))) 6 7 (fontified t rear-nonsticky nil face ((:foreground "white") (:background "#272835")))) . 620) (undo-tree-id293 . -7) (undo-tree-id294 . -6) (undo-tree-id295 . -6) (undo-tree-id296 . -6) (undo-tree-id298 . -1) (undo-tree-id300 . -1) (undo-tree-id302 . -1) (undo-tree-id304 . -6) (undo-tree-id306 . -6) (undo-tree-id308 . -6) (undo-tree-id310 . -6) (undo-tree-id312 . -6) (undo-tree-id314 . -6) (undo-tree-id316 . -6) (undo-tree-id318 . -5) (undo-tree-id320 . -5) (undo-tree-id322 . -5) (undo-tree-id324 . -4) (undo-tree-id326 . -4) (undo-tree-id328 . -4) (undo-tree-id330 . -3) (undo-tree-id332 . -3) (undo-tree-id334 . -3) (undo-tree-id336 . -2) (undo-tree-id338 . -2) (undo-tree-id340 . -2) (undo-tree-id342 . -1) (undo-tree-id344 . -1) (undo-tree-id346 . -1) (undo-tree-id348 . -6) (undo-tree-id350 . -6) (undo-tree-id352 . -6) (undo-tree-id354 . -7) (undo-tree-id356 . -7) (undo-tree-id358 . -7) (undo-tree-id360 . -7) (undo-tree-id362 . -7) (undo-tree-id364 . -7) (undo-tree-id366 . -7) (undo-tree-id368 . -7) (undo-tree-id370 . -7) (undo-tree-id372 . -7) (undo-tree-id374 . -7) (undo-tree-id376 . -7) (undo-tree-id378 . -7) (undo-tree-id380 . -7) (undo-tree-id382 . -7) (undo-tree-id384 . -7) (undo-tree-id386 . -7) (undo-tree-id388 . -7) (undo-tree-id390 . -7) (undo-tree-id392 . -6) (undo-tree-id394 . -6) (undo-tree-id396 . -6) (undo-tree-id398 . -6) 627 (t 25417 9395 248002 660000)) ((620 . 627) (#("#2D393D" 0 6 (fontified nil face ((:foreground "white") (:background "#2D393D"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#2D393D")))) . 620) (undo-tree-id656 . -7) (undo-tree-id657 . -6) (undo-tree-id658 . -6) (undo-tree-id659 . -7) (undo-tree-id660 . -7) (undo-tree-id661 . -7) (undo-tree-id662 . -7) (undo-tree-id663 . -7) (undo-tree-id664 . -7) (undo-tree-id665 . -7) (nil rear-nonsticky t 626 . 627)) (25417 10026 589362 641000) 0 nil] [nil nil ((nil rear-nonsticky nil 627 . 628) (nil fontified nil 620 . 628) (620 . 628) 627 (#("#272835" 0 6 (fontified t face ((:foreground "white") (:background "#272835"))) 6 7 (fontified t rear-nonsticky nil face ((:foreground "white") (:background "#272835")))) . 620) (undo-tree-id226 . -7) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -6) (undo-tree-id238 . -6) (undo-tree-id239 . -6) (undo-tree-id240 . -6) (undo-tree-id241 . -6) (undo-tree-id242 . -6) (undo-tree-id243 . -6) (undo-tree-id244 . -6) (undo-tree-id245 . -6) (undo-tree-id246 . -6) (undo-tree-id247 . -6) (undo-tree-id248 . -6) (undo-tree-id249 . -6) (undo-tree-id250 . -5) (undo-tree-id251 . -5) (undo-tree-id252 . -5) (undo-tree-id253 . -5) (undo-tree-id254 . -5) (undo-tree-id255 . -5) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -3) (undo-tree-id263 . -3) (undo-tree-id264 . -3) (undo-tree-id265 . -3) (undo-tree-id266 . -3) (undo-tree-id267 . -3) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -7) (undo-tree-id281 . -6) (undo-tree-id282 . -6) (undo-tree-id283 . -6) (undo-tree-id284 . -6) (undo-tree-id285 . -6) (undo-tree-id286 . -6) (undo-tree-id287 . -6) (undo-tree-id288 . -7) 627 (t 25417 9395 248002 660000)) ((620 . 627) (#("#2D393D
" 0 7 (fontified nil face ((:foreground "white") (:background "#2D393D"))) 7 8 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 620) (undo-tree-id289 . -7) (undo-tree-id290 . -6) (undo-tree-id291 . -8) (undo-tree-id292 . -6) (nil rear-nonsticky t 627 . 628)) (25417 9931 457527 116000) 0 nil] [nil nil ((nil rear-nonsticky nil 1209 . 1210) (nil fontified nil 1203 . 1210) (1203 . 1210) 1210 (#("#EBDBB2" 0 7 (fontified t face ((:foreground "black") (:background "#EBDBB2")))) . 1203) (undo-tree-id64 . -7) (undo-tree-id65 . -6) (undo-tree-id66 . -6) (undo-tree-id67 . -6) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -5) (undo-tree-id93 . -5) (undo-tree-id94 . -5) (undo-tree-id95 . -5) (undo-tree-id96 . -5) (undo-tree-id97 . -5) (undo-tree-id98 . -6) (undo-tree-id99 . -6) (undo-tree-id100 . -6) (undo-tree-id101 . -6) (undo-tree-id102 . -6) (undo-tree-id103 . -6) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -7) (undo-tree-id108 . -7) (undo-tree-id109 . -7) (undo-tree-id110 . -7) (undo-tree-id111 . -7) (undo-tree-id112 . -7) (undo-tree-id113 . -7) (undo-tree-id114 . -7) (undo-tree-id115 . -7) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -7) (undo-tree-id123 . -6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -7) 1210 (t 25417 9004 837505 31000)) ((1203 . 1210) (#("#c5c5c5" 0 6 (fontified nil face ((:foreground "black") (:background "#c5c5c5"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "black") (:background "#c5c5c5")))) . 1203) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (undo-tree-id167 . -6) (undo-tree-id168 . -6) (undo-tree-id169 . -6) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -6) (undo-tree-id187 . -6) (undo-tree-id188 . -6) (undo-tree-id189 . -6) (undo-tree-id190 . -6) (undo-tree-id191 . -6) (undo-tree-id192 . -6) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (undo-tree-id195 . -6) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -6) (undo-tree-id205 . -6) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -6) (undo-tree-id214 . -6) (undo-tree-id215 . -6) (undo-tree-id216 . -6) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -6) (undo-tree-id220 . -6) (undo-tree-id221 . -6) (undo-tree-id222 . -6) (undo-tree-id223 . -6) (undo-tree-id224 . -6) (undo-tree-id225 . -6) (nil rear-nonsticky t 1209 . 1210) (t 25417 9351 174613 660000)) (25417 9351 169919 477000) 0 nil] [nil nil ((nil rear-nonsticky nil 1209 . 1210) (nil fontified nil 1203 . 1210) (1203 . 1210) 1210 (#("#EBDBB2" 0 7 (fontified t face ((:foreground "black") (:background "#EBDBB2")))) . 1203) (undo-tree-id27 . -6) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -7) (undo-tree-id35 . -7) (undo-tree-id36 . -7) (undo-tree-id37 . -7) (undo-tree-id38 . -7) (undo-tree-id39 . -7) (undo-tree-id40 . -7) (undo-tree-id41 . -6) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) (undo-tree-id46 . -7) (undo-tree-id47 . -7) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -7) (undo-tree-id55 . -6) (undo-tree-id56 . -6) (undo-tree-id57 . -6) (undo-tree-id58 . -6) (undo-tree-id59 . -6) (undo-tree-id60 . -6) (undo-tree-id61 . -6) (undo-tree-id62 . -7) 1210 (t 25417 8815 697258 694000)) ((1203 . 1210) (#("#c5c5c5" 0 6 (fontified nil face ((:foreground "black") (:background "#c5c5c5"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "black") (:background "#c5c5c5")))) . 1203) (undo-tree-id63 . -6) (nil rear-nonsticky t 1209 . 1210) (t 25417 8924 960734 889000)) (25417 8924 955024 68000) 0 nil] [nil nil ((82 . 83) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 82) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (t 25417 8815 697258 694000)) ((82 . 83) (#("a" 0 1 (fontified t)) . 82) (undo-tree-id2 . 1)) (25417 8907 220574 722000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t face font-lock-string-face)) . 620) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1)) nil (25417 10383 297169 623000) 0 nil])
([nil nil ((nil rear-nonsticky nil 626 . 627) (nil fontified nil 620 . 627) (620 . 627) 627 (#("#1C242D" 0 6 (fontified t face ((:foreground "white") (:background "#1C242D"))) 6 7 (fontified t rear-nonsticky t face ((:foreground "white") (:background "#1C242D")))) . 620) (undo-tree-id702 . -7) (undo-tree-id703 . -6) (undo-tree-id704 . -6) (undo-tree-id706 . -6) (undo-tree-id708 . -6) (undo-tree-id710 . -6) (undo-tree-id712 . -5) (undo-tree-id714 . -5) (undo-tree-id716 . -5) (undo-tree-id718 . -4) (undo-tree-id720 . -4) (undo-tree-id722 . -4) (undo-tree-id724 . -3) (undo-tree-id726 . -3) (undo-tree-id728 . -3) (undo-tree-id730 . -2) (undo-tree-id732 . -2) (undo-tree-id734 . -2) (undo-tree-id736 . -1) (undo-tree-id738 . -1) (undo-tree-id740 . -1) (undo-tree-id742 . -7) (undo-tree-id743 . -6) (undo-tree-id745 . -6) (undo-tree-id747 . -6) (undo-tree-id749 . -6) 627 (t 25417 10076 908132 870000)) ((620 . 627) (#("#131d28" 0 6 (fontified nil face ((:foreground "white") (:background "#131d28"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#131d28")))) . 620) (undo-tree-id918 . -7) (undo-tree-id919 . -6) (undo-tree-id920 . -7) (undo-tree-id921 . -7) (undo-tree-id922 . -7) (undo-tree-id923 . -7) (undo-tree-id924 . -7) (undo-tree-id925 . -7) (undo-tree-id926 . -7) (nil rear-nonsticky t 626 . 627)) (25417 10323 598620 722000) 0 nil])
([nil nil ((nil rear-nonsticky nil 626 . 627) (nil fontified nil 620 . 627) (620 . 627) 627 (#("#2D393D" 0 6 (fontified t face ((:foreground "white") (:background "#2D393D"))) 6 7 (fontified t rear-nonsticky t face ((:foreground "white") (:background "#2D393D")))) . 620) (undo-tree-id400 . -7) (undo-tree-id401 . -6) (undo-tree-id403 . -6) (undo-tree-id405 . -6) (undo-tree-id407 . -6) (undo-tree-id409 . -6) (undo-tree-id411 . -6) (undo-tree-id413 . -6) (undo-tree-id415 . -6) (undo-tree-id417 . -6) (undo-tree-id419 . -6) (undo-tree-id421 . -6) (undo-tree-id423 . -6) (undo-tree-id425 . -6) (undo-tree-id427 . -6) (undo-tree-id429 . -6) (undo-tree-id431 . -6) (undo-tree-id433 . -6) (undo-tree-id435 . -6) (undo-tree-id437 . -6) (undo-tree-id438 . -6) (undo-tree-id440 . -6) (undo-tree-id442 . -6) (undo-tree-id444 . -6) (undo-tree-id446 . -7) (undo-tree-id447 . -6) (undo-tree-id449 . -6) (undo-tree-id451 . -6) (undo-tree-id453 . -6) 627 (t 25417 9940 411581 836000)) ((620 . 627) (#("#222B2E" 0 6 (fontified nil face ((:foreground "white") (:background "#222B2E"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#222B2E")))) . 620) (undo-tree-id577 . -7) (undo-tree-id578 . -6) (undo-tree-id579 . -6) (undo-tree-id580 . -6) (undo-tree-id581 . -6) (undo-tree-id582 . -6) (undo-tree-id583 . -6) (undo-tree-id584 . -6) (undo-tree-id585 . -6) (undo-tree-id586 . -6) (undo-tree-id587 . -6) (undo-tree-id588 . -6) (undo-tree-id589 . -6) (undo-tree-id590 . -6) (undo-tree-id591 . -6) (undo-tree-id592 . -6) (undo-tree-id593 . -6) (undo-tree-id594 . -6) (undo-tree-id595 . -6) (undo-tree-id596 . -6) (undo-tree-id597 . -6) (undo-tree-id598 . -6) (undo-tree-id599 . -6) (undo-tree-id600 . -6) (undo-tree-id601 . -6) (undo-tree-id602 . -6) (undo-tree-id603 . -6) (undo-tree-id604 . -6) (undo-tree-id605 . -6) (undo-tree-id606 . -6) (undo-tree-id607 . -6) (undo-tree-id608 . -6) (undo-tree-id609 . -6) (undo-tree-id610 . -6) (undo-tree-id611 . -6) (undo-tree-id612 . -6) (undo-tree-id613 . -6) (undo-tree-id614 . -6) (undo-tree-id615 . -6) (undo-tree-id616 . -6) (undo-tree-id617 . -6) (undo-tree-id618 . -6) (undo-tree-id619 . -6) (undo-tree-id620 . -6) (undo-tree-id621 . -6) (undo-tree-id622 . -6) (undo-tree-id623 . -6) (undo-tree-id624 . -6) (undo-tree-id625 . -6) (undo-tree-id626 . -6) (undo-tree-id627 . -6) (undo-tree-id628 . -6) (undo-tree-id629 . -6) (undo-tree-id630 . -6) (undo-tree-id631 . -6) (undo-tree-id632 . -6) (undo-tree-id633 . -6) (undo-tree-id634 . -6) (undo-tree-id635 . -6) (undo-tree-id636 . -6) (undo-tree-id637 . -6) (undo-tree-id638 . -6) (undo-tree-id639 . -6) (undo-tree-id640 . -6) (undo-tree-id641 . -6) (undo-tree-id642 . -7) (undo-tree-id643 . -7) (undo-tree-id644 . -7) (undo-tree-id645 . -7) (undo-tree-id646 . -7) (undo-tree-id647 . -7) (undo-tree-id648 . -7) (undo-tree-id649 . -7) (undo-tree-id650 . -7) (undo-tree-id651 . -7) (undo-tree-id652 . -7) (undo-tree-id653 . -7) (undo-tree-id654 . -7) (undo-tree-id655 . -7) (nil rear-nonsticky t 626 . 627)) (25417 10026 142771 281000) 0 nil])
nil
nil
nil
([nil nil ((82 . 83)) ((#("n" 0 1 (fontified t)) . 82)) (25417 8907 219510 467000) 0 nil])
([nil current ((nil rear-nonsticky nil 626 . 627) (nil fontified nil 620 . 627) (620 . 627) 627 (#("#232b2b" 0 1 (fontified t face ((:foreground "white") (:background "#232b2b"))) 1 6 (fontified t face ((:foreground "white") (:background "#232b2b"))) 6 7 (fontified t rear-nonsticky t face ((:foreground "white") (:background "#232b2b")))) . 620) (undo-tree-id1122 . -7) (undo-tree-id1123 . -6) (undo-tree-id1124 . -7) (undo-tree-id1125 . -6) (undo-tree-id1126 . -7) (undo-tree-id1127 . -7) (undo-tree-id1128 . -7) (undo-tree-id1129 . -7) (undo-tree-id1130 . -7) (undo-tree-id1131 . -7) (undo-tree-id1132 . -7) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -7) (undo-tree-id1140 . -6) (undo-tree-id1141 . -6) (undo-tree-id1142 . -6) (undo-tree-id1143 . -6) (undo-tree-id1144 . -6) (undo-tree-id1145 . -6) (undo-tree-id1146 . -6) (undo-tree-id1147 . -7) 627 (t 25417 10363 191389 273000)) nil (25417 10471 54565 574000) 0 nil] [nil nil ((nil rear-nonsticky nil 627 . 628) (nil fontified nil 620 . 628) (620 . 628) 627 (#("#232b2b" 0 1 (fontified t face ((:foreground "white") (:background "#232b2b"))) 1 6 (fontified t face ((:foreground "white") (:background "#232b2b"))) 6 7 (fontified t rear-nonsticky t face ((:foreground "white") (:background "#232b2b")))) . 620) (undo-tree-id1097 . -7) (undo-tree-id1098 . -6) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -6) (undo-tree-id1106 . -7) (undo-tree-id1107 . -6) (undo-tree-id1108 . -6) (undo-tree-id1109 . -6) (undo-tree-id1110 . -6) (undo-tree-id1111 . -6) (undo-tree-id1112 . -6) (undo-tree-id1113 . -6) (undo-tree-id1114 . -7) 627 (t 25417 10363 191389 273000)) ((620 . 627) (#("	#3b444b" 0 1 (fontified nil face font-lock-string-face) 1 7 (fontified nil face ((:foreground "white") (:background "#3b444b"))) 7 8 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#3b444b")))) . 620) (undo-tree-id1115 . -7) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (nil rear-nonsticky t 627 . 628)) (25417 10383 78132 214000) 0 nil] [nil nil ((#("#" 0 1 (fontified t face ((:foreground "white") (:background "#232b2b")))) . 620) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1)) ((620 . 621)) (25417 10361 634674 827000) 0 nil])
([nil nil ((nil rear-nonsticky nil 626 . 627) (nil fontified nil 620 . 627) (620 . 627) 627 (#("#131d28" 0 6 (fontified t face ((:foreground "white") (:background "#131d28"))) 6 7 (fontified t rear-nonsticky t face ((:foreground "white") (:background "#131d28")))) . 620) (undo-tree-id819 . -7) (undo-tree-id820 . -6) (undo-tree-id821 . -6) (undo-tree-id823 . -6) (undo-tree-id825 . -6) (undo-tree-id827 . -6) (undo-tree-id829 . -5) (undo-tree-id831 . -5) (undo-tree-id833 . -5) (undo-tree-id835 . -4) (undo-tree-id837 . -4) (undo-tree-id839 . -4) (undo-tree-id841 . -3) (undo-tree-id843 . -3) (undo-tree-id845 . -3) (undo-tree-id847 . -2) (undo-tree-id849 . -2) (undo-tree-id851 . -2) (undo-tree-id853 . -1) (undo-tree-id855 . -1) (undo-tree-id857 . -1) (undo-tree-id859 . -6) (undo-tree-id861 . -6) (undo-tree-id863 . -6) (undo-tree-id865 . -7) (undo-tree-id866 . -6) (undo-tree-id868 . -6) (undo-tree-id870 . -6) (undo-tree-id872 . -6) 627 (t 25417 10118 328109 469000)) ((620 . 627) (#("#273442" 0 6 (fontified nil face ((:foreground "white") (:background "#273442"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#273442")))) . 620) (undo-tree-id909 . -7) (undo-tree-id910 . -6) (undo-tree-id911 . -7) (undo-tree-id912 . -7) (undo-tree-id913 . -7) (undo-tree-id914 . -7) (undo-tree-id915 . -7) (undo-tree-id916 . -7) (undo-tree-id917 . -7) (nil rear-nonsticky t 626 . 627)) (25417 10323 290924 891000) 0 nil])
([nil nil ((nil rear-nonsticky nil 626 . 627) (nil fontified nil 620 . 627) (620 . 627) 627 (#("#222B2E" 0 6 (fontified t face ((:foreground "white") (:background "#222B2E"))) 6 7 (fontified t rear-nonsticky t face ((:foreground "white") (:background "#222B2E")))) . 620) (undo-tree-id455 . -7) (undo-tree-id456 . -6) (undo-tree-id457 . -6) (undo-tree-id458 . -6) (undo-tree-id459 . -6) (undo-tree-id460 . -6) (undo-tree-id461 . -6) (undo-tree-id462 . -6) (undo-tree-id463 . -6) (undo-tree-id464 . -6) (undo-tree-id465 . -6) (undo-tree-id466 . -6) (undo-tree-id467 . -6) (undo-tree-id468 . -6) (undo-tree-id469 . -6) (undo-tree-id470 . -6) (undo-tree-id471 . -6) (undo-tree-id472 . -6) (undo-tree-id473 . -6) (undo-tree-id474 . -6) (undo-tree-id475 . -6) (undo-tree-id476 . -6) (undo-tree-id477 . -6) (undo-tree-id478 . -6) (undo-tree-id479 . -6) (undo-tree-id480 . -6) (undo-tree-id481 . -6) (undo-tree-id482 . -6) (undo-tree-id483 . -6) (undo-tree-id484 . -6) (undo-tree-id485 . -6) (undo-tree-id486 . -6) (undo-tree-id487 . -6) (undo-tree-id488 . -6) (undo-tree-id489 . -6) (undo-tree-id490 . -6) (undo-tree-id491 . -6) (undo-tree-id492 . -6) (undo-tree-id493 . -6) (undo-tree-id494 . -6) (undo-tree-id495 . -6) (undo-tree-id496 . -6) (undo-tree-id497 . -6) (undo-tree-id498 . -6) (undo-tree-id499 . -6) (undo-tree-id500 . -6) (undo-tree-id501 . -6) (undo-tree-id502 . -6) (undo-tree-id503 . -6) (undo-tree-id504 . -6) (undo-tree-id505 . -6) (undo-tree-id506 . -6) (undo-tree-id507 . -6) (undo-tree-id508 . -6) (undo-tree-id509 . -6) (undo-tree-id510 . -6) (undo-tree-id511 . -6) (undo-tree-id512 . -6) (undo-tree-id513 . -6) (undo-tree-id514 . -6) (undo-tree-id515 . -7) (undo-tree-id516 . -6) (undo-tree-id517 . -6) (undo-tree-id518 . -6) (undo-tree-id519 . -6) (undo-tree-id520 . -6) (undo-tree-id521 . -6) (undo-tree-id522 . -6) (undo-tree-id523 . -7) 627 (t 25417 9978 4876 868000)) ((620 . 627) (#("#1E1E28" 0 6 (fontified nil face ((:foreground "white") (:background "#1E1E28"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#1E1E28")))) . 620) (undo-tree-id524 . -6) (undo-tree-id525 . -6) (undo-tree-id526 . -6) (undo-tree-id527 . -6) (undo-tree-id528 . -6) (undo-tree-id529 . -6) (undo-tree-id530 . -6) (undo-tree-id531 . -6) (undo-tree-id532 . -6) (undo-tree-id533 . -6) (undo-tree-id534 . -6) (undo-tree-id535 . -6) (undo-tree-id536 . -6) (undo-tree-id537 . -6) (undo-tree-id538 . -6) (undo-tree-id539 . -6) (undo-tree-id540 . -6) (undo-tree-id541 . -6) (undo-tree-id542 . -6) (undo-tree-id543 . -6) (undo-tree-id544 . -6) (undo-tree-id545 . -6) (undo-tree-id546 . -6) (undo-tree-id547 . -6) (undo-tree-id548 . -6) (undo-tree-id549 . -6) (undo-tree-id550 . -6) (undo-tree-id551 . -6) (undo-tree-id552 . -6) (undo-tree-id553 . -6) (undo-tree-id554 . -6) (undo-tree-id555 . -6) (undo-tree-id556 . -6) (undo-tree-id557 . -6) (undo-tree-id558 . -6) (undo-tree-id559 . -6) (undo-tree-id560 . -6) (undo-tree-id561 . -6) (undo-tree-id562 . -6) (undo-tree-id563 . -6) (undo-tree-id564 . -6) (undo-tree-id565 . -6) (undo-tree-id566 . -6) (undo-tree-id567 . -6) (undo-tree-id568 . -6) (undo-tree-id569 . -6) (undo-tree-id570 . -6) (undo-tree-id571 . -6) (undo-tree-id572 . -6) (undo-tree-id573 . -6) (undo-tree-id574 . -6) (undo-tree-id575 . -6) (undo-tree-id576 . -6) (nil rear-nonsticky t 626 . 627) (t 25417 10006 641517 802000)) (25417 10006 603857 536000) 0 nil])
nil
nil
([nil nil ((#("	" 0 1 (fontified t face font-lock-string-face)) . 620) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1)) ((620 . 621)) (25417 10383 77978 133000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 626 . 627) (nil fontified nil 620 . 627) (620 . 627) 627 (#("#273442" 0 6 (fontified t face ((:foreground "white") (:background "#273442"))) 6 7 (fontified t rear-nonsticky t face ((:foreground "white") (:background "#273442")))) . 620) (undo-tree-id751 . -7) (undo-tree-id752 . -6) (undo-tree-id753 . -6) (undo-tree-id755 . -6) (undo-tree-id757 . -6) (undo-tree-id759 . -6) (undo-tree-id761 . -6) (undo-tree-id763 . -6) (undo-tree-id765 . -6) (undo-tree-id767 . -6) (undo-tree-id769 . -6) (undo-tree-id771 . -6) (undo-tree-id773 . -6) (undo-tree-id775 . -6) (undo-tree-id777 . -6) (undo-tree-id779 . -6) (undo-tree-id781 . -5) (undo-tree-id783 . -5) (undo-tree-id785 . -5) (undo-tree-id787 . -4) (undo-tree-id789 . -4) (undo-tree-id791 . -4) (undo-tree-id793 . -3) (undo-tree-id795 . -3) (undo-tree-id797 . -3) (undo-tree-id799 . -2) (undo-tree-id801 . -2) (undo-tree-id803 . -2) (undo-tree-id805 . -1) (undo-tree-id807 . -1) (undo-tree-id809 . -1) (undo-tree-id811 . -6) (undo-tree-id813 . -6) (undo-tree-id815 . -6) (undo-tree-id817 . -6) 627) ((620 . 627) (#("#243142" 0 6 (fontified nil face ((:foreground "white") (:background "#243142"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#243142")))) . 620) (undo-tree-id887 . -7) (undo-tree-id888 . -6) (undo-tree-id889 . -6) (undo-tree-id890 . -6) (undo-tree-id891 . -6) (undo-tree-id892 . -6) (undo-tree-id893 . -6) (undo-tree-id894 . -6) (undo-tree-id895 . -7) (undo-tree-id896 . -7) (undo-tree-id897 . -7) (undo-tree-id898 . -7) (undo-tree-id899 . -7) (undo-tree-id900 . -7) (undo-tree-id901 . -7) (undo-tree-id902 . -7) (undo-tree-id903 . -7) (undo-tree-id904 . -7) (undo-tree-id905 . -7) (undo-tree-id906 . -7) (undo-tree-id907 . -7) (undo-tree-id908 . -7) (nil rear-nonsticky t 626 . 627)) (25417 10322 913461 608000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 626 . 627) (nil fontified nil 620 . 627) (620 . 627) 627 (#("#243142" 0 6 (fontified t face ((:foreground "white") (:background "#243142"))) 6 7 (fontified t rear-nonsticky t face ((:foreground "white") (:background "#243142")))) . 620) (undo-tree-id874 . -7) (undo-tree-id875 . -6) (undo-tree-id876 . -6) (undo-tree-id877 . -7) (undo-tree-id878 . -6) (undo-tree-id879 . -6) (undo-tree-id880 . -6) (undo-tree-id881 . -6) (undo-tree-id882 . -6) (undo-tree-id883 . -6) (undo-tree-id884 . -6) (undo-tree-id885 . -7) 627 (t 25417 10236 111400 776000)) ((620 . 627) (#("#202e3b" 0 6 (fontified nil face ((:foreground "white") (:background "#202e3b"))) 6 7 (fontified nil rear-nonsticky nil face ((:foreground "white") (:background "#202e3b")))) . 620) (undo-tree-id886 . -6) (nil rear-nonsticky t 626 . 627) (t 25417 10261 368062 615000)) (25417 10261 358228 217000) 0 nil])
nil
