(undo-tree-save-format-version . 1)
"18ddab5800ac044b0fa7b12ee9172af0a96f87a5"
[nil nil nil nil (25358 9604 91655 324000) 0 nil]
([nil nil ((133 . 138) (#("i" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -133) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("n" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -134) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 135 (130 . 135) (#("A" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -130) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("k" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -131) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) 132 (127 . 132) (126 . 127) (126 . 127) (t 25302 45867 206328 300000) 126) nil (25447 42125 709370 97000) 0 nil])
([nil nil ((#("
" 0 1 (org-category "20220718143717-natural_language_processing" wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 698) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (165 . 698) (#("  * *Token*: it's a sequence of characters (letters or symbols) the we count as
    units. For instance the sequence of letter comprising the word \"parrot\" or
    the sequence of symbols included in a emoji like :-) are considered to be tokens.
  * *Word Type*: it represents the form of the word independently form the
    context. So it's basically a synonym of \"word\".
  * *Types*: similar concept to word type but it also includes punctuation, so
    it's a broader category.
  * *Hapaxes*: words that occur only once in a text." 0 2 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face org-superstar-item composition (3 1 [8226]) fontified t) 3 4 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 5 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t org-emphasis t font-lock-multiline t fontified t) 5 10 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-emphasis t font-lock-multiline t face (bold) fontified t) 10 11 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t org-emphasis t font-lock-multiline t fontified t) 11 80 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 80 159 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 159 245 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 245 247 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 247 248 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face org-superstar-item composition (3 1 [8226]) fontified t) 248 249 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 249 250 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t org-emphasis t font-lock-multiline t fontified t) 250 259 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-emphasis t font-lock-multiline t face (bold) fontified t) 259 260 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t org-emphasis t font-lock-multiline t fontified t) 260 320 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 320 372 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 372 374 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 374 375 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face org-superstar-item composition (3 1 [8226]) fontified t) 375 376 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 376 377 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t org-emphasis t font-lock-multiline t fontified t) 377 382 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-emphasis t font-lock-multiline t face (bold) fontified t) 382 383 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t org-emphasis t font-lock-multiline t fontified t) 383 451 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 451 480 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 480 482 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 482 483 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face org-superstar-item composition (3 1 [8226]) fontified t) 483 484 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 484 485 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t org-emphasis t font-lock-multiline t fontified t) 485 492 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-emphasis t font-lock-multiline t face (bold) fontified t) 492 493 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t org-emphasis t font-lock-multiline t fontified t) 493 532 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 165) (undo-tree-id288 . -12) (undo-tree-id289 . -80) (undo-tree-id290 . -461) (undo-tree-id291 . -461) (undo-tree-id292 . -461) (undo-tree-id293 . -461) (undo-tree-id294 . -461) (undo-tree-id295 . -461) (undo-tree-id296 . -461) (undo-tree-id297 . -491) (undo-tree-id298 . -491) (undo-tree-id299 . -491) (undo-tree-id300 . -491) (undo-tree-id301 . -491) (undo-tree-id302 . -491) (undo-tree-id303 . -491) (undo-tree-id304 . -491) (undo-tree-id305 . -491) (undo-tree-id306 . -491) (undo-tree-id307 . -491) (undo-tree-id308 . -491) (undo-tree-id309 . -491) (undo-tree-id310 . -491) (undo-tree-id311 . -461) (undo-tree-id312 . -461) (undo-tree-id313 . -461) (undo-tree-id314 . -461) (undo-tree-id315 . -461) (undo-tree-id316 . -461) (undo-tree-id317 . -461) (undo-tree-id318 . -491) (undo-tree-id319 . -491) (undo-tree-id320 . -491) (undo-tree-id321 . -491) (undo-tree-id322 . -491) (undo-tree-id323 . -491) (undo-tree-id324 . -491) (undo-tree-id325 . -461) (undo-tree-id326 . -461) (undo-tree-id327 . -461) (undo-tree-id328 . -461) (undo-tree-id329 . -461) (undo-tree-id330 . -461) (undo-tree-id331 . -461) (undo-tree-id332 . -461) (undo-tree-id333 . -461) (undo-tree-id334 . -461) (undo-tree-id335 . -461) (undo-tree-id336 . -461) (undo-tree-id337 . -461) (undo-tree-id338 . -461) (undo-tree-id339 . -461) (undo-tree-id340 . -461) (undo-tree-id341 . -461) (undo-tree-id342 . -461) (undo-tree-id343 . -461) (undo-tree-id344 . -461) (undo-tree-id345 . -461) (undo-tree-id346 . -491) (undo-tree-id347 . -491) (undo-tree-id348 . -491) (undo-tree-id349 . -491) (undo-tree-id350 . -491) (undo-tree-id351 . -491) (undo-tree-id352 . -491) (undo-tree-id353 . -491) (undo-tree-id354 . -491) (undo-tree-id355 . -491) (undo-tree-id356 . -491) (undo-tree-id357 . -491) (undo-tree-id358 . -491) (undo-tree-id359 . -491) (undo-tree-id360 . -461) (undo-tree-id361 . -461) (undo-tree-id362 . -461) (undo-tree-id363 . -461) (undo-tree-id364 . -461) (undo-tree-id365 . -461) (undo-tree-id366 . -461) (undo-tree-id367 . -491) (undo-tree-id368 . -491) (undo-tree-id369 . -491) (undo-tree-id370 . -491) (undo-tree-id371 . -491) (undo-tree-id372 . -491) (undo-tree-id373 . -491) (undo-tree-id374 . -461) (undo-tree-id375 . -461) (undo-tree-id376 . -461) (undo-tree-id377 . -461) (undo-tree-id378 . -461) (undo-tree-id379 . -461) (undo-tree-id380 . -461) (undo-tree-id381 . -384) (undo-tree-id382 . -384) (undo-tree-id383 . -384) (undo-tree-id384 . -384) (undo-tree-id385 . -384) (undo-tree-id386 . -384) (undo-tree-id387 . -384) (undo-tree-id388 . -330) (undo-tree-id389 . -330) (undo-tree-id390 . -330) (undo-tree-id391 . -330) (undo-tree-id392 . -330) (undo-tree-id393 . -330) (undo-tree-id394 . -330) (undo-tree-id395 . -256) (undo-tree-id396 . -256) (undo-tree-id397 . -256) (undo-tree-id398 . -256) (undo-tree-id399 . -256) (undo-tree-id400 . -256) (undo-tree-id401 . -256) (undo-tree-id402 . -169) (undo-tree-id403 . -169) (undo-tree-id404 . -169) (undo-tree-id405 . -169) (undo-tree-id406 . -169) (undo-tree-id407 . -169) (undo-tree-id408 . -169) (undo-tree-id409 . -90) (undo-tree-id410 . -90) (undo-tree-id411 . -90) (undo-tree-id412 . -90) (undo-tree-id413 . -90) (undo-tree-id414 . -90) (undo-tree-id415 . -90) (undo-tree-id416 . -169) (undo-tree-id417 . -169) (undo-tree-id418 . -169) (undo-tree-id419 . -169) (undo-tree-id420 . -169) (undo-tree-id421 . -169) (undo-tree-id422 . -169) (undo-tree-id423 . -256) (undo-tree-id424 . -256) (undo-tree-id425 . -256) (undo-tree-id426 . -256) (undo-tree-id427 . -256) (undo-tree-id428 . -256) (undo-tree-id429 . -256) (undo-tree-id430 . -330) (undo-tree-id431 . -330) (undo-tree-id432 . -330) (undo-tree-id433 . -330) (undo-tree-id434 . -330) (undo-tree-id435 . -330) (undo-tree-id436 . -330) (undo-tree-id437 . -384) (undo-tree-id438 . -384) (undo-tree-id439 . -384) (undo-tree-id440 . -384) (undo-tree-id441 . -384) (undo-tree-id442 . -384) (undo-tree-id443 . -384) (undo-tree-id444 . -461) (undo-tree-id445 . -461) (undo-tree-id446 . -461) (undo-tree-id447 . -461) (undo-tree-id448 . -461) (undo-tree-id449 . -461) (undo-tree-id450 . -461) (undo-tree-id451 . -491) (undo-tree-id452 . -491) (undo-tree-id453 . -491) (undo-tree-id454 . -491) (undo-tree-id455 . -491) (undo-tree-id456 . -491) (undo-tree-id457 . -491) (undo-tree-id458 . -491) (undo-tree-id459 . -491) (undo-tree-id460 . -491) (undo-tree-id461 . -491) (undo-tree-id462 . -491) (undo-tree-id463 . -491) (undo-tree-id464 . -491) (undo-tree-id465 . -491) (undo-tree-id466 . -491) (undo-tree-id467 . -491) (undo-tree-id468 . -491) (undo-tree-id469 . -491) (undo-tree-id470 . -491) (undo-tree-id471 . -491) (undo-tree-id472 . -461) (undo-tree-id473 . -461) (undo-tree-id474 . -461) (undo-tree-id475 . -461) (undo-tree-id476 . -461) (undo-tree-id477 . -461) (undo-tree-id478 . -461) (undo-tree-id479 . 47) (undo-tree-id480 . -492) (undo-tree-id481 . -491) (undo-tree-id482 . -491) (undo-tree-id483 . -491) (undo-tree-id484 . -491) (undo-tree-id485 . -491) (undo-tree-id486 . -491) (undo-tree-id487 . -491) (undo-tree-id488 . -461) (undo-tree-id489 . -461) (undo-tree-id490 . -461) (undo-tree-id491 . -461) (undo-tree-id492 . -461) (undo-tree-id493 . -461) (undo-tree-id494 . -461) (undo-tree-id495 . -461) (undo-tree-id496 . -461) (undo-tree-id497 . -461) (undo-tree-id498 . -461) (undo-tree-id499 . -461) (undo-tree-id500 . -461) (undo-tree-id501 . -461) (undo-tree-id502 . -461) (undo-tree-id503 . -461) (undo-tree-id504 . -461) (undo-tree-id505 . -461) (undo-tree-id506 . -461) (undo-tree-id507 . -461) (undo-tree-id508 . -461) (undo-tree-id509 . -384) (undo-tree-id510 . -384) (undo-tree-id511 . -384) (undo-tree-id512 . -384) (undo-tree-id513 . -384) (undo-tree-id514 . -384) (undo-tree-id515 . -384) (undo-tree-id516 . -330) (undo-tree-id517 . -330) (undo-tree-id518 . -330) (undo-tree-id519 . -330) (undo-tree-id520 . -330) (undo-tree-id521 . -330) (undo-tree-id522 . -330) (undo-tree-id523 . -256) (undo-tree-id524 . -256) (undo-tree-id525 . -256) (undo-tree-id526 . -256) (undo-tree-id527 . -256) (undo-tree-id528 . -256) (undo-tree-id529 . -256) (undo-tree-id530 . -169) (undo-tree-id531 . -169) (undo-tree-id532 . -169) (undo-tree-id533 . -169) (undo-tree-id534 . -169) (undo-tree-id535 . -169) (undo-tree-id536 . -169) (undo-tree-id537 . -90) (undo-tree-id538 . -90) (undo-tree-id539 . -90) (undo-tree-id540 . -90) (undo-tree-id541 . -90) (undo-tree-id542 . -90) (undo-tree-id543 . -90) (undo-tree-id544 . -12) (undo-tree-id545 . -12) (undo-tree-id546 . -12) (undo-tree-id547 . -12) (undo-tree-id548 . -12) (undo-tree-id549 . -12) (undo-tree-id550 . -12) (undo-tree-id551 . -12) (undo-tree-id552 . -12) (undo-tree-id553 . -12) (undo-tree-id554 . -12) (undo-tree-id555 . -12) (undo-tree-id556 . -12) (undo-tree-id557 . -12) (undo-tree-id558 . -12) (undo-tree-id559 . -12) (undo-tree-id560 . -12) (undo-tree-id561 . -12) (undo-tree-id562 . -12) (undo-tree-id563 . -12) (undo-tree-id564 . -12) (undo-tree-id565 . -12) (undo-tree-id566 . -12) (undo-tree-id567 . -12) (undo-tree-id568 . -12) (undo-tree-id569 . -12) (undo-tree-id570 . -12) (undo-tree-id571 . -12) (undo-tree-id572 . -12) (undo-tree-id573 . -12) (undo-tree-id574 . -12) (t 25447 42125 724766 100000)) nil (25447 47297 920306 893000) 0 nil])
([nil nil ((716 . 721) (711 . 716) (708 . 711) (#("u" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -708) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -709) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) 710 (702 . 710) (571 . 702) (#("  * 
  * *Word Type*: it represents the form of the word independently form the
    context. So it's basically a synonym of \"word\"." 0 2 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 4 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 7 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 7 8 (face org-superstar-item composition (3 1 [8226]) org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 8 9 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 9 10 (invisible t org-emphasis t font-lock-multiline t org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 10 19 (org-emphasis t font-lock-multiline t face (bold) org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 19 20 (invisible t org-emphasis t font-lock-multiline t org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 20 80 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 80 131 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 571) (undo-tree-id216 . -131) (undo-tree-id217 . -131) (undo-tree-id218 . -131) (undo-tree-id219 . -80) (undo-tree-id220 . -80) (undo-tree-id221 . -80) (undo-tree-id222 . -80) (undo-tree-id223 . -80) (undo-tree-id224 . -80) (undo-tree-id225 . -80) (undo-tree-id226 . -80) (undo-tree-id227 . -80) (undo-tree-id228 . -80) (undo-tree-id229 . -80) (undo-tree-id230 . -80) (undo-tree-id231 . -80) (undo-tree-id232 . -80) (undo-tree-id233 . -80) (undo-tree-id234 . -80) (undo-tree-id235 . -80) (undo-tree-id236 . -80) (undo-tree-id237 . -80) (undo-tree-id238 . -80) (undo-tree-id239 . -80) (undo-tree-id240 . -131) (undo-tree-id241 . -131) (undo-tree-id242 . -131) (undo-tree-id243 . -131) (undo-tree-id244 . -131) (undo-tree-id245 . -131) (undo-tree-id246 . -131) (undo-tree-id247 . -131) (undo-tree-id248 . -5) (571 . 576) (#("
    " 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 5 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -697) (undo-tree-id249 . -5) (undo-tree-id250 . -1) (undo-tree-id251 . -5) (undo-tree-id252 . -5) (undo-tree-id253 . -5) (undo-tree-id254 . -5) (undo-tree-id255 . -5) (undo-tree-id256 . -5) (undo-tree-id257 . -5) (undo-tree-id258 . -5) (undo-tree-id259 . -5) 702 (697 . 702) 646) nil (25447 47297 919888 314000) 0 nil])
([nil nil ((744 . 747) (723 . 744) (#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -723) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -724) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -725) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -726) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) 727 (721 . 727) (#("g" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -721) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) 722 (720 . 722) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . 720) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1)) nil (25447 47297 918134 79000) 0 nil])
([nil nil ((718 . 721) (#("e" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -718) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (#("a" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -719) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) 720 (716 . 720) (t 25447 47297 934293 400000)) nil (25447 47434 181168 608000) 0 nil])
([nil nil ((720 . 733) (#("a" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -720) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (#("l" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -721) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (#("l" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -722) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) 723 (716 . 723) (#("a" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -716) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (#("s" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -717) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (#("e" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -718) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (#("t" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -719) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -720) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) 721 (716 . 721) (#("broadset of all words of a language." 0 36 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . 716) (undo-tree-id2078 . 31) (undo-tree-id2079 . -9) (undo-tree-id2080 . -9) (undo-tree-id2081 . -9) (undo-tree-id2082 . -9) (undo-tree-id2083 . -9) (undo-tree-id2084 . -9) (undo-tree-id2085 . -10) (undo-tree-id2086 . -10) (undo-tree-id2087 . -10) (undo-tree-id2088 . -10) (undo-tree-id2089 . -10) (undo-tree-id2090 . -10) (undo-tree-id2091 . -12) (undo-tree-id2092 . -12) (undo-tree-id2093 . -12) (undo-tree-id2094 . -12) (undo-tree-id2095 . -12) (undo-tree-id2096 . -12) (undo-tree-id2097 . -12) (undo-tree-id2098 . -12) (undo-tree-id2099 . -12) (undo-tree-id2100 . -12) (undo-tree-id2101 . -12) (undo-tree-id2102 . -12) (undo-tree-id2103 . -12) (undo-tree-id2104 . -12) (undo-tree-id2105 . -12) (undo-tree-id2106 . -12) (undo-tree-id2107 . -12) (undo-tree-id2108 . -12) (undo-tree-id2109 . -12) (undo-tree-id2110 . -12) (undo-tree-id2111 . -12) (undo-tree-id2112 . -12) (undo-tree-id2113 . -12) (undo-tree-id2114 . -12) (undo-tree-id2115 . -12) (undo-tree-id2116 . -12) (undo-tree-id2117 . -12) (undo-tree-id2118 . -12) (undo-tree-id2119 . -12) (undo-tree-id2120 . -12) (undo-tree-id2121 . -12) (undo-tree-id2122 . -12) (undo-tree-id2123 . -12) (undo-tree-id2124 . -12) (undo-tree-id2125 . -12) (undo-tree-id2126 . -12) (undo-tree-id2127 . -12) (undo-tree-id2128 . -12) (undo-tree-id2129 . -12) (undo-tree-id2130 . -12) (undo-tree-id2131 . -12) (undo-tree-id2132 . -12) (undo-tree-id2133 . -1) (undo-tree-id2134 . -35) (undo-tree-id2135 . -35) (undo-tree-id2136 . -35) (undo-tree-id2137 . -35) (undo-tree-id2138 . -35) (undo-tree-id2139 . -35) (undo-tree-id2140 . -35) (undo-tree-id2141 . -35) (undo-tree-id2142 . -35) (undo-tree-id2143 . -35) (undo-tree-id2144 . -35) (undo-tree-id2145 . -35) (undo-tree-id2146 . -35) (undo-tree-id2147 . -35) (undo-tree-id2148 . -35) (undo-tree-id2149 . -35) (undo-tree-id2150 . -35) (undo-tree-id2151 . -35) (undo-tree-id2152 . -35) (undo-tree-id2153 . -35) (undo-tree-id2154 . -35) (undo-tree-id2155 . -35) (undo-tree-id2156 . -35) (undo-tree-id2157 . -35) (undo-tree-id2158 . -35) (undo-tree-id2159 . -35) (undo-tree-id2160 . -35) (undo-tree-id2161 . -35) (undo-tree-id2162 . -35) (undo-tree-id2163 . -35) (undo-tree-id2164 . -35) (undo-tree-id2165 . -35) (undo-tree-id2166 . -35) (undo-tree-id2167 . -35) (undo-tree-id2168 . -35) (undo-tree-id2169 . -35) (undo-tree-id2170 . -35) (undo-tree-id2171 . -35) (undo-tree-id2172 . -35) (undo-tree-id2173 . -35) (undo-tree-id2174 . -35) (undo-tree-id2175 . -35) (undo-tree-id2176 . -35) (undo-tree-id2177 . -35) (undo-tree-id2178 . -35) (undo-tree-id2179 . -27) (undo-tree-id2180 . -27) (undo-tree-id2181 . -27) (undo-tree-id2182 . -27) (undo-tree-id2183 . -27) (undo-tree-id2184 . -27) (undo-tree-id2185 . -25) (undo-tree-id2186 . -25) (undo-tree-id2187 . -25) (undo-tree-id2188 . -25) (undo-tree-id2189 . -25) (undo-tree-id2190 . -25) (undo-tree-id2191 . -22) (undo-tree-id2192 . -22) (undo-tree-id2193 . -22) (undo-tree-id2194 . -22) (undo-tree-id2195 . -22) (undo-tree-id2196 . -22) (undo-tree-id2197 . -16) (undo-tree-id2198 . -16) (undo-tree-id2199 . -16) (undo-tree-id2200 . -16) (undo-tree-id2201 . -16) (undo-tree-id2202 . -16) (undo-tree-id2203 . -12) (undo-tree-id2204 . -12) (undo-tree-id2205 . -12) (undo-tree-id2206 . -12) (undo-tree-id2207 . -12) (undo-tree-id2208 . -12) (undo-tree-id2209 . -9) (undo-tree-id2210 . -9) (undo-tree-id2211 . -9) (undo-tree-id2212 . -9) (undo-tree-id2213 . -9) (undo-tree-id2214 . -9) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -2) (undo-tree-id2240 . -2) (undo-tree-id2241 . -2) (undo-tree-id2242 . -2) (undo-tree-id2243 . -2) (undo-tree-id2244 . -2) (undo-tree-id2245 . -2) (undo-tree-id2246 . -2) (undo-tree-id2247 . -2) (undo-tree-id2248 . -2) (undo-tree-id2249 . -2) (undo-tree-id2250 . -2) (undo-tree-id2251 . -2) (undo-tree-id2252 . -2) (undo-tree-id2253 . -2) (undo-tree-id2254 . -2) (undo-tree-id2255 . -2) (undo-tree-id2256 . -2) (undo-tree-id2257 . -2) (undo-tree-id2258 . -2) (undo-tree-id2259 . -2) (undo-tree-id2260 . -2) (undo-tree-id2261 . -2) (undo-tree-id2262 . -2) (undo-tree-id2263 . -2) (undo-tree-id2264 . -2) (undo-tree-id2265 . -2) (undo-tree-id2266 . -2) (undo-tree-id2267 . -2) (undo-tree-id2268 . -2) (undo-tree-id2269 . -3) (undo-tree-id2270 . -3) (undo-tree-id2271 . -3) (undo-tree-id2272 . -3) (undo-tree-id2273 . -3) (undo-tree-id2274 . -3) (undo-tree-id2275 . -4) (undo-tree-id2276 . -4) (undo-tree-id2277 . -4) (undo-tree-id2278 . -4) (undo-tree-id2279 . -4) (undo-tree-id2280 . -4) (undo-tree-id2281 . -5) (undo-tree-id2282 . -5) (undo-tree-id2283 . -5) (undo-tree-id2284 . -5) (undo-tree-id2285 . -5) (undo-tree-id2286 . -5) (undo-tree-id2287 . -4) (undo-tree-id2288 . -4) (undo-tree-id2289 . -4) (undo-tree-id2290 . -4) (undo-tree-id2291 . -4) (undo-tree-id2292 . -4) (undo-tree-id2293 . -4) (undo-tree-id2294 . 36) (undo-tree-id2295 . -8) (undo-tree-id2296 . -4) (undo-tree-id2297 . -4) (undo-tree-id2298 . -4) (undo-tree-id2299 . -4) (undo-tree-id2300 . -4) (undo-tree-id2301 . -4) (undo-tree-id2302 . -4)) nil (25447 47434 181087 771000) 0 nil])
([nil nil ((941 . 948) (934 . 941) (#("a" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -934) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -935) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (#("l" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -936) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (#("a" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -937) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (#("n" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -938) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (#("g" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -939) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) 940 (933 . 940) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -933) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (#("t" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -934) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (#("h" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -935) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (#("a" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -936) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (#("t" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -937) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -938) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) 939 (931 . 939) (921 . 925) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)))) . 921) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (920 . 921) (920 . 927) (899 . 920) (#("e" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -899) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (#("u" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -900) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (#("s" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -901) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) 902 (899 . 902) (895 . 899) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -895) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (#("s" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -896) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -897) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) 898 (882 . 898) (#("e" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -882) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (#("m" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -883) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (#("t" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -884) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (#("," 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -885) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -886) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) 887 (876 . 887) (872 . 876) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -872) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (#("," 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -873) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) 874 (859 . 874) (#("e" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -859) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) 860 (859 . 860) (#("p" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -859) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (#("]" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 860) (#("[" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -860) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (#("e" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -861) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) 862 (861 . 862) (860 . 862) (848 . 860) (#("s" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -848) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (#("u" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -849) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (#("e" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -850) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (#("d" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -851) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -852) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (#("i" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -853) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (#("n" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -854) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -855) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (#("m" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -856) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) 857 (853 . 857) (844 . 848) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)))) . 844) (843 . 844) (844 . 849) (#("s" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -844) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (#("e" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -845) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (#("d" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -846) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) 847 (844 . 847) (840 . 844) (819 . 840) (#("t" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -819) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -820) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) 821 (818 . 821) (#("t" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -818) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) 819 (814 . 819) (#("i" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -814) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (#("d" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -815) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (#("e" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -816) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (#("n" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -817) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) 818 (814 . 818) (800 . 814) (#("t" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -800) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (#("h" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -801) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (#("e" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -802) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) 803 (798 . 803) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -798) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (#("t" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -799) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) 800 (786 . 800) (763 . 767) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)))) . 763) (762 . 763) (769 . 782) (#("f" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -769) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (#("e" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -770) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) 771 (766 . 771) (#("u" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -766) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) 767 (759 . 767) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -759) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) 760 (755 . 760) (734 . 755) (732 . 734) (#(" " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -732) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) 733 (726 . 733) (#("a" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -726) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) 727 (716 . 727) (#("set of all words " 0 17 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . 716) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -2) (undo-tree-id1684 . -2) (undo-tree-id1685 . -2) (undo-tree-id1686 . -2) (undo-tree-id1687 . -2) (undo-tree-id1688 . -2) (undo-tree-id1689 . -3) (undo-tree-id1690 . -3) (undo-tree-id1691 . -3) (undo-tree-id1692 . -3) (undo-tree-id1693 . -3) (undo-tree-id1694 . -3) (undo-tree-id1695 . -4) (undo-tree-id1696 . -4) (undo-tree-id1697 . -4) (undo-tree-id1698 . -4) (undo-tree-id1699 . -4) (undo-tree-id1700 . -4) (undo-tree-id1701 . -4) (undo-tree-id1702 . -4) (undo-tree-id1703 . -4) (undo-tree-id1704 . -4) (undo-tree-id1705 . -4) (undo-tree-id1706 . -4) (undo-tree-id1707 . -4) (undo-tree-id1708 . -4) (undo-tree-id1709 . -4) (undo-tree-id1710 . -4) (undo-tree-id1711 . -4) (undo-tree-id1712 . -4) (undo-tree-id1713 . -4) (undo-tree-id1714 . -4) (undo-tree-id1715 . -4) (undo-tree-id1716 . -4) (undo-tree-id1717 . -4) (undo-tree-id1718 . -4) (undo-tree-id1719 . -4) (undo-tree-id1720 . -4) (undo-tree-id1721 . -4) (undo-tree-id1722 . -4) (undo-tree-id1723 . -4) (undo-tree-id1724 . -4) (undo-tree-id1725 . -4) (undo-tree-id1726 . -4) (undo-tree-id1727 . -4) (undo-tree-id1728 . -4) (undo-tree-id1729 . -4) (undo-tree-id1730 . -4) (undo-tree-id1731 . -4) (undo-tree-id1732 . -4) (undo-tree-id1733 . -4) (undo-tree-id1734 . -4) (undo-tree-id1735 . -4) (undo-tree-id1736 . -4) (undo-tree-id1737 . -5) (undo-tree-id1738 . -5) (undo-tree-id1739 . -5) (undo-tree-id1740 . -5) (undo-tree-id1741 . -5) (undo-tree-id1742 . -5) (undo-tree-id1743 . -6) (undo-tree-id1744 . -6) (undo-tree-id1745 . -6) (undo-tree-id1746 . -6) (undo-tree-id1747 . -6) (undo-tree-id1748 . -6) (undo-tree-id1749 . -7) (undo-tree-id1750 . -7) (undo-tree-id1751 . -7) (undo-tree-id1752 . -7) (undo-tree-id1753 . -7) (undo-tree-id1754 . -7) (undo-tree-id1755 . -8) (undo-tree-id1756 . -8) (undo-tree-id1757 . -8) (undo-tree-id1758 . -8) (undo-tree-id1759 . -8) (undo-tree-id1760 . -8) (undo-tree-id1761 . -9) (undo-tree-id1762 . -9) (undo-tree-id1763 . -9) (undo-tree-id1764 . -9) (undo-tree-id1765 . -9) (undo-tree-id1766 . -9) (undo-tree-id1767 . -10) (undo-tree-id1768 . -10) (undo-tree-id1769 . -10) (undo-tree-id1770 . -10) (undo-tree-id1771 . -10) (undo-tree-id1772 . -10) (undo-tree-id1773 . -11) (undo-tree-id1774 . -11) (undo-tree-id1775 . -11) (undo-tree-id1776 . -11) (undo-tree-id1777 . -11) (undo-tree-id1778 . -11) (undo-tree-id1779 . -12) (undo-tree-id1780 . -12) (undo-tree-id1781 . -12) (undo-tree-id1782 . -12) (undo-tree-id1783 . -12) (undo-tree-id1784 . -12) (undo-tree-id1785 . -13) (undo-tree-id1786 . -13) (undo-tree-id1787 . -13) (undo-tree-id1788 . -13) (undo-tree-id1789 . -13) (undo-tree-id1790 . -13) (undo-tree-id1791 . -14) (undo-tree-id1792 . -14) (undo-tree-id1793 . -14) (undo-tree-id1794 . -14) (undo-tree-id1795 . -14) (undo-tree-id1796 . -14) (undo-tree-id1797 . -15) (undo-tree-id1798 . -15) (undo-tree-id1799 . -15) (undo-tree-id1800 . -15) (undo-tree-id1801 . -15) (undo-tree-id1802 . -15) (undo-tree-id1803 . -16) (undo-tree-id1804 . -16) (undo-tree-id1805 . -16) (undo-tree-id1806 . -16) (undo-tree-id1807 . -16) (undo-tree-id1808 . -16) (undo-tree-id1809 . -17) (undo-tree-id1810 . -17) (undo-tree-id1811 . -17) (undo-tree-id1812 . -17) (undo-tree-id1813 . -17) (undo-tree-id1814 . -17) (undo-tree-id1815 . -16) (undo-tree-id1816 . -16) (undo-tree-id1817 . -16) (undo-tree-id1818 . -16) (undo-tree-id1819 . -16) (undo-tree-id1820 . -16) (undo-tree-id1821 . -16) (undo-tree-id1822 . -16) (undo-tree-id1823 . -16) (undo-tree-id1824 . -16) (undo-tree-id1825 . -16) (undo-tree-id1826 . -16) (undo-tree-id1827 . -16) (undo-tree-id1828 . -16) (undo-tree-id1829 . -11) (undo-tree-id1830 . -11) (undo-tree-id1831 . -11) (undo-tree-id1832 . -11) (undo-tree-id1833 . -11) (undo-tree-id1834 . -11) (undo-tree-id1835 . -7) (undo-tree-id1836 . -7) (undo-tree-id1837 . -7) (undo-tree-id1838 . -7) (undo-tree-id1839 . -7) (undo-tree-id1840 . -7) (undo-tree-id1841 . -4) (undo-tree-id1842 . -4) (undo-tree-id1843 . -4) (undo-tree-id1844 . -4) (undo-tree-id1845 . -4) (undo-tree-id1846 . -4)) nil (25447 47434 180305 920000) 0 nil])
([nil nil ((959 . 962) (953 . 959) (698 . 953) (#("  * 
  * *Vocabulary*: broadly speaking, is the set of all words in a
    language. However, in most cases it is used to refer to the set of all words
    used in a specific model or experiment, which is usually a subset of the
    words of that language." 0 2 (org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 2 4 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 7 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "20220718143717-natural_language_processing") 7 8 (face org-superstar-item composition (3 1 [8226]) org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 8 9 (org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 9 10 (invisible t org-emphasis t font-lock-multiline t org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 10 20 (org-emphasis t font-lock-multiline t face (bold) org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 20 21 (invisible t org-emphasis t font-lock-multiline t org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 21 70 (org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 70 74 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 74 151 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 151 228 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 228 232 (org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 232 255 (org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . 698) (undo-tree-id2483 . -255) (undo-tree-id2484 . -255) (undo-tree-id2485 . -23) (undo-tree-id2486 . -23) (undo-tree-id2487 . -23) (undo-tree-id2488 . -23) (undo-tree-id2489 . -23) (undo-tree-id2490 . -23) (undo-tree-id2491 . -23) (undo-tree-id2492 . -23) (undo-tree-id2493 . -23) (undo-tree-id2494 . -23) (undo-tree-id2495 . -23) (undo-tree-id2496 . -23) (undo-tree-id2497 . -23) (undo-tree-id2498 . -23) (undo-tree-id2499 . -23) (undo-tree-id2500 . -23) (undo-tree-id2501 . -23) (undo-tree-id2502 . -23) (undo-tree-id2503 . -23) (undo-tree-id2504 . -23) (undo-tree-id2505 . -23) (undo-tree-id2506 . -23) (undo-tree-id2507 . -23) (undo-tree-id2508 . -23) (undo-tree-id2509 . -23) (undo-tree-id2510 . -23) (undo-tree-id2511 . -23) (undo-tree-id2512 . -23) (undo-tree-id2513 . -23) (undo-tree-id2514 . -23) (undo-tree-id2515 . -23) (undo-tree-id2516 . -23) (undo-tree-id2517 . -23) (undo-tree-id2518 . -23) (undo-tree-id2519 . -23) (undo-tree-id2520 . -23) (undo-tree-id2521 . -23) (undo-tree-id2522 . -23) (undo-tree-id2523 . -23) (undo-tree-id2524 . -23) (undo-tree-id2525 . -23) (undo-tree-id2526 . -23) (undo-tree-id2527 . -23) (undo-tree-id2528 . -23) (undo-tree-id2529 . -23) (undo-tree-id2530 . -23) (undo-tree-id2531 . -23) (undo-tree-id2532 . -23) (undo-tree-id2533 . -23) (undo-tree-id2534 . -23) (undo-tree-id2535 . -23) (undo-tree-id2536 . -23) (undo-tree-id2537 . -23) (undo-tree-id2538 . -23) (undo-tree-id2539 . -23) (undo-tree-id2540 . -23) (undo-tree-id2541 . -23) (undo-tree-id2542 . -23) (undo-tree-id2543 . -23) (undo-tree-id2544 . -23) (undo-tree-id2545 . -23) (undo-tree-id2546 . -23) (undo-tree-id2547 . -23) (undo-tree-id2548 . -23) (undo-tree-id2549 . -23) (undo-tree-id2550 . -23) (undo-tree-id2551 . -23) (undo-tree-id2552 . -23) (undo-tree-id2553 . -23) (undo-tree-id2554 . -23) (undo-tree-id2555 . -23) (undo-tree-id2556 . -23) (undo-tree-id2557 . -23) (undo-tree-id2558 . -23) (undo-tree-id2559 . -23) (undo-tree-id2560 . -23) (undo-tree-id2561 . -23) (undo-tree-id2562 . -23) (undo-tree-id2563 . -23) (undo-tree-id2564 . -23) (undo-tree-id2565 . -23) (undo-tree-id2566 . -23) (undo-tree-id2567 . -23) (undo-tree-id2568 . -23) (undo-tree-id2569 . -23) (undo-tree-id2570 . -23) (undo-tree-id2571 . -23) (undo-tree-id2572 . -23) (undo-tree-id2573 . -23) (undo-tree-id2574 . -23) (undo-tree-id2575 . -23) (undo-tree-id2576 . -23) (undo-tree-id2577 . -23) (undo-tree-id2578 . -23) (undo-tree-id2579 . -23) (undo-tree-id2580 . -23) (undo-tree-id2581 . -23) (undo-tree-id2582 . -23) (undo-tree-id2583 . -23) (undo-tree-id2584 . -23) (undo-tree-id2585 . -23) (undo-tree-id2586 . -23) (undo-tree-id2587 . -23) (undo-tree-id2588 . -23) (undo-tree-id2589 . -23) (undo-tree-id2590 . -23) (undo-tree-id2591 . -23) (undo-tree-id2592 . -23) (undo-tree-id2593 . -23) (undo-tree-id2594 . -23) (undo-tree-id2595 . -23) (undo-tree-id2596 . -23) (undo-tree-id2597 . -23) (undo-tree-id2598 . -23) (undo-tree-id2599 . -23) (undo-tree-id2600 . -23) (undo-tree-id2601 . -23) (undo-tree-id2602 . -23) (undo-tree-id2603 . -23) (undo-tree-id2604 . -23) (undo-tree-id2605 . -23) (undo-tree-id2606 . -23) (undo-tree-id2607 . -23) (undo-tree-id2608 . -23) (undo-tree-id2609 . -23) (undo-tree-id2610 . -23) (undo-tree-id2611 . -23) (undo-tree-id2612 . -23) (undo-tree-id2613 . -23) (undo-tree-id2614 . -23) (undo-tree-id2615 . -23) (undo-tree-id2616 . -23) (undo-tree-id2617 . -23) (undo-tree-id2618 . -23) (undo-tree-id2619 . -23) (undo-tree-id2620 . -23) (undo-tree-id2621 . -23) (undo-tree-id2622 . -23) (undo-tree-id2623 . -23) (undo-tree-id2624 . -23) (undo-tree-id2625 . -23) (undo-tree-id2626 . -23) (undo-tree-id2627 . -23) (undo-tree-id2628 . -23) (undo-tree-id2629 . -23) (undo-tree-id2630 . -23) (undo-tree-id2631 . -23) (undo-tree-id2632 . -23) (undo-tree-id2633 . -23) (undo-tree-id2634 . -23) (undo-tree-id2635 . -23) (undo-tree-id2636 . -23) (undo-tree-id2637 . -23) (undo-tree-id2638 . -23) (undo-tree-id2639 . -23) (undo-tree-id2640 . -23) (undo-tree-id2641 . -23) (undo-tree-id2642 . -23) (undo-tree-id2643 . -23) (undo-tree-id2644 . -23) (undo-tree-id2645 . -23) (undo-tree-id2646 . -23) (undo-tree-id2647 . -23) (undo-tree-id2648 . -23) (undo-tree-id2649 . -23) (undo-tree-id2650 . -23) (undo-tree-id2651 . -23) (undo-tree-id2652 . -23) (undo-tree-id2653 . -23) (undo-tree-id2654 . -23) (undo-tree-id2655 . -23) (undo-tree-id2656 . -23) (undo-tree-id2657 . -23) (undo-tree-id2658 . -23) (undo-tree-id2659 . -23) (undo-tree-id2660 . -23) (undo-tree-id2661 . -23) (undo-tree-id2662 . -23) (undo-tree-id2663 . -23) (undo-tree-id2664 . -23) (undo-tree-id2665 . -23) (undo-tree-id2666 . -23) (undo-tree-id2667 . -23) (undo-tree-id2668 . -23) (undo-tree-id2669 . -23) (undo-tree-id2670 . -23) (undo-tree-id2671 . -23) (undo-tree-id2672 . -23) (undo-tree-id2673 . -23) (undo-tree-id2674 . -23) (undo-tree-id2675 . -23) (undo-tree-id2676 . -23) (undo-tree-id2677 . -23) (undo-tree-id2678 . -23) (undo-tree-id2679 . -23) (undo-tree-id2680 . -23) (undo-tree-id2681 . -23) (undo-tree-id2682 . -23) (undo-tree-id2683 . -23) (undo-tree-id2684 . -23) (undo-tree-id2685 . -23) (undo-tree-id2686 . -23) (undo-tree-id2687 . -23) (undo-tree-id2688 . -23) (undo-tree-id2689 . -23) (undo-tree-id2690 . -23) (undo-tree-id2691 . -23) (undo-tree-id2692 . -23) (undo-tree-id2693 . -23) (undo-tree-id2694 . -23) (undo-tree-id2695 . -23) (undo-tree-id2696 . -23) (undo-tree-id2697 . -23) (undo-tree-id2698 . -23) (undo-tree-id2699 . -23) (undo-tree-id2700 . -23) (undo-tree-id2701 . -23) (undo-tree-id2702 . -23) (undo-tree-id2703 . -23) (undo-tree-id2704 . -23) (undo-tree-id2705 . -23) (undo-tree-id2706 . -23) (undo-tree-id2707 . -23) (undo-tree-id2708 . -23) (undo-tree-id2709 . -23) (undo-tree-id2710 . -23) (undo-tree-id2711 . -23) (undo-tree-id2712 . -23) (undo-tree-id2713 . -23) (undo-tree-id2714 . -23) (undo-tree-id2715 . -23) (undo-tree-id2716 . -23) (undo-tree-id2717 . -23) (undo-tree-id2718 . -23) (undo-tree-id2719 . -23) (undo-tree-id2720 . -23) (undo-tree-id2721 . -23) (undo-tree-id2722 . -23) (undo-tree-id2723 . -23) (undo-tree-id2724 . -23) (undo-tree-id2725 . -23) (undo-tree-id2726 . -23) (undo-tree-id2727 . -23) (undo-tree-id2728 . -23) (undo-tree-id2729 . -23) (undo-tree-id2730 . -23) (undo-tree-id2731 . -23) (undo-tree-id2732 . -23) (undo-tree-id2733 . -23) (undo-tree-id2734 . -23) (undo-tree-id2735 . -23) (undo-tree-id2736 . -23) (undo-tree-id2737 . -23) (undo-tree-id2738 . -23) (undo-tree-id2739 . -23) (undo-tree-id2740 . -23) (undo-tree-id2741 . -23) (undo-tree-id2742 . -23) (undo-tree-id2743 . -23) (undo-tree-id2744 . -23) (undo-tree-id2745 . -23) (undo-tree-id2746 . -23) (undo-tree-id2747 . -23) (undo-tree-id2748 . -23) (undo-tree-id2749 . -23) (undo-tree-id2750 . -23) (undo-tree-id2751 . -23) (undo-tree-id2752 . -23) (undo-tree-id2753 . -23) (undo-tree-id2754 . -23) (undo-tree-id2755 . -23) (undo-tree-id2756 . -23) (undo-tree-id2757 . -23) (undo-tree-id2758 . -23) (undo-tree-id2759 . -23) (undo-tree-id2760 . -23) (undo-tree-id2761 . -23) (undo-tree-id2762 . -23) (undo-tree-id2763 . -23) (undo-tree-id2764 . -23) (undo-tree-id2765 . -23) (undo-tree-id2766 . -23) (undo-tree-id2767 . -23) (undo-tree-id2768 . -23) (undo-tree-id2769 . -23) (undo-tree-id2770 . -23) (undo-tree-id2771 . -23) (undo-tree-id2772 . -23) (undo-tree-id2773 . -23) (undo-tree-id2774 . -23) (undo-tree-id2775 . -23) (undo-tree-id2776 . -23) (undo-tree-id2777 . -23) (undo-tree-id2778 . -23) (undo-tree-id2779 . -23) (undo-tree-id2780 . -23) (undo-tree-id2781 . -23) (undo-tree-id2782 . -23) (undo-tree-id2783 . -23) (undo-tree-id2784 . -23) (undo-tree-id2785 . -23) (undo-tree-id2786 . -23) (undo-tree-id2787 . -23) (undo-tree-id2788 . -23) (undo-tree-id2789 . -23) (undo-tree-id2790 . -23) (undo-tree-id2791 . -23) (undo-tree-id2792 . -23) (undo-tree-id2793 . -23) (undo-tree-id2794 . -23) (undo-tree-id2795 . -23) (undo-tree-id2796 . -23) (undo-tree-id2797 . -23) (undo-tree-id2798 . -23) (undo-tree-id2799 . -23) (undo-tree-id2800 . -23) (undo-tree-id2801 . -23) (undo-tree-id2802 . -23) (undo-tree-id2803 . -23) (undo-tree-id2804 . -23) (undo-tree-id2805 . -23) (undo-tree-id2806 . -23) (undo-tree-id2807 . -23) (undo-tree-id2808 . -23) (undo-tree-id2809 . -23) (undo-tree-id2810 . -23) (undo-tree-id2811 . -23) (undo-tree-id2812 . -23) (undo-tree-id2813 . -23) (undo-tree-id2814 . -23) (undo-tree-id2815 . -23) (undo-tree-id2816 . -23) (undo-tree-id2817 . -23) (undo-tree-id2818 . -23) (undo-tree-id2819 . -23) (undo-tree-id2820 . -23) (undo-tree-id2821 . -23) (undo-tree-id2822 . -23) (undo-tree-id2823 . -23) (undo-tree-id2824 . -23) (undo-tree-id2825 . -23) (undo-tree-id2826 . -23) (undo-tree-id2827 . -23) (undo-tree-id2828 . -23) (undo-tree-id2829 . -23) (undo-tree-id2830 . -23) (undo-tree-id2831 . -23) (undo-tree-id2832 . -23) (undo-tree-id2833 . -23) (undo-tree-id2834 . -23) (undo-tree-id2835 . -23) (undo-tree-id2836 . -23) (undo-tree-id2837 . -23) (undo-tree-id2838 . -23) (undo-tree-id2839 . -23) (undo-tree-id2840 . -23) (undo-tree-id2841 . -23) (undo-tree-id2842 . -23) (undo-tree-id2843 . -23) (undo-tree-id2844 . -23) (undo-tree-id2845 . -23) (undo-tree-id2846 . -23) (undo-tree-id2847 . -23) (undo-tree-id2848 . -23) (undo-tree-id2849 . -23) (undo-tree-id2850 . -23) (undo-tree-id2851 . -23) (undo-tree-id2852 . -23) (undo-tree-id2853 . -23) (undo-tree-id2854 . -23) (undo-tree-id2855 . -23) (undo-tree-id2856 . -23) (undo-tree-id2857 . -23) (undo-tree-id2858 . -23) (undo-tree-id2859 . -23) (undo-tree-id2860 . -23) (undo-tree-id2861 . -23) (undo-tree-id2862 . -23) (undo-tree-id2863 . -23) (undo-tree-id2864 . -23) (undo-tree-id2865 . -23) (undo-tree-id2866 . -23) (undo-tree-id2867 . -23) (undo-tree-id2868 . -23) (undo-tree-id2869 . -23) (undo-tree-id2870 . -23) (undo-tree-id2871 . -23) (undo-tree-id2872 . -23) (undo-tree-id2873 . -23) (undo-tree-id2874 . -23) (undo-tree-id2875 . -23) (undo-tree-id2876 . -23) (undo-tree-id2877 . -23) (undo-tree-id2878 . -23) (undo-tree-id2879 . -23) (undo-tree-id2880 . -23) (undo-tree-id2881 . -23) (undo-tree-id2882 . -23) (undo-tree-id2883 . -23) (undo-tree-id2884 . -23) (undo-tree-id2885 . -23) (undo-tree-id2886 . -23) (undo-tree-id2887 . -23) (undo-tree-id2888 . -23) (undo-tree-id2889 . -23) (undo-tree-id2890 . -23) (undo-tree-id2891 . -23) (undo-tree-id2892 . -23) (undo-tree-id2893 . -23) (undo-tree-id2894 . -23) (undo-tree-id2895 . -23) (undo-tree-id2896 . -23) (undo-tree-id2897 . -23) (undo-tree-id2898 . -23) (undo-tree-id2899 . -23) (undo-tree-id2900 . -23) (undo-tree-id2901 . -23) (undo-tree-id2902 . -23) (undo-tree-id2903 . -23) (undo-tree-id2904 . -23) (undo-tree-id2905 . -23) (undo-tree-id2906 . -23) (undo-tree-id2907 . -23) (undo-tree-id2908 . -23) (undo-tree-id2909 . -23) (undo-tree-id2910 . -23) (undo-tree-id2911 . -23) (undo-tree-id2912 . -23) (undo-tree-id2913 . -23) (undo-tree-id2914 . -23) (undo-tree-id2915 . -23) (undo-tree-id2916 . -23) (undo-tree-id2917 . -23) (undo-tree-id2918 . -23) (undo-tree-id2919 . -23) (undo-tree-id2920 . -23) (undo-tree-id2921 . -23) (undo-tree-id2922 . -23) (undo-tree-id2923 . -23) (undo-tree-id2924 . -23) (undo-tree-id2925 . -23) (undo-tree-id2926 . -23) (undo-tree-id2927 . -23) (undo-tree-id2928 . -23) (undo-tree-id2929 . -23) (undo-tree-id2930 . -179) (undo-tree-id2931 . -179) (undo-tree-id2932 . -179) (undo-tree-id2933 . -179) (undo-tree-id2934 . -179) (undo-tree-id2935 . -179) (undo-tree-id2936 . -179) (undo-tree-id2937 . -179) (undo-tree-id2938 . -179) (undo-tree-id2939 . -179) (undo-tree-id2940 . -179) (undo-tree-id2941 . -179) (undo-tree-id2942 . -179) (undo-tree-id2943 . -179) (undo-tree-id2944 . -179) (undo-tree-id2945 . -179) (undo-tree-id2946 . -179) (undo-tree-id2947 . -179) (undo-tree-id2948 . -189) (undo-tree-id2949 . -189) (undo-tree-id2950 . -189) (undo-tree-id2951 . -189) (undo-tree-id2952 . -189) (undo-tree-id2953 . -189) (undo-tree-id2954 . -189) (undo-tree-id2955 . -189) (undo-tree-id2956 . -189) (undo-tree-id2957 . -189) (undo-tree-id2958 . -189) (undo-tree-id2959 . -189) (undo-tree-id2960 . -189) (undo-tree-id2961 . -189) (undo-tree-id2962 . -189) (undo-tree-id2963 . -189) (undo-tree-id2964 . -189) (undo-tree-id2965 . -189) (undo-tree-id2966 . -189) (undo-tree-id2967 . -189) (undo-tree-id2968 . -189) (undo-tree-id2969 . -189) (undo-tree-id2970 . -189) (undo-tree-id2971 . -189) (undo-tree-id2972 . -189) (undo-tree-id2973 . -189) (undo-tree-id2974 . -189) (undo-tree-id2975 . -189) (undo-tree-id2976 . -189) (undo-tree-id2977 . -189) (undo-tree-id2978 . -189) (undo-tree-id2979 . -189) (undo-tree-id2980 . -189) (undo-tree-id2981 . -189) (undo-tree-id2982 . -189) (undo-tree-id2983 . -189) (undo-tree-id2984 . -189) (undo-tree-id2985 . -189) (undo-tree-id2986 . -189) (undo-tree-id2987 . -189) (undo-tree-id2988 . -189) (undo-tree-id2989 . -189) (undo-tree-id2990 . -189) (undo-tree-id2991 . -189) (undo-tree-id2992 . -189) (undo-tree-id2993 . -189) (undo-tree-id2994 . -189) (undo-tree-id2995 . -189) (undo-tree-id2996 . -189) (undo-tree-id2997 . -189) (undo-tree-id2998 . -189) (undo-tree-id2999 . -189) (undo-tree-id3000 . -189) (undo-tree-id3001 . -189) (undo-tree-id3002 . -202) (undo-tree-id3003 . -202) (undo-tree-id3004 . -202) (undo-tree-id3005 . -202) (undo-tree-id3006 . -202) (undo-tree-id3007 . -202) (undo-tree-id3008 . -202) (undo-tree-id3009 . -202) (undo-tree-id3010 . -202) (undo-tree-id3011 . -202) (undo-tree-id3012 . -202) (undo-tree-id3013 . -202) (undo-tree-id3014 . -202) (undo-tree-id3015 . -202) (undo-tree-id3016 . -202) (undo-tree-id3017 . -202) (undo-tree-id3018 . -202) (undo-tree-id3019 . -202) (undo-tree-id3020 . -202) (undo-tree-id3021 . -202) (undo-tree-id3022 . -202) (undo-tree-id3023 . -202) (undo-tree-id3024 . -202) (undo-tree-id3025 . -202) (undo-tree-id3026 . -202) (undo-tree-id3027 . -202) (undo-tree-id3028 . -202) (undo-tree-id3029 . -202) (undo-tree-id3030 . -202) (undo-tree-id3031 . -202) (undo-tree-id3032 . -206) (undo-tree-id3033 . -206) (undo-tree-id3034 . -206) (undo-tree-id3035 . -206) (undo-tree-id3036 . -206) (undo-tree-id3037 . -206) (undo-tree-id3038 . -206) (undo-tree-id3039 . -206) (undo-tree-id3040 . -206) (undo-tree-id3041 . -206) (undo-tree-id3042 . -206) (undo-tree-id3043 . -206) (undo-tree-id3044 . -206) (undo-tree-id3045 . -206) (undo-tree-id3046 . -206) (undo-tree-id3047 . -206) (undo-tree-id3048 . -206) (undo-tree-id3049 . -206) (undo-tree-id3050 . -206) (undo-tree-id3051 . -206) (undo-tree-id3052 . -206) (undo-tree-id3053 . -206) (undo-tree-id3054 . -206) (undo-tree-id3055 . -206) (undo-tree-id3056 . -206) (undo-tree-id3057 . -206) (undo-tree-id3058 . -206) (undo-tree-id3059 . -206) (undo-tree-id3060 . -206) (undo-tree-id3061 . -206) (undo-tree-id3062 . -232) (undo-tree-id3063 . -232) (undo-tree-id3064 . -232) (undo-tree-id3065 . -232) (undo-tree-id3066 . -232) (undo-tree-id3067 . -232) (undo-tree-id3068 . -240) (undo-tree-id3069 . -240) (undo-tree-id3070 . -240) (undo-tree-id3071 . -240) (undo-tree-id3072 . -240) (undo-tree-id3073 . -240) (undo-tree-id3074 . -240) (undo-tree-id3075 . -240) (undo-tree-id3076 . -240) (undo-tree-id3077 . -240) (undo-tree-id3078 . -240) (undo-tree-id3079 . -240) (undo-tree-id3080 . -240) (undo-tree-id3081 . -240) (undo-tree-id3082 . -240) (undo-tree-id3083 . -240) (undo-tree-id3084 . -240) (undo-tree-id3085 . -240) (undo-tree-id3086 . -240) (undo-tree-id3087 . -240) (undo-tree-id3088 . -240) (undo-tree-id3089 . -240) (undo-tree-id3090 . -240) (undo-tree-id3091 . -240) (undo-tree-id3092 . -240) (undo-tree-id3093 . -240) (undo-tree-id3094 . -240) (undo-tree-id3095 . -240) (undo-tree-id3096 . -240) (undo-tree-id3097 . -240) (undo-tree-id3098 . -240) (undo-tree-id3099 . -240) (undo-tree-id3100 . -240) (undo-tree-id3101 . -240) (undo-tree-id3102 . -240) (undo-tree-id3103 . -240) (undo-tree-id3104 . -240) (undo-tree-id3105 . -240) (undo-tree-id3106 . -240) (undo-tree-id3107 . -240) (undo-tree-id3108 . -240) (undo-tree-id3109 . -240) (undo-tree-id3110 . -240) (undo-tree-id3111 . -240) (undo-tree-id3112 . -240) (undo-tree-id3113 . -240) (undo-tree-id3114 . -240) (undo-tree-id3115 . -240) (undo-tree-id3116 . -240) (undo-tree-id3117 . -240) (undo-tree-id3118 . -240) (undo-tree-id3119 . -240) (undo-tree-id3120 . -240) (undo-tree-id3121 . -240) (undo-tree-id3122 . -240) (undo-tree-id3123 . -240) (undo-tree-id3124 . -240) (undo-tree-id3125 . -240) (undo-tree-id3126 . -240) (undo-tree-id3127 . -240) (undo-tree-id3128 . -240) (undo-tree-id3129 . -240) (undo-tree-id3130 . -240) (undo-tree-id3131 . -240) (undo-tree-id3132 . -240) (undo-tree-id3133 . -240) (undo-tree-id3134 . -241) (undo-tree-id3135 . -241) (undo-tree-id3136 . -241) (undo-tree-id3137 . -241) (undo-tree-id3138 . -241) (undo-tree-id3139 . -241) (undo-tree-id3140 . -241) (undo-tree-id3141 . -241) (undo-tree-id3142 . -241) (undo-tree-id3143 . -241) (undo-tree-id3144 . -241) (undo-tree-id3145 . -241) (undo-tree-id3146 . -241) (undo-tree-id3147 . -241) (undo-tree-id3148 . -241) (undo-tree-id3149 . -241) (undo-tree-id3150 . -241) (undo-tree-id3151 . -241) (undo-tree-id3152 . -241) (undo-tree-id3153 . -241) (undo-tree-id3154 . -241) (undo-tree-id3155 . -241) (undo-tree-id3156 . -241) (undo-tree-id3157 . -241) (undo-tree-id3158 . -241) (undo-tree-id3159 . -241) (undo-tree-id3160 . -241) (undo-tree-id3161 . -241) (undo-tree-id3162 . -241) (undo-tree-id3163 . -241) (undo-tree-id3164 . -241) (undo-tree-id3165 . -241) (undo-tree-id3166 . -241) (undo-tree-id3167 . -241) (undo-tree-id3168 . -241) (undo-tree-id3169 . -241) (undo-tree-id3170 . -241) (undo-tree-id3171 . -241) (undo-tree-id3172 . -241) (undo-tree-id3173 . -241) (undo-tree-id3174 . -241) (undo-tree-id3175 . -241) (undo-tree-id3176 . -241) (undo-tree-id3177 . -241) (undo-tree-id3178 . -241) (undo-tree-id3179 . -241) (undo-tree-id3180 . -241) (undo-tree-id3181 . -241) (undo-tree-id3182 . -241) (undo-tree-id3183 . -241) (undo-tree-id3184 . -241) (undo-tree-id3185 . -241) (undo-tree-id3186 . -241) (undo-tree-id3187 . -241) (undo-tree-id3188 . -241) (undo-tree-id3189 . -241) (undo-tree-id3190 . -241) (undo-tree-id3191 . -241) (undo-tree-id3192 . -241) (undo-tree-id3193 . -241) (undo-tree-id3194 . -241) (undo-tree-id3195 . -241) (undo-tree-id3196 . -241) (undo-tree-id3197 . -241) (undo-tree-id3198 . -241) (undo-tree-id3199 . -241) (undo-tree-id3200 . -241) (undo-tree-id3201 . -241) (undo-tree-id3202 . -241) (undo-tree-id3203 . -241) (undo-tree-id3204 . -241) (undo-tree-id3205 . -241) (undo-tree-id3206 . -241) (undo-tree-id3207 . -241) (undo-tree-id3208 . -241) (undo-tree-id3209 . -241) (undo-tree-id3210 . -241) (undo-tree-id3211 . -241) (undo-tree-id3212 . -241) (undo-tree-id3213 . -241) (undo-tree-id3214 . -241) (undo-tree-id3215 . -241) (undo-tree-id3216 . -241) (undo-tree-id3217 . -241) (undo-tree-id3218 . -241) (undo-tree-id3219 . -241) (undo-tree-id3220 . -241) (undo-tree-id3221 . -241) (undo-tree-id3222 . -241) (undo-tree-id3223 . -241) (undo-tree-id3224 . -241) (undo-tree-id3225 . -241) (undo-tree-id3226 . -241) (undo-tree-id3227 . -241) (undo-tree-id3228 . -241) (undo-tree-id3229 . -241) (undo-tree-id3230 . -241) (undo-tree-id3231 . -241) (undo-tree-id3232 . -241) (undo-tree-id3233 . -241) (undo-tree-id3234 . -241) (undo-tree-id3235 . -241) (undo-tree-id3236 . -241) (undo-tree-id3237 . -241) (undo-tree-id3238 . -241) (undo-tree-id3239 . -241) (undo-tree-id3240 . -241) (undo-tree-id3241 . -255) (undo-tree-id3242 . -255) (undo-tree-id3243 . -254) (undo-tree-id3244 . -254) (undo-tree-id3245 . -254) (undo-tree-id3246 . -254) (undo-tree-id3247 . -254) (undo-tree-id3248 . -254) (undo-tree-id3249 . -254) (undo-tree-id3250 . -254) (undo-tree-id3251 . -254) (undo-tree-id3252 . -254) (undo-tree-id3253 . -254) (undo-tree-id3254 . -254) (undo-tree-id3255 . -254) (undo-tree-id3256 . -254) (undo-tree-id3257 . -254) (undo-tree-id3258 . -254) (undo-tree-id3259 . -254) (undo-tree-id3260 . -254) (undo-tree-id3261 . -254) (undo-tree-id3262 . -254) (undo-tree-id3263 . -254) (undo-tree-id3264 . -254) (undo-tree-id3265 . -254) (undo-tree-id3266 . -254) (undo-tree-id3267 . -255) (undo-tree-id3268 . -255) (undo-tree-id3269 . -255) (undo-tree-id3270 . -255) (undo-tree-id3271 . -255) (undo-tree-id3272 . -255) (undo-tree-id3273 . -255) (undo-tree-id3274 . -255) (undo-tree-id3275 . -255) (undo-tree-id3276 . -255) (undo-tree-id3277 . -255) (undo-tree-id3278 . -255) (undo-tree-id3279 . -255) (undo-tree-id3280 . -255) (undo-tree-id3281 . -255) (undo-tree-id3282 . -255) (undo-tree-id3283 . -255) (undo-tree-id3284 . -255) (undo-tree-id3285 . -255) (undo-tree-id3286 . -255) (undo-tree-id3287 . -255) (undo-tree-id3288 . -255) (undo-tree-id3289 . -255) (undo-tree-id3290 . -255) (undo-tree-id3291 . -255) (undo-tree-id3292 . -255) (undo-tree-id3293 . -255) (undo-tree-id3294 . -255) (undo-tree-id3295 . -255) (undo-tree-id3296 . -255) (undo-tree-id3297 . -255) (undo-tree-id3298 . -255) (undo-tree-id3299 . -255) (undo-tree-id3300 . -255) (undo-tree-id3301 . -255) (undo-tree-id3302 . -255) (undo-tree-id3303 . -255) (undo-tree-id3304 . -255) (undo-tree-id3305 . -255) (undo-tree-id3306 . -255) (undo-tree-id3307 . -255) (undo-tree-id3308 . -255) (undo-tree-id3309 . -255) (undo-tree-id3310 . -255) (undo-tree-id3311 . -255) (undo-tree-id3312 . -255) (undo-tree-id3313 . -255) (undo-tree-id3314 . -255) (undo-tree-id3315 . -255) (undo-tree-id3316 . -255) (undo-tree-id3317 . -255) (undo-tree-id3318 . -255) (undo-tree-id3319 . -255) (undo-tree-id3320 . -255) (undo-tree-id3321 . -255) (undo-tree-id3322 . -255) (undo-tree-id3323 . -255) (undo-tree-id3324 . -255) (undo-tree-id3325 . -255) (undo-tree-id3326 . -255) (undo-tree-id3327 . -255) (undo-tree-id3328 . -255) (undo-tree-id3329 . -255) (undo-tree-id3330 . -255) (undo-tree-id3331 . -255) (undo-tree-id3332 . -255) (undo-tree-id3333 . -255) (undo-tree-id3334 . -255) (undo-tree-id3335 . -255) (undo-tree-id3336 . -255) (undo-tree-id3337 . -255) (undo-tree-id3338 . -255) (undo-tree-id3339 . -255) (undo-tree-id3340 . -5) (698 . 703) (#("
    " 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 1 5 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -948) (undo-tree-id3341 . -5) (undo-tree-id3342 . -1) (undo-tree-id3343 . -5) (undo-tree-id3344 . 5) (undo-tree-id3345 . -5) (undo-tree-id3346 . -5) (undo-tree-id3347 . -5) (undo-tree-id3348 . -5) (undo-tree-id3349 . -5) (undo-tree-id3350 . -5) (undo-tree-id3351 . -5) 953 (948 . 953) (#("
" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -948) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -949) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . 1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (#(" " 0 1 (wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -950) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -951) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (#(" " 0 1 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -952) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (#(" " 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -953) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) 954 (950 . 954) (#("    " 0 4 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 949) (undo-tree-id3524 . -4) (undo-tree-id3525 . -4) (undo-tree-id3526 . -4) (undo-tree-id3527 . -4) (undo-tree-id3528 . -4) (undo-tree-id3529 . -4) (undo-tree-id3530 . -4) (undo-tree-id3531 . -4) (undo-tree-id3532 . -4) (undo-tree-id3533 . -4) (undo-tree-id3534 . -4) (undo-tree-id3535 . -4) (undo-tree-id3536 . -4) (undo-tree-id3537 . -4) (undo-tree-id3538 . -4) (undo-tree-id3539 . -4) (undo-tree-id3540 . -4) (undo-tree-id3541 . -4) (undo-tree-id3542 . -4) (undo-tree-id3543 . -4) (undo-tree-id3544 . -4) (undo-tree-id3545 . -4) (undo-tree-id3546 . -4) (undo-tree-id3547 . -4) (undo-tree-id3548 . -4) (undo-tree-id3549 . -4) (undo-tree-id3550 . -4) (undo-tree-id3551 . -4) (953 . 954) (948 . 953) (t 25447 47434 197760 900000) 947) nil (25447 47482 214250 642000) 0 nil])
([nil nil ((996 . 1008) (976 . 996) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -976) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) 977 (971 . 977) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -971) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) 972 (970 . 972) (#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -970) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -971) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -972) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) 973 (967 . 973) (#("u" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -967) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -968) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) 969 (962 . 969)) nil (25447 47482 208668 442000) 0 nil])
([nil nil ((1008 . 1009)) nil (25447 47482 208453 747000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1009) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) 1010 (#(" " 0 1 (wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1010) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1011) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (#(" " 0 1 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1012) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (#(" " 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1013) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (#("s" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1014) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (#("e" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1015) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (#("t" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1016) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (#(" " 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1017) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (#("o" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1018) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (#("f" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1019) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (#(" " 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1020) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (#("a" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1021) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (#("l" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1022) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (#("l" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1023) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (#(" " 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1024) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (#("w" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1025) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (#("o" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1026) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (#("r" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1027) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (#("d" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1028) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (#("s" 0 1 (fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1029) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (#(" " 0 1 (rear-nonsticky t fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) org-category "20220718143717-natural_language_processing")) . -1030) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) 1031 (nil rear-nonsticky nil 1030 . 1031) (nil fontified nil 1014 . 1031) (1014 . 1031) (1009 . 1014) (t 25447 47482 231153 800000) 1008) nil (25447 48486 808883 828000) 0 nil])
([nil nil ((1316 . 1318) (nil keymap nil 1308 . 1316) (nil rear-nonsticky nil 1308 . 1316) (nil display nil 1308 . 1316) (nil keymap nil 1079 . 1308) (nil rear-nonsticky nil 1079 . 1308) (nil display nil 1079 . 1308) (nil keymap nil 1008 . 1079) (nil rear-nonsticky nil 1008 . 1079) (nil display nil 1008 . 1079) (1008 . 1316)) nil (25447 48486 808795 795000) 0 nil])
([nil nil ((#("<#part type=\"image/png\" disposition=inline data-encoding=base64 raw=t>
aW1wb3J0OiB1bmFibGUgdG8gcmVhZCBYIHdpbmRvdyBpbWFnZSAnJzogUmVzb3VyY2UgdGVtcG9yYXJpbHkgdW5hdmFpbGFibGUgQCBlcnJvci94d2luZG93LmMvWEltcG9ydEltYWdlLzUwNjcuCmltcG9ydDogIGBwbmc6LScgQCBlcnJvci9pbXBvcnQuYy9JbXBvcnRJbWFnZUNvbW1hbmQvMTI4OC4K
<#/part>
" 0 71 (rear-nonsticky t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 71 300 (rear-nonsticky t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 300 308 (rear-nonsticky t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 308 309 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1008) (undo-tree-id3806 . -308) (undo-tree-id3807 . -300) (undo-tree-id3808 . -309) (undo-tree-id3809 . -308) (undo-tree-id3810 . -308) (undo-tree-id3811 . -308) (undo-tree-id3812 . -308) 1316) nil (25447 48486 808789 647000) 0 nil])
([nil nil ((#(".
" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1 2 (org-category "20220718143717-natural_language_processing" wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1009) (undo-tree-id3803 . 1) (undo-tree-id3804 . -2) (undo-tree-id3805 . -1)) nil (25447 48486 808778 514000) 0 nil])
([nil nil ((#("S" 0 1 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -1008) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) 1009 (1008 . 1009)) nil (25447 48486 808769 28000) 0 nil])
([nil nil ((1008 . 1013) 1007) nil (25447 48490 253597 552000) 0 nil])
([nil nil ((1010 . 1014) (#("    " 0 4 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 1009) (undo-tree-id4663 . -4) (undo-tree-id4664 . -4) (1013 . 1014) (1008 . 1013) 973) nil (25447 49339 469038 546000) 0 nil] [nil nil ((1023 . 1062) (#(":DIR: /mnt/Data/MEGA/Notes/Roam/" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 32 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -1097) (1097 . 1166) (1097 . 1098) (1083 . 1102)) ((#("
:PROPERTIES:
:END:" 0 1 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil) 1 2 (font-lock-fontified t face org-drawer wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 12 (font-lock-fontified t face org-drawer cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"99\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"99\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"97\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"0.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> PROPERTIES</text></svg>" 413 423 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) :scale 1.1146341463414635 :ascent center :transform-smoothing t) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 12 13 (font-lock-fontified t face org-drawer wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 14 15 (font-lock-fontified t face org-drawer wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 15 18 (font-lock-fontified t face org-drawer cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"36\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"36\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"34\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"3.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> END</text></svg>" 413 416 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) :scale 1.1146341463414635 :ascent center :transform-smoothing t) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 18 19 (font-lock-fontified t face org-drawer wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1083) (undo-tree-id3874 . -1) (undo-tree-id3875 . 6) (undo-tree-id3876 . -19) (#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 1097) (#(":DIR: /mnt/Data/MEGA/Notes/Roam/:DIR:      /mnt/Data/MEGA/Notes/Roam/" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 32 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 32 33 (face org-special-keyword wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 33 36 (face org-special-keyword cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"36\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"36\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"34\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"3.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> DIR</text></svg>" 413 416 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) :scale 1.1146341463414635 :ascent center :transform-smoothing t) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 36 37 (face org-special-keyword wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 37 38 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 38 41 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 41 42 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 42 43 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 43 44 (invisible t org-emphasis t font-lock-multiline t face org-property-value wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 44 68 (org-emphasis t font-lock-multiline t face (italic org-property-value) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 68 69 (invisible t org-emphasis t font-lock-multiline t face org-property-value wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 1097) (1097 . 1129) (#("[[file:screenshot-20221106-145651.png]]" 0 1 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face (org-link org-level-1) htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 1 2 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face (org-link org-level-1) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 2 7 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-1) htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 7 17 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-1) display #("screenshot-" 0 10 (display (image :type svg :data #("<svg width=\"99\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"99\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"97\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"0.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> screenshot</text></svg>" 413 423 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) cursor-sensor-functions (svg-tag--cursor-function) help-echo "LINK: file:screenshot-20221106-145651.png" htmlize-link (:uri "file:screenshot-20221106-145651.png"))) :scale 1.1053097345132743 :ascent center :transform-smoothing t) htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" cursor-sensor-functions (svg-tag--cursor-function) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 10 11 (htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" cursor-sensor-functions (svg-tag--cursor-function) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" cursor-sensor-functions (svg-tag--cursor-function) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 17 18 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-1) display #("screenshot-" 0 10 (display (image :type svg :data #("<svg width=\"99\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"99\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"97\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"0.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> screenshot</text></svg>" 413 423 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) cursor-sensor-functions (svg-tag--cursor-function) help-echo "LINK: file:screenshot-20221106-145651.png" htmlize-link (:uri "file:screenshot-20221106-145651.png"))) :scale 1.1053097345132743 :ascent center :transform-smoothing t) htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" cursor-sensor-functions (svg-tag--cursor-function) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 10 11 (htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" cursor-sensor-functions (svg-tag--cursor-function) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" cursor-sensor-functions (svg-tag--cursor-function) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 18 36 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-1) htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 36 37 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-1) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 37 38 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face (org-link org-level-1) htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 38 39 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face (org-link org-level-1) htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 1023) (undo-tree-id3877 . -6) (undo-tree-id3878 . -36) (undo-tree-id3879 . -2) (undo-tree-id3880 . 2) (undo-tree-id3881 . -2) (undo-tree-id3882 . -36) (undo-tree-id3883 . -39) (undo-tree-id3884 . -6) (undo-tree-id3885 . -36) (undo-tree-id3886 . -36) (undo-tree-id3887 . -36) (undo-tree-id3888 . -36) (undo-tree-id3889 . -36) (undo-tree-id3890 . -36) (undo-tree-id3891 . -36) (undo-tree-id3892 . -3) (undo-tree-id3893 . -3) (undo-tree-id3894 . -3) (undo-tree-id3895 . -3) (undo-tree-id3896 . -3) (undo-tree-id3897 . -3) (undo-tree-id3898 . -4) (undo-tree-id3899 . -4) (undo-tree-id3900 . -4) (undo-tree-id3901 . -4) (undo-tree-id3902 . -4) (undo-tree-id3903 . -4) (undo-tree-id3904 . -5) (undo-tree-id3905 . -5) (undo-tree-id3906 . -5) (undo-tree-id3907 . -5) (undo-tree-id3908 . -5) (undo-tree-id3909 . -5) (undo-tree-id3910 . -6) (undo-tree-id3911 . -6) (undo-tree-id3912 . -6) (undo-tree-id3913 . -6) (undo-tree-id3914 . -6) (undo-tree-id3915 . -6) (undo-tree-id3916 . -7) (undo-tree-id3917 . -7) (undo-tree-id3918 . -7) (undo-tree-id3919 . -7) (undo-tree-id3920 . -7) (undo-tree-id3921 . -7) (undo-tree-id3922 . -18) (undo-tree-id3923 . -18) (undo-tree-id3924 . -18) (undo-tree-id3925 . -18) (undo-tree-id3926 . -18) (undo-tree-id3927 . -18) (undo-tree-id3928 . -19) (undo-tree-id3929 . -19) (undo-tree-id3930 . -19) (undo-tree-id3931 . -19) (undo-tree-id3932 . -19) (undo-tree-id3933 . -19) (undo-tree-id3934 . -20) (undo-tree-id3935 . -20) (undo-tree-id3936 . -20) (undo-tree-id3937 . -20) (undo-tree-id3938 . -20) (undo-tree-id3939 . -20) (undo-tree-id3940 . -21) (undo-tree-id3941 . -21) (undo-tree-id3942 . -21) (undo-tree-id3943 . -21) (undo-tree-id3944 . -21) (undo-tree-id3945 . -21) (undo-tree-id3946 . -22) (undo-tree-id3947 . -22) (undo-tree-id3948 . -22) (undo-tree-id3949 . -22) (undo-tree-id3950 . -22) (undo-tree-id3951 . -22) (undo-tree-id3952 . -23) (undo-tree-id3953 . -23) (undo-tree-id3954 . -23) (undo-tree-id3955 . -23) (undo-tree-id3956 . -23) (undo-tree-id3957 . -23) (undo-tree-id3958 . -24) (undo-tree-id3959 . -24) (undo-tree-id3960 . -24) (undo-tree-id3961 . -24) (undo-tree-id3962 . -24) (undo-tree-id3963 . -24) (undo-tree-id3964 . -25) (undo-tree-id3965 . -25) (undo-tree-id3966 . -25) (undo-tree-id3967 . -25) (undo-tree-id3968 . -25) (undo-tree-id3969 . -25) (undo-tree-id3970 . -26) (undo-tree-id3971 . -26) (undo-tree-id3972 . -26) (undo-tree-id3973 . -26) (undo-tree-id3974 . -26) (undo-tree-id3975 . -26) (undo-tree-id3976 . -27) (undo-tree-id3977 . -27) (undo-tree-id3978 . -27) (undo-tree-id3979 . -27) (undo-tree-id3980 . -27) (undo-tree-id3981 . -27) (undo-tree-id3982 . -28) (undo-tree-id3983 . -28) (undo-tree-id3984 . -28) (undo-tree-id3985 . -28) (undo-tree-id3986 . -28) (undo-tree-id3987 . -28) (undo-tree-id3988 . -29) (undo-tree-id3989 . -29) (undo-tree-id3990 . -29) (undo-tree-id3991 . -29) (undo-tree-id3992 . -29) (undo-tree-id3993 . -29) (undo-tree-id3994 . -30) (undo-tree-id3995 . -30) (undo-tree-id3996 . -30) (undo-tree-id3997 . -30) (undo-tree-id3998 . -30) (undo-tree-id3999 . -30) (undo-tree-id4000 . -31) (undo-tree-id4001 . -31) (undo-tree-id4002 . -31) (undo-tree-id4003 . -31) (undo-tree-id4004 . -31) (undo-tree-id4005 . -31) (undo-tree-id4006 . -32) (undo-tree-id4007 . -32) (undo-tree-id4008 . -32) (undo-tree-id4009 . -32) (undo-tree-id4010 . -32) (undo-tree-id4011 . -32) (undo-tree-id4012 . -33) (undo-tree-id4013 . -33) (undo-tree-id4014 . -33) (undo-tree-id4015 . -33) (undo-tree-id4016 . -33) (undo-tree-id4017 . -33) (undo-tree-id4018 . -34) (undo-tree-id4019 . -34) (undo-tree-id4020 . -34) (undo-tree-id4021 . -34) (undo-tree-id4022 . -34) (undo-tree-id4023 . -34) (undo-tree-id4024 . -35) (undo-tree-id4025 . -35) (undo-tree-id4026 . -35) (undo-tree-id4027 . -35) (undo-tree-id4028 . -35) (undo-tree-id4029 . -35) (undo-tree-id4030 . -36) (undo-tree-id4031 . -36) (undo-tree-id4032 . -36) (undo-tree-id4033 . -36) (undo-tree-id4034 . -36) (undo-tree-id4035 . -36) (undo-tree-id4036 . -34) (undo-tree-id4037 . -34) (undo-tree-id4038 . -34) (undo-tree-id4039 . -34) (undo-tree-id4040 . -34) (undo-tree-id4041 . -34) (undo-tree-id4042 . -33) (undo-tree-id4043 . -33) (undo-tree-id4044 . -33) (undo-tree-id4045 . -33) (undo-tree-id4046 . -33) (undo-tree-id4047 . -33) (undo-tree-id4048 . -27) (undo-tree-id4049 . -27) (undo-tree-id4050 . -27) (undo-tree-id4051 . -27) (undo-tree-id4052 . -27) (undo-tree-id4053 . -27) (undo-tree-id4054 . -26) (undo-tree-id4055 . -26) (undo-tree-id4056 . -26) (undo-tree-id4057 . -26) (undo-tree-id4058 . -26) (undo-tree-id4059 . -26) (undo-tree-id4060 . -18) (undo-tree-id4061 . -18) (undo-tree-id4062 . -18) (undo-tree-id4063 . -18) (undo-tree-id4064 . -18) (undo-tree-id4065 . -18) (undo-tree-id4066 . -7) (undo-tree-id4067 . -7) (undo-tree-id4068 . -7) (undo-tree-id4069 . -7) (undo-tree-id4070 . -7) (undo-tree-id4071 . -7) (undo-tree-id4072 . -6) (undo-tree-id4073 . -6) (undo-tree-id4074 . -6) (undo-tree-id4075 . -6) (undo-tree-id4076 . -6) (undo-tree-id4077 . -6) (undo-tree-id4078 . -5) (undo-tree-id4079 . -5) (undo-tree-id4080 . -5) (undo-tree-id4081 . -5) (undo-tree-id4082 . -5) (undo-tree-id4083 . -5) (undo-tree-id4084 . -6) (undo-tree-id4085 . -6) (undo-tree-id4086 . -6) (undo-tree-id4087 . -6) (undo-tree-id4088 . -6) (undo-tree-id4089 . -6) (undo-tree-id4090 . -18) (undo-tree-id4091 . -18) (undo-tree-id4092 . -18) (undo-tree-id4093 . -18) (undo-tree-id4094 . -18) (undo-tree-id4095 . -18) (undo-tree-id4096 . -25) (undo-tree-id4097 . -25) (undo-tree-id4098 . -25) (undo-tree-id4099 . -25) (undo-tree-id4100 . -25) (undo-tree-id4101 . -25) (undo-tree-id4102 . -26) (undo-tree-id4103 . -26) (undo-tree-id4104 . -26) (undo-tree-id4105 . -26) (undo-tree-id4106 . -26) (undo-tree-id4107 . -26) (undo-tree-id4108 . -32) (undo-tree-id4109 . -32) (undo-tree-id4110 . -32) (undo-tree-id4111 . -32) (undo-tree-id4112 . -32) (undo-tree-id4113 . -32) (undo-tree-id4114 . -33) (undo-tree-id4115 . -33) (undo-tree-id4116 . -33) (undo-tree-id4117 . -33) (undo-tree-id4118 . -33) (undo-tree-id4119 . -33) (undo-tree-id4120 . -36) (undo-tree-id4121 . -36) (undo-tree-id4122 . -36) (undo-tree-id4123 . -36) (undo-tree-id4124 . -36) (undo-tree-id4125 . -36) (undo-tree-id4126 . -36) (undo-tree-id4127 . -36) (undo-tree-id4128 . -36) (undo-tree-id4129 . -36) (undo-tree-id4130 . -36) (undo-tree-id4131 . -36) (undo-tree-id4132 . -34) (undo-tree-id4133 . -34) (undo-tree-id4134 . -34) (undo-tree-id4135 . -34) (undo-tree-id4136 . -34) (undo-tree-id4137 . -34) (undo-tree-id4138 . -33) (undo-tree-id4139 . -33) (undo-tree-id4140 . -33) (undo-tree-id4141 . -33) (undo-tree-id4142 . -33) (undo-tree-id4143 . -33) (undo-tree-id4144 . -27) (undo-tree-id4145 . -27) (undo-tree-id4146 . -27) (undo-tree-id4147 . -27) (undo-tree-id4148 . -27) (undo-tree-id4149 . -27) (undo-tree-id4150 . -26) (undo-tree-id4151 . -26) (undo-tree-id4152 . -26) (undo-tree-id4153 . -26) (undo-tree-id4154 . -26) (undo-tree-id4155 . -26) (undo-tree-id4156 . -18) (undo-tree-id4157 . -18) (undo-tree-id4158 . -18) (undo-tree-id4159 . -18) (undo-tree-id4160 . -18) (undo-tree-id4161 . -18) (undo-tree-id4162 . -7) (undo-tree-id4163 . -7) (undo-tree-id4164 . -7) (undo-tree-id4165 . -7) (undo-tree-id4166 . -7) (undo-tree-id4167 . -7) (undo-tree-id4168 . -6) (undo-tree-id4169 . -6) (undo-tree-id4170 . -6) (undo-tree-id4171 . -6) (undo-tree-id4172 . -6) (undo-tree-id4173 . -6) (undo-tree-id4174 . -6)) (25447 48486 810112 42000) 0 nil])
([nil nil ((1080 . 1162) (#(":ID: 0f4370d3-3f84-4bef-9a3d-042b63488198" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 3 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 41 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -178) (178 . 266) (178 . 179) (164 . 183)) nil (25447 49339 469031 889000) 0 nil])
([nil nil ((#("file:screenshot-20221106-145651.png" 0 5 (font-lock-multiline t htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-1) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 5 15 (font-lock-multiline t htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-1) cursor-sensor-functions (svg-tag--cursor-function) display #("screenshot-" 0 10 (cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"99\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"99\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"97\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"0.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> screenshot</text></svg>" 413 423 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)))) :scale 1.1146341463414635 :ascent center :transform-smoothing t) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 10 11 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 15 16 (font-lock-multiline t htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-1) cursor-sensor-functions (svg-tag--cursor-function) display #("screenshot-" 0 10 (cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"99\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"99\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"97\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"0.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> screenshot</text></svg>" 413 423 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)))) :scale 1.1146341463414635 :ascent center :transform-smoothing t) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 10 11 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 16 34 (font-lock-multiline t htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-1) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 34 35 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "file:screenshot-20221106-145651.png") help-echo "LINK: file:screenshot-20221106-145651.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-link org-level-1) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 1025) (undo-tree-id3552 . -34) (undo-tree-id3553 . -34) (undo-tree-id3554 . -34) (undo-tree-id3555 . -34) (undo-tree-id3556 . -34) (undo-tree-id3557 . -34) (undo-tree-id3558 . -34) (undo-tree-id3559 . -34) (undo-tree-id3560 . -34) (undo-tree-id3561 . -34) (undo-tree-id3562 . -34) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -2) (undo-tree-id3570 . -2) (undo-tree-id3571 . -2) (undo-tree-id3572 . -2) (undo-tree-id3573 . -2) (undo-tree-id3574 . -2) (undo-tree-id3575 . -3) (undo-tree-id3576 . -3) (undo-tree-id3577 . -3) (undo-tree-id3578 . -3) (undo-tree-id3579 . -3) (undo-tree-id3580 . -3) (undo-tree-id3581 . -4) (undo-tree-id3582 . -4) (undo-tree-id3583 . -4) (undo-tree-id3584 . -4) (undo-tree-id3585 . -4) (undo-tree-id3586 . -4) (undo-tree-id3587 . -5) (undo-tree-id3588 . -5) (undo-tree-id3589 . -5) (undo-tree-id3590 . -5) (undo-tree-id3591 . -5) (undo-tree-id3592 . -5) (undo-tree-id3593 . -16) (undo-tree-id3594 . -16) (undo-tree-id3595 . -16) (undo-tree-id3596 . -16) (undo-tree-id3597 . -16) (undo-tree-id3598 . -16) (undo-tree-id3599 . -17) (undo-tree-id3600 . -17) (undo-tree-id3601 . -17) (undo-tree-id3602 . -17) (undo-tree-id3603 . -17) (undo-tree-id3604 . -17) (undo-tree-id3605 . -18) (undo-tree-id3606 . -18) (undo-tree-id3607 . -18) (undo-tree-id3608 . -18) (undo-tree-id3609 . -18) (undo-tree-id3610 . -18) (undo-tree-id3611 . -19) (undo-tree-id3612 . -19) (undo-tree-id3613 . -19) (undo-tree-id3614 . -19) (undo-tree-id3615 . -19) (undo-tree-id3616 . -19) (undo-tree-id3617 . -20) (undo-tree-id3618 . -20) (undo-tree-id3619 . -20) (undo-tree-id3620 . -20) (undo-tree-id3621 . -20) (undo-tree-id3622 . -20) (undo-tree-id3623 . -21) (undo-tree-id3624 . -21) (undo-tree-id3625 . -21) (undo-tree-id3626 . -21) (undo-tree-id3627 . -21) (undo-tree-id3628 . -21) (undo-tree-id3629 . -22) (undo-tree-id3630 . -22) (undo-tree-id3631 . -22) (undo-tree-id3632 . -22) (undo-tree-id3633 . -22) (undo-tree-id3634 . -22) (undo-tree-id3635 . -23) (undo-tree-id3636 . -23) (undo-tree-id3637 . -23) (undo-tree-id3638 . -23) (undo-tree-id3639 . -23) (undo-tree-id3640 . -23) (undo-tree-id3641 . -24) (undo-tree-id3642 . -24) (undo-tree-id3643 . -24) (undo-tree-id3644 . -24) (undo-tree-id3645 . -24) (undo-tree-id3646 . -24) (undo-tree-id3647 . -25) (undo-tree-id3648 . -25) (undo-tree-id3649 . -25) (undo-tree-id3650 . -25) (undo-tree-id3651 . -25) (undo-tree-id3652 . -25) (undo-tree-id3653 . -26) (undo-tree-id3654 . -26) (undo-tree-id3655 . -26) (undo-tree-id3656 . -26) (undo-tree-id3657 . -26) (undo-tree-id3658 . -26) (undo-tree-id3659 . -27) (undo-tree-id3660 . -27) (undo-tree-id3661 . -27) (undo-tree-id3662 . -27) (undo-tree-id3663 . -27) (undo-tree-id3664 . -27) (undo-tree-id3665 . -28) (undo-tree-id3666 . -28) (undo-tree-id3667 . -28) (undo-tree-id3668 . -28) (undo-tree-id3669 . -28) (undo-tree-id3670 . -28) (undo-tree-id3671 . -29) (undo-tree-id3672 . -29) (undo-tree-id3673 . -29) (undo-tree-id3674 . -29) (undo-tree-id3675 . -29) (undo-tree-id3676 . -29) (undo-tree-id3677 . -30) (undo-tree-id3678 . -30) (undo-tree-id3679 . -30) (undo-tree-id3680 . -30) (undo-tree-id3681 . -30) (undo-tree-id3682 . -30) (undo-tree-id3683 . -31) (undo-tree-id3684 . -31) (undo-tree-id3685 . -31) (undo-tree-id3686 . -31) (undo-tree-id3687 . -31) (undo-tree-id3688 . -31) (undo-tree-id3689 . -32) (undo-tree-id3690 . -32) (undo-tree-id3691 . -32) (undo-tree-id3692 . -32) (undo-tree-id3693 . -32) (undo-tree-id3694 . -32) (undo-tree-id3695 . -33) (undo-tree-id3696 . -33) (undo-tree-id3697 . -33) (undo-tree-id3698 . -33) (undo-tree-id3699 . -33) (undo-tree-id3700 . -33) (undo-tree-id3701 . -34) (undo-tree-id3702 . -34) (undo-tree-id3703 . -34) (undo-tree-id3704 . -34) (undo-tree-id3705 . -34) (undo-tree-id3706 . -34) (undo-tree-id3707 . -32) (undo-tree-id3708 . -32) (undo-tree-id3709 . -32) (undo-tree-id3710 . -32) (undo-tree-id3711 . -32) (undo-tree-id3712 . -32) (undo-tree-id3713 . -31) (undo-tree-id3714 . -31) (undo-tree-id3715 . -31) (undo-tree-id3716 . -31) (undo-tree-id3717 . -31) (undo-tree-id3718 . -31) (undo-tree-id3719 . -25) (undo-tree-id3720 . -25) (undo-tree-id3721 . -25) (undo-tree-id3722 . -25) (undo-tree-id3723 . -25) (undo-tree-id3724 . -25) (undo-tree-id3725 . -24) (undo-tree-id3726 . -24) (undo-tree-id3727 . -24) (undo-tree-id3728 . -24) (undo-tree-id3729 . -24) (undo-tree-id3730 . -24) (undo-tree-id3731 . -16) (undo-tree-id3732 . -16) (undo-tree-id3733 . -16) (undo-tree-id3734 . -16) (undo-tree-id3735 . -16) (undo-tree-id3736 . -16) (undo-tree-id3737 . -5) (undo-tree-id3738 . -5) (undo-tree-id3739 . -5) (undo-tree-id3740 . -5) (undo-tree-id3741 . -5) (undo-tree-id3742 . -5) (undo-tree-id3743 . -4) (undo-tree-id3744 . -4) (undo-tree-id3745 . -4) (undo-tree-id3746 . -4) (undo-tree-id3747 . -4) (undo-tree-id3748 . -4) (undo-tree-id3749 . -35) (undo-tree-id3750 . -34) (undo-tree-id3751 . -3) (undo-tree-id3752 . -3) (undo-tree-id3753 . -3) (undo-tree-id3754 . -3) (undo-tree-id3755 . -3) (undo-tree-id3756 . -3) (undo-tree-id3757 . -4) (undo-tree-id3758 . -4) (undo-tree-id3759 . -4) (undo-tree-id3760 . -4) (undo-tree-id3761 . -4) (undo-tree-id3762 . -4) (undo-tree-id3763 . -16) (undo-tree-id3764 . -16) (undo-tree-id3765 . -16) (undo-tree-id3766 . -16) (undo-tree-id3767 . -16) (undo-tree-id3768 . -16) (undo-tree-id3769 . -23) (undo-tree-id3770 . -23) (undo-tree-id3771 . -23) (undo-tree-id3772 . -23) (undo-tree-id3773 . -23) (undo-tree-id3774 . -23) (undo-tree-id3775 . -24) (undo-tree-id3776 . -24) (undo-tree-id3777 . -24) (undo-tree-id3778 . -24) (undo-tree-id3779 . -24) (undo-tree-id3780 . -24) (undo-tree-id3781 . -30) (undo-tree-id3782 . -30) (undo-tree-id3783 . -30) (undo-tree-id3784 . -30) (undo-tree-id3785 . -30) (undo-tree-id3786 . -30) (undo-tree-id3787 . -31) (undo-tree-id3788 . -31) (undo-tree-id3789 . -31) (undo-tree-id3790 . -31) (undo-tree-id3791 . -31) (undo-tree-id3792 . -31) (undo-tree-id3793 . -34) (undo-tree-id3794 . -34) (undo-tree-id3795 . -34) (undo-tree-id3796 . -34) (undo-tree-id3797 . -34) (undo-tree-id3798 . -34) (undo-tree-id3799 . -34) 1059) ((1025 . 1060)) (25447 48486 808729 818000) 0 nil])
([nil nil ((#("   [[file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png]] 
" 0 3 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 4 (face org-link font-lock-multiline t htmlize-link (:uri "file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png") help-echo "LINK: file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 5 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png") help-echo "LINK: file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 5 10 (font-lock-multiline t htmlize-link (:uri "file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png") help-echo "LINK: file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 10 14 (font-lock-multiline t htmlize-link (:uri "file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png") help-echo "LINK: file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"45\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"45\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"43\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"2.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> data</text></svg>" 413 417 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) :scale 1.1146341463414635 :ascent center :transform-smoothing t) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 14 82 (font-lock-multiline t htmlize-link (:uri "file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png") help-echo "LINK: file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 82 83 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png") help-echo "LINK: file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 83 84 (font-lock-multiline t htmlize-link (:uri "file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png") help-echo "LINK: file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 84 85 (font-lock-multiline t htmlize-link (:uri "file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png") help-echo "LINK: file:data/0f/4370d3-3f84-4bef-9a3d-042b63488198/screenshot-20221106-145830.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 85 86 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 86 87 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1077) (undo-tree-id4661 . 1) (undo-tree-id4662 . -87)) nil (25447 49339 469028 950000) 0 nil])
nil
([nil nil ((1077 . 1177)) nil (25447 49339 469024 953000) 0 nil])
([nil nil ((#("#+DOWNLOADED: screenshot @ 2022-11-06 15:02:09
[[file:General/2022-11-06_15-02-09_screenshot.png]]
" 0 41 (face org-meta-line font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 41 43 (face org-meta-line font-lock-fontified t cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"27\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"27\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"25\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"3.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> 02</text></svg>" 413 415 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) :scale 1.1053097345132743 :ascent center :transform-smoothing t) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 43 44 (face org-meta-line font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 44 46 (face org-meta-line font-lock-fontified t cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"27\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"27\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"25\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"3.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> 09</text></svg>" 413 415 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) :scale 1.1053097345132743 :ascent center :transform-smoothing t) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 46 47 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 47 48 (face org-link font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-02-09_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-02-09_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 48 49 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-02-09_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-02-09_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 49 54 (font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-02-09_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-02-09_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 54 61 (font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-02-09_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-02-09_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"72\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"72\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"70\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"1.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> General</text></svg>" 413 420 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) :scale 1.1053097345132743 :ascent center :transform-smoothing t) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 61 95 (font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-02-09_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-02-09_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 95 96 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-02-09_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-02-09_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 96 97 (font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-02-09_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-02-09_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 97 98 (font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-02-09_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-02-09_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 98 99 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1078) (undo-tree-id4651 . -98) (undo-tree-id4652 . -98) (undo-tree-id4653 . -3) (undo-tree-id4654 . -52) (undo-tree-id4655 . -47) (undo-tree-id4656 . -99) (undo-tree-id4657 . -99) (undo-tree-id4658 . -98) (undo-tree-id4659 . -3) (undo-tree-id4660 . -98) 1176) nil (25447 49339 469022 536000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1077) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1)) nil (25447 49339 469007 226000) 0 nil])
([nil nil ((1077 . 1177)) nil (25447 49339 468998 575000) 0 nil])
([nil nil ((#("#+DOWNLOADED: screenshot @ 2022-11-06 15:03:33
[[file:General/2022-11-06_15-03-33_screenshot.png]]
" 0 41 (face org-meta-line font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 41 43 (face org-meta-line font-lock-fontified t cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"27\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"27\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"25\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"3.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> 03</text></svg>" 413 415 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) :scale 1.1053097345132743 :ascent center :transform-smoothing t) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 43 44 (face org-meta-line font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 44 46 (face org-meta-line font-lock-fontified t cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"27\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"27\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"25\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"3.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> 33</text></svg>" 413 415 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) :scale 1.1053097345132743 :ascent center :transform-smoothing t) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 46 47 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 47 48 (face org-link font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-03-33_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-03-33_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 48 49 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-03-33_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-03-33_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 49 54 (font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-03-33_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-03-33_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 54 61 (font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-03-33_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-03-33_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"72\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"72\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"70\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"1.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> General</text></svg>" 413 420 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) :scale 1.1053097345132743 :ascent center :transform-smoothing t) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 61 95 (font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-03-33_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-03-33_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 95 96 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-03-33_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-03-33_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 96 97 (font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-03-33_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-03-33_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 97 98 (font-lock-multiline t htmlize-link (:uri "file:General/2022-11-06_15-03-33_screenshot.png") help-echo "LINK: file:General/2022-11-06_15-03-33_screenshot.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 98 99 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1078) (undo-tree-id4631 . -47) (undo-tree-id4632 . -47) (undo-tree-id4633 . -47) (undo-tree-id4634 . -47) (undo-tree-id4635 . -99) (undo-tree-id4636 . -99) (undo-tree-id4637 . -47) (undo-tree-id4638 . -47) (undo-tree-id4639 . -98) (undo-tree-id4640 . -47) (undo-tree-id4641 . 52) (undo-tree-id4642 . -48) (undo-tree-id4643 . 2) (undo-tree-id4644 . -98) 1125) nil (25447 49339 468994 549000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1077) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1)) nil (25447 49339 468971 794000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1076) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1)) nil (25447 49339 468938 347000) 0 nil])
([nil nil ((1154 . 1155) (1150 . 1154) (1129 . 1150) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -1129) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) 1130 (1123 . 1130) (1122 . 1124) (1121 . 1122) (1118 . 1121) (#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -1118) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -1119) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) 1120 (1109 . 1120) (#("q" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -1109) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (#("u" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -1110) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) 1111 (1109 . 1111) (1088 . 1109) (#(";" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -1088) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) 1089 (1087 . 1089) (1084 . 1087) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -1084) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) 1085 (1084 . 1085) (#("R" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -1084) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -1085) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -1086) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) 1087 (1080 . 1087) (1016 . 1080) (#("  * 
  * *Corpus*: linguistic dataset used to train the ML model" 0 2 (org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 2 4 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 7 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil org-category "20220718143717-natural_language_processing") 7 8 (face org-superstar-item composition (3 1 [8226]) org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 8 9 (org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 9 10 (invisible t org-emphasis t font-lock-multiline t org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 10 16 (org-emphasis t font-lock-multiline t face (bold) org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 16 17 (invisible t org-emphasis t font-lock-multiline t org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 17 64 (org-category "20220718143717-natural_language_processing" fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . 1016) (undo-tree-id4468 . -64) (undo-tree-id4469 . -64) (undo-tree-id4470 . -64) (undo-tree-id4471 . -6) (undo-tree-id4472 . -6) (undo-tree-id4473 . -6) (undo-tree-id4474 . -6) (undo-tree-id4475 . -6) (undo-tree-id4476 . -6) (undo-tree-id4477 . -7) (undo-tree-id4478 . -7) (undo-tree-id4479 . -7) (undo-tree-id4480 . -7) (undo-tree-id4481 . -7) (undo-tree-id4482 . -7) (undo-tree-id4483 . -8) (undo-tree-id4484 . -8) (undo-tree-id4485 . -8) (undo-tree-id4486 . -8) (undo-tree-id4487 . -8) (undo-tree-id4488 . -8) (undo-tree-id4489 . -9) (undo-tree-id4490 . -9) (undo-tree-id4491 . -9) (undo-tree-id4492 . -9) (undo-tree-id4493 . -9) (undo-tree-id4494 . -9) (undo-tree-id4495 . -11) (undo-tree-id4496 . -11) (undo-tree-id4497 . -11) (undo-tree-id4498 . -11) (undo-tree-id4499 . -11) (undo-tree-id4500 . -11) (undo-tree-id4501 . -12) (undo-tree-id4502 . -12) (undo-tree-id4503 . -12) (undo-tree-id4504 . -12) (undo-tree-id4505 . -12) (undo-tree-id4506 . -12) (undo-tree-id4507 . -13) (undo-tree-id4508 . -13) (undo-tree-id4509 . -13) (undo-tree-id4510 . -13) (undo-tree-id4511 . -13) (undo-tree-id4512 . -13) (undo-tree-id4513 . -64) (undo-tree-id4514 . -64) (undo-tree-id4515 . -64) (undo-tree-id4516 . -64) (undo-tree-id4517 . -64) (undo-tree-id4518 . -64) (undo-tree-id4519 . -64) (undo-tree-id4520 . -64) (undo-tree-id4521 . -5) (1016 . 1021) (#("
    " 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 5 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1075) (undo-tree-id4522 . -5) (undo-tree-id4523 . -5) (undo-tree-id4524 . -1) (undo-tree-id4525 . -5) (undo-tree-id4526 . -5) (undo-tree-id4527 . -5) (undo-tree-id4528 . -5) (undo-tree-id4529 . -5) (undo-tree-id4530 . -5) (undo-tree-id4531 . -5) (undo-tree-id4532 . -5) 1080 (1075 . 1080) 1024) nil (25447 49339 468783 749000) 0 nil])
([nil nil ((1156 . 1157)) nil (25447 49339 464717 171000) 0 nil])
([nil nil ((#(":PROPERTIES:
:ID:       0f4370d3-3f84-4bef-9a3d-042b63488198
:END:
" 0 1 (org-category "20220718143717-natural_language_processing" font-lock-fontified t face org-drawer wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 11 (org-category "20220718143717-natural_language_processing" font-lock-fontified t face org-drawer cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"99\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"99\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"97\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"0.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> PROPERTIES</text></svg>" 413 423 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) :scale 1.1146341463414635 :ascent center :transform-smoothing t) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 11 12 (org-category "20220718143717-natural_language_processing" font-lock-fontified t face org-drawer wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 12 13 (org-category "20220718143717-natural_language_processing" wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 13 14 (org-category "20220718143717-natural_language_processing" face org-special-keyword wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 14 16 (org-category "20220718143717-natural_language_processing" face org-special-keyword cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"27\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"27\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"25\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"3.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> ID</text></svg>" 413 415 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) :scale 1.1146341463414635 :ascent center :transform-smoothing t) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 16 17 (org-category "20220718143717-natural_language_processing" face org-special-keyword wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 17 19 (org-category "20220718143717-natural_language_processing" wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 19 20 (org-category "20220718143717-natural_language_processing" wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 20 22 (org-category "20220718143717-natural_language_processing" wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 22 23 (org-category "20220718143717-natural_language_processing" wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 23 24 (org-category "20220718143717-natural_language_processing" wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 24 60 (org-category "20220718143717-natural_language_processing" face org-property-value wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 60 61 (org-category "20220718143717-natural_language_processing" wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 61 62 (org-category "20220718143717-natural_language_processing" font-lock-fontified t face org-drawer wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 62 65 (org-category "20220718143717-natural_language_processing" font-lock-fontified t face org-drawer cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data #("<svg width=\"36\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <rect width=\"36\" height=\"23.400000000000002\" x=\"0.0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect> <rect width=\"34\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect> <text y=\"15\" x=\"3.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"400\" font-family=\"Fira Code\"> END</text></svg>" 413 416 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) :scale 1.1146341463414635 :ascent center :transform-smoothing t) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 65 66 (org-category "20220718143717-natural_language_processing" font-lock-fontified t face org-drawer wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 66 67 (org-category "20220718143717-natural_language_processing" wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 165) (undo-tree-id5030 . -12) (undo-tree-id5031 . 55) (undo-tree-id5032 . -66) (undo-tree-id5033 . -13) (undo-tree-id5034 . -12) (undo-tree-id5035 . -12) (undo-tree-id5036 . -12) (undo-tree-id5037 . -12) (undo-tree-id5038 . -12) (undo-tree-id5039 . -12) (undo-tree-id5040 . -12) (undo-tree-id5041 . -12) (undo-tree-id5042 . -12) (undo-tree-id5043 . -12) (undo-tree-id5044 . -12) (undo-tree-id5045 . -12) (undo-tree-id5046 . -12) (undo-tree-id5047 . -12) (undo-tree-id5048 . -12) (undo-tree-id5049 . -12) 177 (t 25447 49339 489492 100000)) nil (25447 49607 530005 815000) 0 nil])
([nil nil ((#("
" 0 1 (org-category "20220718143717-natural_language_processing" wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 1091) (undo-tree-id4665 . 1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (165 . 1091) (#("  * *Hapaxes*: words that occur only once in a text.
  * *Token*: it's a sequence of characters (letters or symbols) the we count as
    units. For instance the sequence of letter comprising the word \"parrot\" or
    the sequence of symbols included in a emoji like :-) are considered to be tokens.
  * *Types*: similar concept to word type but it also includes punctuation, so
    it's a broader category.
  * *Word Type*: it represents the form of the word independently form the
    context. So it's basically a synonym of \"word\".
  * *Vocabulary*: broadly speaking, is the set of all words in a
    language. However, in most cases it is used to refer to the set of all words
    used in a specific model or experiment, which is usually a subset of the
    words of that language.
  * *Corpus*: linguistic dataset used to train the ML model
  * *N-Gram*: sequence of N consecutive items (words, subwords, characters etc.)." 0 1 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (face org-superstar-item composition (3 1 [8226]) org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 4 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 5 (invisible t org-emphasis t font-lock-multiline t org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 5 12 (org-emphasis t font-lock-multiline t face (bold) org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 12 13 (invisible t org-emphasis t font-lock-multiline t org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 13 52 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 52 53 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 53 55 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 55 56 (face org-superstar-item composition (3 1 [8226]) org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 56 57 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 57 58 (invisible t org-emphasis t font-lock-multiline t org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 58 63 (org-emphasis t font-lock-multiline t face (bold) org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 63 64 (invisible t org-emphasis t font-lock-multiline t org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 64 133 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 133 212 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 212 297 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 297 298 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 298 300 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 300 301 (face org-superstar-item composition (3 1 [8226]) org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 301 302 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 302 303 (invisible t org-emphasis t font-lock-multiline t org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 303 308 (org-emphasis t font-lock-multiline t face (bold) org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 308 309 (invisible t org-emphasis t font-lock-multiline t org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 309 377 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 377 405 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 405 406 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 406 408 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "20220718143717-natural_language_processing") 408 409 (face org-superstar-item composition (3 1 [8226]) fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "20220718143717-natural_language_processing") 409 410 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "20220718143717-natural_language_processing") 410 411 (invisible t org-emphasis t font-lock-multiline t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "20220718143717-natural_language_processing") 411 420 (org-emphasis t font-lock-multiline t face (bold) fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "20220718143717-natural_language_processing") 420 421 (invisible t org-emphasis t font-lock-multiline t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "20220718143717-natural_language_processing") 421 481 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "20220718143717-natural_language_processing") 481 532 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category "20220718143717-natural_language_processing") 532 533 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 533 535 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 535 536 (face org-superstar-item composition (3 1 [8226]) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 536 537 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 537 538 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 538 548 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 548 549 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 549 598 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 598 602 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 602 679 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 679 756 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 756 760 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 760 783 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 783 784 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 784 786 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 786 787 (face org-superstar-item composition (3 1 [8226]) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 787 788 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 788 789 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 789 795 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 795 796 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 796 843 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 843 844 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 844 846 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing") 846 847 (org-category "20220718143717-natural_language_processing" face org-superstar-item composition (3 1 [8226]) fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 847 848 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 848 849 (org-category "20220718143717-natural_language_processing" invisible t org-emphasis t font-lock-multiline t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 849 855 (org-category "20220718143717-natural_language_processing" org-emphasis t font-lock-multiline t face (bold) fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 855 856 (org-category "20220718143717-natural_language_processing" invisible t org-emphasis t font-lock-multiline t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 856 923 (org-category "20220718143717-natural_language_processing" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent))) 923 925 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 165) (undo-tree-id4743 . -14) (undo-tree-id4744 . -924) (undo-tree-id4745 . -53) (undo-tree-id4746 . -784) (undo-tree-id4747 . -784) (undo-tree-id4748 . -784) (undo-tree-id4749 . -784) (undo-tree-id4750 . -784) (undo-tree-id4751 . -784) (undo-tree-id4752 . -784) (undo-tree-id4753 . -784) (undo-tree-id4754 . -784) (undo-tree-id4755 . -784) (undo-tree-id4756 . -784) (undo-tree-id4757 . -784) (undo-tree-id4758 . -784) (undo-tree-id4759 . -784) (undo-tree-id4760 . -784) (undo-tree-id4761 . -784) (undo-tree-id4762 . -784) (undo-tree-id4763 . -784) (undo-tree-id4764 . -784) (undo-tree-id4765 . -784) (undo-tree-id4766 . -784) (undo-tree-id4767 . -784) (undo-tree-id4768 . -784) (undo-tree-id4769 . -784) (undo-tree-id4770 . -784) (undo-tree-id4771 . -784) (undo-tree-id4772 . -784) (undo-tree-id4773 . -784) (undo-tree-id4774 . -784) (undo-tree-id4775 . -784) (undo-tree-id4776 . -784) (undo-tree-id4777 . -784) (undo-tree-id4778 . -784) (undo-tree-id4779 . -784) (undo-tree-id4780 . -784) (undo-tree-id4781 . -784) (undo-tree-id4782 . -784) (undo-tree-id4783 . -784) (undo-tree-id4784 . -784) (undo-tree-id4785 . -784) (undo-tree-id4786 . -784) (undo-tree-id4787 . -784) (undo-tree-id4788 . -784) (undo-tree-id4789 . -784) (undo-tree-id4790 . -784) (undo-tree-id4791 . -784) (undo-tree-id4792 . -784) (undo-tree-id4793 . -784) (undo-tree-id4794 . -784) (undo-tree-id4795 . -852) (undo-tree-id4796 . -852) (undo-tree-id4797 . -852) (undo-tree-id4798 . -852) (undo-tree-id4799 . -852) (undo-tree-id4800 . -852) (undo-tree-id4801 . -852) (undo-tree-id4802 . -852) (undo-tree-id4803 . -852) (undo-tree-id4804 . -852) (undo-tree-id4805 . -852) (undo-tree-id4806 . -852) (undo-tree-id4807 . -852) (undo-tree-id4808 . -852) (undo-tree-id4809 . -852) (undo-tree-id4810 . -852) (undo-tree-id4811 . -852) (undo-tree-id4812 . -852) (undo-tree-id4813 . -852) (undo-tree-id4814 . -852) (undo-tree-id4815 . -852) (undo-tree-id4816 . -852) (undo-tree-id4817 . -852) (undo-tree-id4818 . -852) (undo-tree-id4819 . -852) (undo-tree-id4820 . -852) (undo-tree-id4821 . -852) (undo-tree-id4822 . -852) (undo-tree-id4823 . -852) (undo-tree-id4824 . -852) (undo-tree-id4825 . -852) (undo-tree-id4826 . -852) (undo-tree-id4827 . -852) (undo-tree-id4828 . -852) (undo-tree-id4829 . -852) (undo-tree-id4830 . -852) (undo-tree-id4831 . -852) (undo-tree-id4832 . -852) (undo-tree-id4833 . -852) (undo-tree-id4834 . -852) (undo-tree-id4835 . -852) (undo-tree-id4836 . -852) (undo-tree-id4837 . -852) (undo-tree-id4838 . -852) (undo-tree-id4839 . -852) (undo-tree-id4840 . -852) (undo-tree-id4841 . -852) (undo-tree-id4842 . -852) (undo-tree-id4843 . -852) (undo-tree-id4844 . -852) (undo-tree-id4845 . -852) (undo-tree-id4846 . -852) (undo-tree-id4847 . -852) (undo-tree-id4848 . -852) (undo-tree-id4849 . -852) (undo-tree-id4850 . -852) (undo-tree-id4851 . -852) (undo-tree-id4852 . -852) (undo-tree-id4853 . -852) (undo-tree-id4854 . -852) (undo-tree-id4855 . -852) (undo-tree-id4856 . -852) (undo-tree-id4857 . -852) (undo-tree-id4858 . -852) (undo-tree-id4859 . -852) (undo-tree-id4860 . -852) (undo-tree-id4861 . -852) (undo-tree-id4862 . -852) (undo-tree-id4863 . -852) (undo-tree-id4864 . -852) (undo-tree-id4865 . -852) (undo-tree-id4866 . -852) (undo-tree-id4867 . -852) (undo-tree-id4868 . -852) (undo-tree-id4869 . -852) (undo-tree-id4870 . -852) (undo-tree-id4871 . -852) (undo-tree-id4872 . -852) (undo-tree-id4873 . -852) (undo-tree-id4874 . -852) (undo-tree-id4875 . -852) (undo-tree-id4876 . -852) (undo-tree-id4877 . -852) (undo-tree-id4878 . -852) (undo-tree-id4879 . -852) (undo-tree-id4880 . -852) (undo-tree-id4881 . -852) (undo-tree-id4882 . -852) (undo-tree-id4883 . -852) (undo-tree-id4884 . -852) (undo-tree-id4885 . -852) (undo-tree-id4886 . -852) (undo-tree-id4887 . -852) (undo-tree-id4888 . -852) (undo-tree-id4889 . -852) (undo-tree-id4890 . -852) (undo-tree-id4891 . -852) (undo-tree-id4892 . -856) (undo-tree-id4893 . -856) (undo-tree-id4894 . -856) (undo-tree-id4895 . -856) (undo-tree-id4896 . -856) (undo-tree-id4897 . -877) (undo-tree-id4898 . -877) (undo-tree-id4899 . -877) (undo-tree-id4900 . -877) (undo-tree-id4901 . -877) (undo-tree-id4902 . -877) (undo-tree-id4903 . -877) (undo-tree-id4904 . -877) (undo-tree-id4905 . -877) (undo-tree-id4906 . -877) (undo-tree-id4907 . -877) (undo-tree-id4908 . -877) (undo-tree-id4909 . -877) (undo-tree-id4910 . -877) (undo-tree-id4911 . -877) (undo-tree-id4912 . -877) (undo-tree-id4913 . -877) (undo-tree-id4914 . -877) (undo-tree-id4915 . -877) (undo-tree-id4916 . -877) (undo-tree-id4917 . -877) (undo-tree-id4918 . -877) (undo-tree-id4919 . -877) (undo-tree-id4920 . -877) (undo-tree-id4921 . -877) (undo-tree-id4922 . -886) (undo-tree-id4923 . -886) (undo-tree-id4924 . -886) (undo-tree-id4925 . -886) (undo-tree-id4926 . -886) (undo-tree-id4927 . -886) (undo-tree-id4928 . -886) (undo-tree-id4929 . -886) (undo-tree-id4930 . -886) (undo-tree-id4931 . -886) (undo-tree-id4932 . -886) (undo-tree-id4933 . -886) (undo-tree-id4934 . -886) (undo-tree-id4935 . -886) (undo-tree-id4936 . -886) (undo-tree-id4937 . -886) (undo-tree-id4938 . -886) (undo-tree-id4939 . -886) (undo-tree-id4940 . -897) (undo-tree-id4941 . -897) (undo-tree-id4942 . -897) (undo-tree-id4943 . -897) (undo-tree-id4944 . -897) (undo-tree-id4945 . -897) (undo-tree-id4946 . 27) (undo-tree-id4947 . -906) (undo-tree-id4948 . -924) (undo-tree-id4949 . -924) (undo-tree-id4950 . -924) (undo-tree-id4951 . -924) (undo-tree-id4952 . -924) (undo-tree-id4953 . -924) (undo-tree-id4954 . -924) (undo-tree-id4955 . -924) (undo-tree-id4956 . -924) (undo-tree-id4957 . -924) (undo-tree-id4958 . -924) (undo-tree-id4959 . -924) (undo-tree-id4960 . -924) (undo-tree-id4961 . -924) (undo-tree-id4962 . -924) (undo-tree-id4963 . -924) (undo-tree-id4964 . -924) (undo-tree-id4965 . -924) (undo-tree-id4966 . -924) (undo-tree-id4967 . -924) (undo-tree-id4968 . -924) (undo-tree-id4969 . -924) (undo-tree-id4970 . -924) (undo-tree-id4971 . -924) (undo-tree-id4972 . -924) (undo-tree-id4973 . -924) (undo-tree-id4974 . -924) (undo-tree-id4975 . -924) (undo-tree-id4976 . -924) (undo-tree-id4977 . -924) (undo-tree-id4978 . -924) (undo-tree-id4979 . -924) (undo-tree-id4980 . -924) (undo-tree-id4981 . -924) (undo-tree-id4982 . -924) (undo-tree-id4983 . -14) (undo-tree-id4984 . -14) (undo-tree-id4985 . -14) (undo-tree-id4986 . -14) (undo-tree-id4987 . -14) (undo-tree-id4988 . -14) (undo-tree-id4989 . -14) (undo-tree-id4990 . -14) (undo-tree-id4991 . -14) (undo-tree-id4992 . -14) (undo-tree-id4993 . -14) (undo-tree-id4994 . -14) (undo-tree-id4995 . -14) (undo-tree-id4996 . -14) (undo-tree-id4997 . -14) (undo-tree-id4998 . -14) (undo-tree-id4999 . -14) (undo-tree-id5000 . -14) (undo-tree-id5001 . -14) (undo-tree-id5002 . 920) (undo-tree-id5003 . -12) (undo-tree-id5004 . -14) (undo-tree-id5005 . -14) (undo-tree-id5006 . -14) (undo-tree-id5007 . -14) (undo-tree-id5008 . -14) (undo-tree-id5009 . -14) (undo-tree-id5010 . -14) (undo-tree-id5011 . -14) (undo-tree-id5012 . -14) (undo-tree-id5013 . -14) (undo-tree-id5014 . -14) (undo-tree-id5015 . -14) (undo-tree-id5016 . -14) (undo-tree-id5017 . -14) (undo-tree-id5018 . -14) (undo-tree-id5019 . -14) (undo-tree-id5020 . -14) (undo-tree-id5021 . -14) (undo-tree-id5022 . -14) (undo-tree-id5023 . -14) (undo-tree-id5024 . -14) (undo-tree-id5025 . -14) (undo-tree-id5026 . -14) (undo-tree-id5027 . -14) (undo-tree-id5028 . -14) (undo-tree-id5029 . -14)) nil (25447 49607 529953 340000) 0 nil])
([nil nil ((#("    
" 0 1 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 4 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 5 (org-category "20220718143717-natural_language_processing" wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1091) (undo-tree-id5100 . 5) (undo-tree-id5101 . -5) (undo-tree-id5102 . 5) (undo-tree-id5103 . -5) (undo-tree-id5104 . -5) (undo-tree-id5105 . -5) (undo-tree-id5106 . -5) (undo-tree-id5107 . -5) (undo-tree-id5108 . -5) (undo-tree-id5109 . -5) (undo-tree-id5110 . -5) (t 25447 49607 544753 900000)) nil (25447 49966 695383 407000) 0 nil])
([nil nil ((#("* Backlinks
" 0 1 (org-category "20220718143717-natural_language_processing" composition (0 1 [9673]) face (org-superstar-header-bullet org-level-1) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 1 2 (org-category "20220718143717-natural_language_processing" face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 2 11 (org-category "20220718143717-natural_language_processing" face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 11 12 (org-category "20220718143717-natural_language_processing" wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 127) (undo-tree-id5072 . -10) (undo-tree-id5073 . -10) (undo-tree-id5074 . -10) (undo-tree-id5075 . -10) (undo-tree-id5076 . -12) (undo-tree-id5077 . 10) (undo-tree-id5078 . -11) (undo-tree-id5079 . -12) (undo-tree-id5080 . -12) (undo-tree-id5081 . -12) (undo-tree-id5082 . -12) (undo-tree-id5083 . -12) (undo-tree-id5084 . -12) (undo-tree-id5085 . -12) (undo-tree-id5086 . -12) (undo-tree-id5087 . -12) (undo-tree-id5088 . -12) (undo-tree-id5089 . -12) (undo-tree-id5090 . -12) (undo-tree-id5091 . -12) (undo-tree-id5092 . -12) (undo-tree-id5093 . -12) (undo-tree-id5094 . -12) (undo-tree-id5095 . -12) (undo-tree-id5096 . -12) (undo-tree-id5097 . -12) (undo-tree-id5098 . -12) (undo-tree-id5099 . -12)) nil (25447 49966 695364 536000) 0 nil])
([nil nil ((#("
" 0 1 (org-category "20220718143717-natural_language_processing" wrap-prefix "" line-prefix "" fontified t)) . 127) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1)) nil (25447 49966 695322 365000) 0 nil])
([nil nil ((1016 . 1018) (1009 . 1016) (1003 . 1007) (#(" " 0 1 (wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil org-category "20220718143717-natural_language_processing")) . 1003) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (1002 . 1003) (988 . 1005) (#("i" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -988) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (#("n" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -989) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (#("i" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -990) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) 991 (980 . 991) (#("a" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -980) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (#("l" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -981) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) 982 (963 . 982) (#("n" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -963) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) 964 (951 . 964) (#("S" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -951) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (#("o" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -952) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (#("m" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -953) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (#("e" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -954) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (#("t" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -955) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (#("i" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -956) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (#("m" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -957) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (#("e" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -958) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (#("s" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -959) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (#(" " 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -960) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (#("t" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -961) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (#("h" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -962) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (#("e" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -963) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (#(" " 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -964) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (#("v" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -965) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (#("u" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -966) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) 967 (965 . 967) (#("c" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -965) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) 966 (950 . 966) (t 25447 49966 720900 300000)) nil (25447 51055 281879 357000) 0 nil])
([nil current ((1012 . 1016) (#("c" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -1012) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (#("e" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t org-category "20220718143717-natural_language_processing")) . -1013) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) 1014 (1009 . 1014)) nil (25447 51055 275970 727000) 0 nil])
nil
