(undo-tree-save-format-version . 1)
"9c04a9d5e9395383d5b4181ece0a5293c2df1287"
[nil nil nil nil (25367 8747 233013 580000) 0 nil]
([nil nil ((#("%?" 0 2 (fontified nil line-prefix "" wrap-prefix "")) . -95) (97 . 97) (95 . 98) (#(":ID: 7824fb6d-db81-40ec-81e2-699b6db306e3" 0 1 (fontified nil line-prefix "" wrap-prefix "") 1 3 (fontified nil line-prefix "" wrap-prefix "") 3 4 (fontified nil line-prefix "" wrap-prefix "") 4 5 (fontified nil line-prefix "" wrap-prefix "") 5 41 (fontified nil line-prefix "" wrap-prefix "")) . -14) (14 . 102) (14 . 15) (1 . 20) (1 . 28) (t . -1)) nil (25367 8747 233010 858000) 0 nil])
([nil nil ((107 . 111) (106 . 108) (104 . 106) (103 . 105) (102 . 104) (100 . 102) (96 . 100) (95 . 96) 95) nil (25367 8747 233007 238000) 0 nil])
([nil nil ((nil rear-nonsticky nil 179 . 180) (nil fontified nil 105 . 180) (105 . 180) 104) nil (25367 8747 233003 803000) 0 nil])
([nil nil ((267 . 268) (nil rear-nonsticky nil 266 . 267) (nil fontified nil 201 . 267) (201 . 267) (200 . 201) (191 . 200) (190 . 191) (#("*" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -190) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -191) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 192 (190 . 192) (189 . 190) 179) nil (25367 8747 233000 281000) 0 nil])
([nil nil ((200 . 268) (#(" " 0 1 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . 199) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (200 . 201) (#("~Can Language Models Encode Perceptual Structure Without Grounding?~" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1 font-lock-multiline t org-emphasis t invisible t) 1 66 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face (org-code org-level-1) font-lock-multiline t org-emphasis t) 66 67 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t rear-nonsticky t face (org-code org-level-1) font-lock-multiline t org-emphasis t) 67 68 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1 font-lock-multiline t org-emphasis t invisible t)) . 200) (undo-tree-id40 . -1)) nil (25367 8747 232989 469000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . 198) (undo-tree-id35 . -1)) nil (25367 8747 232980 262000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . 190) (undo-tree-id34 . -1)) nil (25367 8747 232977 510000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1582 . 1583) (nil fontified nil 1561 . 1583) (nil fontified nil 1513 . 1561) (nil fontified nil 1467 . 1513) (nil fontified nil 1420 . 1467) (nil fontified nil 1371 . 1420) (nil fontified nil 1326 . 1371) (nil fontified nil 1279 . 1326) (nil fontified nil 1233 . 1279) (nil fontified nil 1186 . 1233) (nil fontified nil 1137 . 1186) (nil fontified nil 1091 . 1137) (nil fontified nil 1044 . 1091) (nil fontified nil 995 . 1044) (nil fontified nil 950 . 995) (nil fontified nil 903 . 950) (nil fontified nil 865 . 903) (nil fontified nil 819 . 865) (nil fontified nil 774 . 819) (nil fontified nil 733 . 774) (nil fontified nil 690 . 733) (nil fontified nil 643 . 690) (nil fontified nil 593 . 643) (nil fontified nil 546 . 593) (nil fontified nil 500 . 546) (nil fontified nil 453 . 500) (nil fontified nil 409 . 453) (nil fontified nil 363 . 409) (nil fontified nil 321 . 363) (nil fontified nil 278 . 321) (278 . 1583) (277 . 278) (#(":" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -277) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("
" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)))) . -278) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 279 (#(" " 0 1 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . 278) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (279 . 280) (273 . 279) (#("E" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -273) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("R" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -274) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 275 (269 . 275) (267 . 269) (266 . 267) 198) nil (25367 8747 232970 158000) 0 nil])
([nil nil ((95 . 115)) nil (25367 8747 232939 219000) 0 nil])
([nil current ((136 . 137) (nil font-lock-fontified t 129 . 136) (nil cursor-sensor-functions (svg-tag--cursor-function) 129 . 136) (nil face org-meta-line 129 . 136) (nil fontified t 129 . 136) (nil line-prefix "" 129 . 136) (nil wrap-prefix "" 129 . 136) (129 . 136) (126 . 129) (#(" " 0 1 (font-lock-fontified t cursor-sensor-functions (svg-tag--cursor-function) fontified t line-prefix "" wrap-prefix "" face org-meta-line)) . -126) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 127 (125 . 127) (118 . 125) (#(" " 0 1 (font-lock-fontified t cursor-sensor-functions (svg-tag--cursor-function) fontified t line-prefix "" wrap-prefix "" face org-meta-line)) . -118) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 119 (114 . 119)) nil (25367 8747 232931 24000) 0 nil])
nil
