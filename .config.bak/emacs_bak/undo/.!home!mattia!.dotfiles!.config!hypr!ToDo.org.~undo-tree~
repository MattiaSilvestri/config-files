(undo-tree-save-format-version . 1)
"9e4b499ca105efa98e5ec3b3c0429ee68c192bb5"
[nil nil nil nil (25410 42575 112625 676000) 0 nil]
([nil nil ((1 . 2) (#("#" 0 1 (fontified t line-prefix "" wrap-prefix "" font-lock-fontified t face font-lock-comment-face)) . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 2 (1 . 2) (#("#" 0 1 (fontified t font-lock-fontified t face font-lock-comment-face line-prefix "" wrap-prefix "")) . 1) (t 25410 42489 688845 344000)) nil (25410 42648 875689 458000) 0 nil])
([nil nil ((25 . 26)) nil (25410 42648 875678 897000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -56) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 57 (56 . 57)) nil (25410 42648 875676 926000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -94) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 95 (94 . 95)) nil (25410 42648 875664 180000) 0 nil])
([nil nil ((404 . 405) (371 . 372) (346 . 347) (290 . 291) (274 . 275) (194 . 195) (151 . 152) (109 . 110)) nil (25410 42648 875649 666000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 397) (undo-tree-id11 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 365) (undo-tree-id12 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 341) (undo-tree-id13 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 286) (undo-tree-id14 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)))) . 271) (undo-tree-id15 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 192) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 150) (undo-tree-id17 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 109) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 404) nil (25410 42648 875644 328000) 0 nil])
([nil nil ((26 . 28) (#("-" 0 1 (fontified t composition (0 1 [8211]) face org-superstar-item line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . 26)) nil (25410 42648 875626 813000) 0 nil])
([nil nil ((nil fontified t 29 . 32) (nil line-prefix #("  " 0 2 (face org-indent)) 29 . 32) (nil wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) 29 . 32) (nil face (org-checkbox) 29 . 32) (#("[ ]" 0 3 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) face (org-checkbox))) . 29) (32 . 35) 30) nil (25410 42648 875624 454000) 0 nil])
([nil nil ((nil fontified t 29 . 32) (nil line-prefix #("  " 0 2 (face org-indent)) 29 . 32) (nil wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) 29 . 32) (nil face (org-checkbox) 29 . 32) (#("[X]" 0 3 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) face (org-checkbox))) . 29) (32 . 35) 29) nil (25410 42648 875620 476000) 0 nil])
([nil nil ((408 . 409) (407 . 408) (#("-" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) composition (0 1 [8211]) face org-superstar-item)) . 407) (undo-tree-id0 . -1) (375 . 376) (374 . 375) (#("-" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) composition (0 1 [8211]) face org-superstar-item)) . 374) (350 . 351) (349 . 350) (#("-" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) composition (0 1 [8211]) face org-superstar-item)) . 349) (294 . 295) (293 . 294) (#("-" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) composition (0 1 [8211]) face org-superstar-item)) . 293) (278 . 279) (277 . 278) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)))) . 277) (198 . 199) (197 . 198) (#("-" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) composition (0 1 [8211]) face org-superstar-item)) . 197) (155 . 156) (154 . 155) (#("-" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) composition (0 1 [8211]) face org-superstar-item)) . 154) (113 . 114) (112 . 113) (#("-" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) composition (0 1 [8211]) face org-superstar-item)) . 112) (97 . 98) (96 . 97) (#("-" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) composition (0 1 [8211]) face org-superstar-item)) . 96) (57 . 59) (#("-" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) composition (0 1 [8211]) face org-superstar-item)) . 57) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1)) nil (25410 42648 875609 865000) 0 nil])
([nil nil ((436 . 437) (435 . 437) (#("*     " 0 1 (fontified t composition (2 1 [8226]) face org-superstar-item line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 1 6 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 278) (284 . 286) (407 . 439) (#(" * 
 * [ ] Better dialog windows" 0 1 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 1 3 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 3 4 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 4 5 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 5 6 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) composition (2 1 [8226]) face org-superstar-item) 6 7 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 7 10 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) face (org-checkbox)) 10 32 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 407) (undo-tree-id77 . -32) (undo-tree-id78 . -32) (undo-tree-id79 . -32) (undo-tree-id80 . -32) (undo-tree-id81 . -32) (undo-tree-id82 . -32) (undo-tree-id83 . -32) (undo-tree-id84 . -32) (undo-tree-id85 . -32) (undo-tree-id86 . -32) (undo-tree-id87 . -32) (undo-tree-id88 . -32) (undo-tree-id89 . -32) (undo-tree-id90 . -32) (undo-tree-id91 . -32) (undo-tree-id92 . -32) (undo-tree-id93 . -32) (undo-tree-id94 . -32) (undo-tree-id95 . -32) (undo-tree-id96 . -32) (undo-tree-id97 . -32) (undo-tree-id98 . -32) (undo-tree-id99 . -32) (undo-tree-id100 . -32) (undo-tree-id101 . -32) (undo-tree-id102 . -4) (407 . 411) (#("
   " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 1 4 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -435) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -1) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) 439 (435 . 439) (t 25410 42648 889114 266000) 407) nil (25410 54431 335417 325000) 0 nil])
([nil nil ((438 . 439)) nil (25410 54431 329251 593000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) composition (2 1 [8226]) face org-superstar-item)) . 278)) nil (25410 54431 329250 108000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . 278) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1)) nil (25410 54431 329247 414000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -451) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 452 (449 . 452) (439 . 449) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -439) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -440) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -441) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 442 (437 . 442) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -437) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 438 (437 . 438)) nil (25410 54431 329230 447000) 0 nil])
([nil nil ((nil line-prefix #("  " 0 2 (face org-indent)) 60 . 63) (t 25410 54431 343965 433000) (nil wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) 60 . 63) (t 25410 54431 343965 433000) (nil fontified t 60 . 63) (t 25410 54431 343965 433000) (nil face (org-checkbox) 60 . 63) (t 25410 54431 343965 433000) (#("[ ]" 0 3 (face (org-checkbox) fontified t wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 60) (t 25410 54431 343965 433000) (63 . 66) 57 (t 25410 54431 343965 433000)) nil (25415 56424 794879 9000) 0 nil])
([nil nil ((nil line-prefix #("  " 0 2 (face org-indent)) 99 . 102) (nil wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) 99 . 102) (nil fontified t 99 . 102) (nil face (org-checkbox) 99 . 102) (#("[ ]" 0 3 (face (org-checkbox) fontified t wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 99) (102 . 105) 96) nil (25415 56424 794873 954000) 0 nil])
([nil nil ((nil line-prefix #("  " 0 2 (face org-indent)) 433 . 436) (nil wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) 433 . 436) (nil fontified t 433 . 436) (nil face (org-checkbox) 433 . 436) (#("[ ]" 0 3 (face (org-checkbox) fontified t wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 433) (436 . 439) 430) nil (25415 56424 794870 643000) 0 nil])
([nil nil ((3 . 8)) nil (25415 56424 794867 600000) 0 nil])
([nil nil ((31 . 32) (30 . 32) (29 . 30)) nil (25415 56424 794865 731000) 0 nil])
([nil nil ((#("[/]" 0 2 (face (org-checkbox-statistics-todo org-level-1) fontified nil wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "") 2 3 (face (org-checkbox-statistics-todo org-level-1) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 36) (undo-tree-id44 . -2) (undo-tree-id45 . 1) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (30 . 36) (nil line-prefix #("  " 0 2 (face org-indent)) 38 . 41) (nil wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) 38 . 41) (nil fontified t 38 . 41) (nil face (org-checkbox) 38 . 41) (#("[ ]" 0 3 (face (org-checkbox) fontified t wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 38) (41 . 44) 64) nil (25415 56424 794859 337000) 0 nil])
([nil nil ((#("[4/11]" 0 6 (face (org-checkbox-statistics-todo org-level-1) cursor-sensor-functions (svg-tag--cursor-function) display (image :type svg :data "<svg width=\"144\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">   <rect width=\"99\" height=\"23.400000000000002\" x=\"0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect>   <rect width=\"97\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202731\"></rect>   <rect width=\"30.0\" height=\"17.400000000000002\" x=\"3.0\" y=\"3.0\" rx=\"2.0\" fill=\"#ebdbb2\"></rect>   <rect width=\"45\" height=\"23.400000000000002\" x=\"0.0\" y=\"0.0\" rx=\"3.0\" fill=\"#202731\" transform=\"translate(99.000000,0)\"></rect>   <text y=\"15\" x=\"2.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"300\" font-family=\"Fira Code\" transform=\"translate(99.000000,0)\">  4/11</text></svg>" :scale 1.1005847953216374 :ascent center :transform-smoothing t) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 36) (undo-tree-id0 . -6) (undo-tree-id1 . -6) (undo-tree-id2 . -6) (undo-tree-id3 . -6) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -6) (undo-tree-id7 . -6) (undo-tree-id8 . -6) (undo-tree-id9 . -6) (undo-tree-id10 . -6) (undo-tree-id11 . -6) (undo-tree-id12 . -6) (undo-tree-id13 . -6) (undo-tree-id14 . -6) (undo-tree-id15 . -6) (undo-tree-id16 . -6) (undo-tree-id17 . -6) (undo-tree-id18 . -6) (undo-tree-id19 . -6) (undo-tree-id20 . -6) (undo-tree-id21 . -6) (undo-tree-id22 . -6) (undo-tree-id23 . -6) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -6) (undo-tree-id27 . -6) (undo-tree-id28 . -6) (undo-tree-id29 . -6) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (undo-tree-id35 . -6) (undo-tree-id36 . -6) (undo-tree-id37 . -6) (undo-tree-id38 . -6) (undo-tree-id39 . -6) (undo-tree-id40 . -6) (undo-tree-id41 . -6) (undo-tree-id42 . -6) (undo-tree-id43 . -6) (30 . 36) (nil fontified t 41 . 44) (nil line-prefix #("  " 0 2 (face org-indent)) 41 . 44) (nil wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) 41 . 44) (nil face (org-checkbox) 41 . 44) (#("[X]" 0 3 (face (org-checkbox) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 41) (44 . 47) 67) nil (25415 56424 794805 34000) 0 nil])
([nil nil ((#("[3/11]" 0 6 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified nil display (image :type svg :data "<svg width=\"144\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">   <rect width=\"99\" height=\"23.400000000000002\" x=\"0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect>   <rect width=\"97\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect>   <rect width=\"20.999999999999996\" height=\"17.400000000000002\" x=\"3.0\" y=\"3.0\" rx=\"2.0\" fill=\"#ebdbb2\"></rect>   <rect width=\"45\" height=\"23.400000000000002\" x=\"0.0\" y=\"0.0\" rx=\"3.0\" fill=\"#202231\" transform=\"translate(99.000000,0)\"></rect>   <text y=\"15\" x=\"2.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"300\" font-family=\"Fira Code\" transform=\"translate(99.000000,0)\">  3/11</text></svg>" :scale 1.1012987012987012 :ascent center :transform-smoothing t) cursor-sensor-functions (svg-tag--cursor-function) face (org-checkbox-statistics-todo org-level-1))) . 36) (30 . 36) (nil line-prefix #("  " 0 2 (face org-indent)) 41 . 44) (t 25415 56424 800849 656000) (nil wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) 41 . 44) (t 25415 56424 800849 656000) (nil fontified t 41 . 44) (t 25415 56424 800849 656000) (nil face (org-checkbox) 41 . 44) (t 25415 56424 800849 656000) (#("[ ]" 0 3 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) fontified t face (org-checkbox))) . 41) (t 25415 56424 800849 656000) (44 . 47) 38 (t 25415 56424 800849 656000)) nil (25420 7155 736080 774000) 0 nil])
([nil nil ((#("[4/11]" 0 6 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) display (image :type svg :data "<svg width=\"144\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">   <rect width=\"99\" height=\"23.400000000000002\" x=\"0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect>   <rect width=\"97\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect>   <rect width=\"30.0\" height=\"17.400000000000002\" x=\"3.0\" y=\"3.0\" rx=\"2.0\" fill=\"#ebdbb2\"></rect>   <rect width=\"45\" height=\"23.400000000000002\" x=\"0.0\" y=\"0.0\" rx=\"3.0\" fill=\"#202231\" transform=\"translate(99.000000,0)\"></rect>   <text y=\"15\" x=\"2.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"300\" font-family=\"Fira Code\" transform=\"translate(99.000000,0)\">  4/11</text></svg>" :scale 1.1012987012987012 :ascent center :transform-smoothing t) cursor-sensor-functions (svg-tag--cursor-function) face (org-checkbox-statistics-todo org-level-1))) . 36) (30 . 36) (nil fontified t 41 . 44) (nil line-prefix #("  " 0 2 (face org-indent)) 41 . 44) (nil wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) 41 . 44) (nil face (org-checkbox) 41 . 44) (#("[X]" 0 3 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) face (org-checkbox))) . 41) (44 . 47) 39) nil (25420 7155 736073 909000) 0 nil])
([nil nil ((#("[3/11]" 0 6 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) display (image :type svg :data "<svg width=\"144\" height=\"23.400000000000002\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">   <rect width=\"99\" height=\"23.400000000000002\" x=\"0\" y=\"0\" rx=\"3\" fill=\"#ebdbb2\"></rect>   <rect width=\"97\" height=\"21.400000000000002\" x=\"1.0\" y=\"1.0\" rx=\"2.0\" fill=\"#202231\"></rect>   <rect width=\"20.999999999999996\" height=\"17.400000000000002\" x=\"3.0\" y=\"3.0\" rx=\"2.0\" fill=\"#ebdbb2\"></rect>   <rect width=\"45\" height=\"23.400000000000002\" x=\"0.0\" y=\"0.0\" rx=\"3.0\" fill=\"#202231\" transform=\"translate(99.000000,0)\"></rect>   <text y=\"15\" x=\"2.0\" fill=\"#ebdbb2\" font-size=\"16\" font-weight=\"300\" font-family=\"Fira Code\" transform=\"translate(99.000000,0)\">  3/11</text></svg>" :scale 1.1012987012987012 :ascent center :transform-smoothing t) cursor-sensor-functions (svg-tag--cursor-function) face (org-checkbox-statistics-todo org-level-1))) . 36) (30 . 36) (nil fontified t 41 . 44) (nil line-prefix #("  " 0 2 (face org-indent)) 41 . 44) (nil wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) 41 . 44) (nil face (org-checkbox) 41 . 44) (#("[ ]" 0 3 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) face (org-checkbox))) . 41) (44 . 47) 45) nil (25420 7155 736068 858000) 0 nil])
([nil nil ((468 . 469) (467 . 469) (#("p" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -467) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("]" 0 1 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 468) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("[" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -468) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 469 (468 . 470) (467 . 468) (442 . 467) (#(" * 
 * [X] Use media keys" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) fontified nil) 1 3 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 3 4 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 4 5 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) fontified nil) 5 6 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) fontified nil composition (1 1 [8226]) face org-superstar-item) 6 7 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) fontified nil) 7 10 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) fontified nil face (org-checkbox)) 10 25 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) fontified nil)) . 442) (undo-tree-id166 . -25) (undo-tree-id167 . -25) (undo-tree-id168 . -25) (undo-tree-id169 . -11) (undo-tree-id170 . -11) (undo-tree-id171 . -11) (undo-tree-id172 . -11) (undo-tree-id173 . -11) (undo-tree-id174 . -11) (undo-tree-id175 . -11) (undo-tree-id176 . -11) (undo-tree-id177 . -11) (undo-tree-id178 . -11) (undo-tree-id179 . -11) (undo-tree-id180 . -11) (undo-tree-id181 . -11) (undo-tree-id182 . -11) (undo-tree-id183 . -25) (undo-tree-id184 . -25) (undo-tree-id185 . -25) (undo-tree-id186 . -25) (undo-tree-id187 . -25) (undo-tree-id188 . -25) (undo-tree-id189 . -25) (undo-tree-id190 . -25) (undo-tree-id191 . -4) (442 . 446) (#("
   " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 1 4 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -463) (undo-tree-id192 . -1) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) 467 (463 . 467) 449) nil (25420 7155 736057 50000) 0 nil])
([nil nil ((499 . 500) (498 . 500) (464 . 498) (#(" * 
 * [ ] megasync in system tray" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 3 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 3 4 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 4 5 (fontified nil wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 5 6 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil composition (1 1 [8226]) face org-superstar-item) 6 7 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 9 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil face (org-checkbox)) 9 10 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) face (org-checkbox)) 10 16 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 16 34 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 464) (undo-tree-id75 . -34) (undo-tree-id76 . -29) (undo-tree-id77 . -34) (undo-tree-id78 . -34) (undo-tree-id79 . -7) (undo-tree-id80 . -7) (undo-tree-id81 . -7) (undo-tree-id82 . -7) (undo-tree-id83 . -7) (undo-tree-id84 . -7) (undo-tree-id85 . -7) (undo-tree-id86 . -7) (undo-tree-id87 . -7) (undo-tree-id88 . -7) (undo-tree-id89 . -7) (undo-tree-id90 . -7) (undo-tree-id91 . -7) (undo-tree-id92 . -7) (undo-tree-id93 . -7) (undo-tree-id94 . -7) (undo-tree-id95 . -7) (undo-tree-id96 . -7) (undo-tree-id97 . -7) (undo-tree-id98 . -7) (undo-tree-id99 . -7) (undo-tree-id100 . -7) (undo-tree-id101 . -7) (undo-tree-id102 . -7) (undo-tree-id103 . 25) (undo-tree-id104 . 23) (undo-tree-id105 . -19) (464 . 468) (#("
   " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent))) 1 4 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -494) (undo-tree-id106 . -1) (undo-tree-id107 . -4) (undo-tree-id108 . -4) 498 (494 . 498) (480 . 494) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -480) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -481) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -482) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 483 (479 . 483) (476 . 479) (471 . 476) (#("M" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -471) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -472) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("g" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -473) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) 474 (471 . 474) (470 . 471)) nil (25420 7155 735673 453000) 0 nil])
([nil current ((530 . 532) (509 . 530) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -509) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 510 (505 . 510) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -505) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("w" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -506) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -507) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 508 (501 . 508)) nil (25420 7155 732984 12000) 0 nil])
nil
